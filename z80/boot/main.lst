                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 2.8.0 #5117 (Mar 23 2008) (MINGW32)
                              4 ; This file was generated Sun Mar 20 21:54:53 2016
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _init_screen
                             14 	.globl _update_rom
                             15 	.globl _update_disks
                             16 	.globl _get_flags
                             17 	.globl _get_dsk_name
                             18 	.globl _display_fn
                             19 	.globl _show_sel
                             20 	.globl _hide_sel
                             21 	.globl _calc_sel
                             22 	.globl _input_box
                             23 	.globl _yes_or_no
                             24 	.globl _clrscr
                             25 	.globl _read_dir
                             26 	.globl _qsort
                             27 	.globl _swap_name
                             28 	.globl _comp_name
                             29 	.globl _show_table
                             30 	.globl _display_path
                             31 	.globl _print_pad_8
                             32 	.globl _pport_close
                             33 	.globl _pport_open
                             34 	.globl _pport_receive
                             35 	.globl _pport_send_data
                             36 	.globl _pport_send
                             37 	.globl _strupr
                             38 	.globl _strlwr
                             39 	.globl _putbyte
                             40 	.globl _putdig
                             41 	.globl _halt
                             42 	.globl _getkey
                             43 	.globl _readkey
                             44 	.globl _getcode
                             45 	.globl _key_pushed
                             46 	.globl _key_last
                             47 	.globl _sound_bit
                             48 	.globl _code_table
                             49 	.globl _save_scr_buff
                             50 	.globl _pport_good
                             51 	.globl _pport_pktsize
                             52 	.globl _pport_datasize
                             53 	.globl _pport_result
                             54 	.globl _path
                             55 	.globl _cmd_pos
                             56 	.globl _cmd
                             57 	.globl _sely
                             58 	.globl _selx
                             59 	.globl _files_sel
                             60 	.globl _files_table_start
                             61 	.globl _files_size
                             62 	.globl _files
                             63 ;--------------------------------------------------------
                             64 ; special function registers
                             65 ;--------------------------------------------------------
                    001F     66 _PPORT	=	0x001f
                    00FE     67 _KPORT	=	0x00fe
                    FEFE     68 _KPORT0	=	0xfefe
                    FDFE     69 _KPORT1	=	0xfdfe
                    FBFE     70 _KPORT2	=	0xfbfe
                    F7FE     71 _KPORT3	=	0xf7fe
                    EFFE     72 _KPORT4	=	0xeffe
                    DFFE     73 _KPORT5	=	0xdffe
                    BFFE     74 _KPORT6	=	0xbffe
                    7FFE     75 _KPORT7	=	0x7ffe
                    7FFD     76 _MEMPORT	=	0x7ffd
                             77 ;--------------------------------------------------------
                             78 ;  ram data
                             79 ;--------------------------------------------------------
                             80 	.area _DATA
   0000                      81 _files::
   0000                      82 	.ds 14336
   3800                      83 _files_size::
   3800                      84 	.ds 2
   3802                      85 _files_table_start::
   3802                      86 	.ds 2
   3804                      87 _files_sel::
   3804                      88 	.ds 2
   3806                      89 _selx::
   3806                      90 	.ds 1
   3807                      91 _sely::
   3807                      92 	.ds 1
   3808                      93 _cmd::
   3808                      94 	.ds 25
   3821                      95 _cmd_pos::
   3821                      96 	.ds 1
   3822                      97 _path::
   3822                      98 	.ds 65
   3863                      99 _pport_result::
   3863                     100 	.ds 2
   3865                     101 _pport_datasize::
   3865                     102 	.ds 2
   3867                     103 _pport_pktsize::
   3867                     104 	.ds 2
   3869                     105 _pport_good::
   3869                     106 	.ds 1
   386A                     107 _save_scr_buff::
   386A                     108 	.ds 6912
   536A                     109 _code_table::
   536A                     110 	.ds 128
   53EA                     111 _sound_bit::
   53EA                     112 	.ds 1
   53EB                     113 _key_last::
   53EB                     114 	.ds 1
   53EC                     115 _key_pushed::
   53EC                     116 	.ds 1
                            117 ;--------------------------------------------------------
                            118 ; overlayable items in  ram 
                            119 ;--------------------------------------------------------
                            120 	.area _OVERLAY
                            121 ;--------------------------------------------------------
                            122 ; external initialized ram data
                            123 ;--------------------------------------------------------
                            124 ;--------------------------------------------------------
                            125 ; global & static initialisations
                            126 ;--------------------------------------------------------
                            127 	.area _HOME
                            128 	.area _GSINIT
                            129 	.area _GSFINAL
                            130 	.area _GSINIT
                            131 ;main.c:33: byte selx = 1, sely = 3;
                            132 ;	genAssign
   0000 FD 21r06s38         133 	ld	iy,#_selx
   0004 FD 36 00 01         134 	ld	0(iy),#0x01
                            135 ;main.c:33: 
                            136 ;	genAssign
   0008 FD 21r07s38         137 	ld	iy,#_sely
   000C FD 36 00 03         138 	ld	0(iy),#0x03
                            139 ;main.c:44: byte pport_good = 0;
                            140 ;	genAssign
   0010 FD 21r69s38         141 	ld	iy,#_pport_good
   0014 FD 36 00 00         142 	ld	0(iy),#0x00
                            143 ;main.c:48: byte code_table[ 0x80 ] = { 0, 'a', 'q', '1', '0', 'p', 0x0d, ' ',
                            144 ;	genArrayInit
                            145 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0018 21r6As53            146 	ld	hl,#_code_table
   001B CDr00s00            147 	call	__initrleblock
   001E 28                  148 	.db	40
   001F 00 61 71 31 30 70   149 	.db	0x00, 0x61, 0x71, 0x31, 0x30, 0x70, 0x0D, 0x20
        0D 20
   0027 7A 73 77 32 39 6F   150 	.db	0x7A, 0x73, 0x77, 0x32, 0x39, 0x6F, 0x6C, 0x00
        6C 00
   002F 78 64 65 33 38 69   151 	.db	0x78, 0x64, 0x65, 0x33, 0x38, 0x69, 0x6B, 0x6D
        6B 6D
   0037 63 66 72 34 37 75   152 	.db	0x63, 0x66, 0x72, 0x34, 0x37, 0x75, 0x6A, 0x6E
        6A 6E
   003F 76 67 74 35 36 79   153 	.db	0x76, 0x67, 0x74, 0x35, 0x36, 0x79, 0x68, 0x62
        68 62
   0047 E7 00               154 	.db	#-25,#0x00
   0049 27                  155 	.db	39
   004A 41 51 00 0C 50 0D   156 	.db	0x41, 0x51, 0x00, 0x0C, 0x50, 0x0D, 0x20, 0x5A
        20 5A
   0052 53 57 00 87 4F 4C   157 	.db	0x53, 0x57, 0x00, 0x87, 0x4F, 0x4C, 0x00, 0x58
        00 58
   005A 44 45 00 09 49 4B   158 	.db	0x44, 0x45, 0x00, 0x09, 0x49, 0x4B, 0x4D, 0x43
        4D 43
   0062 46 52 00 0B 55 4A   159 	.db	0x46, 0x52, 0x00, 0x0B, 0x55, 0x4A, 0x4E, 0x56
        4E 56
   006A 47 54 08 0A 59 48   160 	.db	0x47, 0x54, 0x08, 0x0A, 0x59, 0x48, 0x42
        42
   0071 00                  161 	.db	0
                            162 ;main.c:76: byte sound_bit = 0;
                            163 ;	genAssign
   0072 FD 21rEAs53         164 	ld	iy,#_sound_bit
   0076 FD 36 00 00         165 	ld	0(iy),#0x00
                            166 ;main.c:132: byte key_last = 0;
                            167 ;	genAssign
   007A FD 21rEBs53         168 	ld	iy,#_key_last
   007E FD 36 00 00         169 	ld	0(iy),#0x00
                            170 ;main.c:133: byte key_pushed = 0;
                            171 ;	genAssign
   0082 FD 21rECs53         172 	ld	iy,#_key_pushed
   0086 FD 36 00 00         173 	ld	0(iy),#0x00
                            174 ;--------------------------------------------------------
                            175 ; Home
                            176 ;--------------------------------------------------------
                            177 	.area _HOME
                            178 	.area _HOME
                            179 ;--------------------------------------------------------
                            180 ; code
                            181 ;--------------------------------------------------------
                            182 	.area _CODE
                            183 ;main.c:65: byte getcode( byte a, byte b )
                            184 ;	genLabel
                            185 ;	genFunction
                            186 ;	---------------------------------
                            187 ; Function getcode
                            188 ; ---------------------------------
   0000                     189 _getcode_start::
   0000                     190 _getcode:
   0000 DD E5               191 	push	ix
   0002 DD 21 00 00         192 	ld	ix,#0
   0006 DD 39               193 	add	ix,sp
                            194 ;main.c:67: if ( b & 0x01 ) return 0x80 | ( 0 << 3 ) | a;
                            195 ;	genAnd
                            196 ;	AOP_STK for 
   0008 DD 7E 05            197 	ld	a,5(ix)
   000B E6 01               198 	and	a,#0x01
   000D 28 08               199 	jr	Z,00102$
                            200 ;	genOr
                            201 ;	AOP_STK for 
   000F DD 7E 04            202 	ld	a,4(ix)
   0012 F6 80               203 	or	a,#0x80
   0014 6F                  204 	ld	l,a
                            205 ;	genRet
                            206 ; Dump of IC_LEFT: type AOP_STR size 1
   0015 18 3E               207 	jr	00111$
                            208 ;	genLabel
   0017                     209 00102$:
                            210 ;main.c:68: if ( b & 0x02 ) return 0x80 | ( 1 << 3 ) | a;
                            211 ;	genAnd
                            212 ;	AOP_STK for 
   0017 DD 7E 05            213 	ld	a,5(ix)
   001A E6 02               214 	and	a,#0x02
   001C 28 08               215 	jr	Z,00104$
                            216 ;	genOr
                            217 ;	AOP_STK for 
   001E DD 7E 04            218 	ld	a,4(ix)
   0021 F6 88               219 	or	a,#0x88
   0023 6F                  220 	ld	l,a
                            221 ;	genRet
                            222 ; Dump of IC_LEFT: type AOP_STR size 1
   0024 18 2F               223 	jr	00111$
                            224 ;	genLabel
   0026                     225 00104$:
                            226 ;main.c:69: if ( b & 0x04 ) return 0x80 | ( 2 << 3 ) | a;
                            227 ;	genAnd
                            228 ;	AOP_STK for 
   0026 DD 7E 05            229 	ld	a,5(ix)
   0029 E6 04               230 	and	a,#0x04
   002B 28 08               231 	jr	Z,00106$
                            232 ;	genOr
                            233 ;	AOP_STK for 
   002D DD 7E 04            234 	ld	a,4(ix)
   0030 F6 90               235 	or	a,#0x90
   0032 6F                  236 	ld	l,a
                            237 ;	genRet
                            238 ; Dump of IC_LEFT: type AOP_STR size 1
   0033 18 20               239 	jr	00111$
                            240 ;	genLabel
   0035                     241 00106$:
                            242 ;main.c:70: if ( b & 0x08 ) return 0x80 | ( 3 << 3 ) | a;
                            243 ;	genAnd
                            244 ;	AOP_STK for 
   0035 DD 7E 05            245 	ld	a,5(ix)
   0038 E6 08               246 	and	a,#0x08
   003A 28 08               247 	jr	Z,00108$
                            248 ;	genOr
                            249 ;	AOP_STK for 
   003C DD 7E 04            250 	ld	a,4(ix)
   003F F6 98               251 	or	a,#0x98
   0041 6F                  252 	ld	l,a
                            253 ;	genRet
                            254 ; Dump of IC_LEFT: type AOP_STR size 1
   0042 18 11               255 	jr	00111$
                            256 ;	genLabel
   0044                     257 00108$:
                            258 ;main.c:71: if ( b & 0x10 ) return 0x80 | ( 4 << 3 ) | a;
                            259 ;	genAnd
                            260 ;	AOP_STK for 
   0044 DD 7E 05            261 	ld	a,5(ix)
   0047 E6 10               262 	and	a,#0x10
   0049 28 08               263 	jr	Z,00110$
                            264 ;	genOr
                            265 ;	AOP_STK for 
   004B DD 7E 04            266 	ld	a,4(ix)
   004E F6 A0               267 	or	a,#0xA0
   0050 6F                  268 	ld	l,a
                            269 ;	genRet
                            270 ; Dump of IC_LEFT: type AOP_STR size 1
   0051 18 02               271 	jr	00111$
                            272 ;	genLabel
   0053                     273 00110$:
                            274 ;main.c:73: return 0;
                            275 ;	genRet
                            276 ; Dump of IC_LEFT: type AOP_LIT size 1
   0053 2E 00               277 	ld	l,#0x00
                            278 ;	genLabel
   0055                     279 00111$:
                            280 ;	genEndFunction
   0055 DD E1               281 	pop	ix
   0057 C9                  282 	ret
   0058                     283 _getcode_end::
                            284 ;main.c:78: byte readkey()
                            285 ;	genLabel
                            286 ;	genFunction
                            287 ;	---------------------------------
                            288 ; Function readkey
                            289 ; ---------------------------------
   0058                     290 _readkey_start::
   0058                     291 _readkey:
   0058 DD E5               292 	push	ix
   005A DD 21 00 00         293 	ld	ix,#0
   005E DD 39               294 	add	ix,sp
   0060 21 FF FF            295 	ld	hl,#-1
   0063 39                  296 	add	hl,sp
   0064 F9                  297 	ld	sp,hl
                            298 ;main.c:82: kdata = PPORT;
                            299 ;	genAssign
                            300 ;Z80 AOP_SFR for _PPORT banked:0 bc:1 de:0
   0065 DB 1F               301 	in	a,(_PPORT)
                            302 ;main.c:84: if ( kdata & 0x01 ) return 0x09;
                            303 ;	genAnd
   0067 4F                  304 	ld	c,a
   0068 E6 01               305 	and	a,#0x01
   006A 28 05               306 	jr	Z,00102$
                            307 ;	genRet
                            308 ; Dump of IC_LEFT: type AOP_LIT size 1
   006C 2E 09               309 	ld	l,#0x09
   006E C3rEDs01            310 	jp	00160$
                            311 ;	genLabel
   0071                     312 00102$:
                            313 ;main.c:85: if ( kdata & 0x02 ) return 0x08;
                            314 ;	genAnd
   0071 79                  315 	ld	a,c
   0072 E6 02               316 	and	a,#0x02
   0074 28 05               317 	jr	Z,00104$
                            318 ;	genRet
                            319 ; Dump of IC_LEFT: type AOP_LIT size 1
   0076 2E 08               320 	ld	l,#0x08
   0078 C3rEDs01            321 	jp	00160$
                            322 ;	genLabel
   007B                     323 00104$:
                            324 ;main.c:86: if ( kdata & 0x04 ) return 0x0a;
                            325 ;	genAnd
   007B 79                  326 	ld	a,c
   007C E6 04               327 	and	a,#0x04
   007E 28 05               328 	jr	Z,00106$
                            329 ;	genRet
                            330 ; Dump of IC_LEFT: type AOP_LIT size 1
   0080 2E 0A               331 	ld	l,#0x0A
   0082 C3rEDs01            332 	jp	00160$
                            333 ;	genLabel
   0085                     334 00106$:
                            335 ;main.c:87: if ( kdata & 0x08 ) return 0x0b;
                            336 ;	genAnd
   0085 79                  337 	ld	a,c
   0086 E6 08               338 	and	a,#0x08
   0088 28 05               339 	jr	Z,00108$
                            340 ;	genRet
                            341 ; Dump of IC_LEFT: type AOP_LIT size 1
   008A 2E 0B               342 	ld	l,#0x0B
   008C C3rEDs01            343 	jp	00160$
                            344 ;	genLabel
   008F                     345 00108$:
                            346 ;main.c:88: if ( kdata & 0x10 ) return 0x0d;
                            347 ;	genAnd
   008F 79                  348 	ld	a,c
   0090 E6 10               349 	and	a,#0x10
   0092 28 05               350 	jr	Z,00110$
                            351 ;	genRet
                            352 ; Dump of IC_LEFT: type AOP_LIT size 1
   0094 2E 0D               353 	ld	l,#0x0D
   0096 C3rEDs01            354 	jp	00160$
                            355 ;	genLabel
   0099                     356 00110$:
                            357 ;main.c:90: kdata = ~KPORT0;
                            358 ;	genCpl
                            359 ;Z80 AOP_SFR for _KPORT0 banked:1 bc:1 de:0
   0099 3E FE               360 	ld	a,#>_KPORT0
   009B DB FE               361 	in	a,(#<_KPORT0)
   009D 2F                  362 	cpl
   009E 47                  363 	ld	b,a
                            364 ;	genAssign
   009F 48                  365 	ld	c,b
                            366 ;main.c:91: k_CS = kdata & 1;
                            367 ;	genAnd
   00A0 79                  368 	ld	a,c
   00A1 E6 01               369 	and	a,#0x01
   00A3 47                  370 	ld	b,a
                            371 ;main.c:92: kdata &= ~1;
                            372 ;	genAnd
   00A4 79                  373 	ld	a,c
   00A5 E6 FE               374 	and	a,#0xFE
   00A7 4F                  375 	ld	c,a
                            376 ;main.c:93: kcode = getcode( 0, kdata );
                            377 ;	genIpush
                            378 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   00A8 C5                  379 	push	bc
                            380 ;	genIpush
                            381 ;	genCall
   00A9 41                  382 	ld	b,c
   00AA 0E 00               383 	ld	c,#0x00
   00AC C5                  384 	push	bc
   00AD CDr00s00            385 	call	_getcode
   00B0 5D                  386 	ld	e,l
   00B1 F1                  387 	pop	af
   00B2 C1                  388 	pop	bc
                            389 ;	genAssign
                            390 ;	(registers are the same)
                            391 ;main.c:95: kdata = ~KPORT7;
                            392 ;	genCpl
                            393 ;Z80 AOP_SFR for _KPORT7 banked:1 bc:1 de:1
   00B3 3E 7F               394 	ld	a,#>_KPORT7
   00B5 DB FE               395 	in	a,(#<_KPORT7)
   00B7 2F                  396 	cpl
   00B8 57                  397 	ld	d,a
                            398 ;	genAssign
   00B9 4A                  399 	ld	c,d
                            400 ;main.c:96: k_SS = kdata & 2;
                            401 ;	genAnd
                            402 ;	AOP_STK for _readkey_k_SS_1_1
   00BA 79                  403 	ld	a,c
   00BB E6 02               404 	and	a,#0x02
   00BD DD 77 FF            405 	ld	-1(ix),a
                            406 ;main.c:97: kdata &= ~2;
                            407 ;	genAnd
   00C0 79                  408 	ld	a,c
   00C1 E6 FD               409 	and	a,#0xFD
   00C3 4F                  410 	ld	c,a
                            411 ;main.c:98: if ( !kcode ) kcode = getcode( 7, kdata );
                            412 ;	genIfx
   00C4 AF                  413 	xor	a,a
   00C5 B3                  414 	or	a,e
   00C6 20 0D               415 	jr	NZ,00112$
                            416 ;	genIpush
                            417 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   00C8 C5                  418 	push	bc
                            419 ;	genIpush
                            420 ;	genCall
   00C9 41                  421 	ld	b,c
   00CA 0E 07               422 	ld	c,#0x07
   00CC C5                  423 	push	bc
   00CD CDr00s00            424 	call	_getcode
   00D0 4D                  425 	ld	c,l
   00D1 F1                  426 	pop	af
   00D2 F1                  427 	pop	af
   00D3 47                  428 	ld	b,a
                            429 ;	genAssign
   00D4 59                  430 	ld	e,c
                            431 ;	genLabel
   00D5                     432 00112$:
                            433 ;main.c:100: if ( !kcode ) kcode = getcode( 1, ~KPORT1 );
                            434 ;	genIfx
   00D5 AF                  435 	xor	a,a
   00D6 B3                  436 	or	a,e
   00D7 20 13               437 	jr	NZ,00114$
                            438 ;	genCpl
                            439 ;Z80 AOP_SFR for _KPORT1 banked:1 bc:1 de:0
   00D9 3E FD               440 	ld	a,#>_KPORT1
   00DB DB FE               441 	in	a,(#<_KPORT1)
   00DD 2F                  442 	cpl
   00DE 4F                  443 	ld	c,a
                            444 ;	genIpush
                            445 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   00DF C5                  446 	push	bc
                            447 ;	genIpush
                            448 ;	genCall
   00E0 41                  449 	ld	b,c
   00E1 0E 01               450 	ld	c,#0x01
   00E3 C5                  451 	push	bc
   00E4 CDr00s00            452 	call	_getcode
   00E7 4D                  453 	ld	c,l
   00E8 F1                  454 	pop	af
   00E9 F1                  455 	pop	af
   00EA 47                  456 	ld	b,a
                            457 ;	genAssign
   00EB 59                  458 	ld	e,c
                            459 ;	genLabel
   00EC                     460 00114$:
                            461 ;main.c:101: if ( !kcode ) kcode = getcode( 2, ~KPORT2 );
                            462 ;	genIfx
   00EC AF                  463 	xor	a,a
   00ED B3                  464 	or	a,e
   00EE 20 13               465 	jr	NZ,00116$
                            466 ;	genCpl
                            467 ;Z80 AOP_SFR for _KPORT2 banked:1 bc:1 de:0
   00F0 3E FB               468 	ld	a,#>_KPORT2
   00F2 DB FE               469 	in	a,(#<_KPORT2)
   00F4 2F                  470 	cpl
   00F5 4F                  471 	ld	c,a
                            472 ;	genIpush
                            473 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   00F6 C5                  474 	push	bc
                            475 ;	genIpush
                            476 ;	genCall
   00F7 41                  477 	ld	b,c
   00F8 0E 02               478 	ld	c,#0x02
   00FA C5                  479 	push	bc
   00FB CDr00s00            480 	call	_getcode
   00FE 4D                  481 	ld	c,l
   00FF F1                  482 	pop	af
   0100 F1                  483 	pop	af
   0101 47                  484 	ld	b,a
                            485 ;	genAssign
   0102 59                  486 	ld	e,c
                            487 ;	genLabel
   0103                     488 00116$:
                            489 ;main.c:102: if ( !kcode ) kcode = getcode( 3, ~KPORT3 );
                            490 ;	genIfx
   0103 AF                  491 	xor	a,a
   0104 B3                  492 	or	a,e
   0105 20 13               493 	jr	NZ,00118$
                            494 ;	genCpl
                            495 ;Z80 AOP_SFR for _KPORT3 banked:1 bc:1 de:0
   0107 3E F7               496 	ld	a,#>_KPORT3
   0109 DB FE               497 	in	a,(#<_KPORT3)
   010B 2F                  498 	cpl
   010C 4F                  499 	ld	c,a
                            500 ;	genIpush
                            501 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   010D C5                  502 	push	bc
                            503 ;	genIpush
                            504 ;	genCall
   010E 41                  505 	ld	b,c
   010F 0E 03               506 	ld	c,#0x03
   0111 C5                  507 	push	bc
   0112 CDr00s00            508 	call	_getcode
   0115 4D                  509 	ld	c,l
   0116 F1                  510 	pop	af
   0117 F1                  511 	pop	af
   0118 47                  512 	ld	b,a
                            513 ;	genAssign
   0119 59                  514 	ld	e,c
                            515 ;	genLabel
   011A                     516 00118$:
                            517 ;main.c:103: if ( !kcode ) kcode = getcode( 4, ~KPORT4 );
                            518 ;	genIfx
   011A AF                  519 	xor	a,a
   011B B3                  520 	or	a,e
   011C 20 13               521 	jr	NZ,00120$
                            522 ;	genCpl
                            523 ;Z80 AOP_SFR for _KPORT4 banked:1 bc:1 de:0
   011E 3E EF               524 	ld	a,#>_KPORT4
   0120 DB FE               525 	in	a,(#<_KPORT4)
   0122 2F                  526 	cpl
   0123 4F                  527 	ld	c,a
                            528 ;	genIpush
                            529 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0124 C5                  530 	push	bc
                            531 ;	genIpush
                            532 ;	genCall
   0125 41                  533 	ld	b,c
   0126 0E 04               534 	ld	c,#0x04
   0128 C5                  535 	push	bc
   0129 CDr00s00            536 	call	_getcode
   012C 4D                  537 	ld	c,l
   012D F1                  538 	pop	af
   012E F1                  539 	pop	af
   012F 47                  540 	ld	b,a
                            541 ;	genAssign
   0130 59                  542 	ld	e,c
                            543 ;	genLabel
   0131                     544 00120$:
                            545 ;main.c:104: if ( !kcode ) kcode = getcode( 5, ~KPORT5 );
                            546 ;	genIfx
   0131 AF                  547 	xor	a,a
   0132 B3                  548 	or	a,e
   0133 20 13               549 	jr	NZ,00122$
                            550 ;	genCpl
                            551 ;Z80 AOP_SFR for _KPORT5 banked:1 bc:1 de:0
   0135 3E DF               552 	ld	a,#>_KPORT5
   0137 DB FE               553 	in	a,(#<_KPORT5)
   0139 2F                  554 	cpl
   013A 4F                  555 	ld	c,a
                            556 ;	genIpush
                            557 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   013B C5                  558 	push	bc
                            559 ;	genIpush
                            560 ;	genCall
   013C 41                  561 	ld	b,c
   013D 0E 05               562 	ld	c,#0x05
   013F C5                  563 	push	bc
   0140 CDr00s00            564 	call	_getcode
   0143 4D                  565 	ld	c,l
   0144 F1                  566 	pop	af
   0145 F1                  567 	pop	af
   0146 47                  568 	ld	b,a
                            569 ;	genAssign
   0147 59                  570 	ld	e,c
                            571 ;	genLabel
   0148                     572 00122$:
                            573 ;main.c:105: if ( !kcode ) kcode = getcode( 6, ~KPORT6 );
                            574 ;	genIfx
   0148 AF                  575 	xor	a,a
   0149 B3                  576 	or	a,e
   014A 20 13               577 	jr	NZ,00124$
                            578 ;	genCpl
                            579 ;Z80 AOP_SFR for _KPORT6 banked:1 bc:1 de:0
   014C 3E BF               580 	ld	a,#>_KPORT6
   014E DB FE               581 	in	a,(#<_KPORT6)
   0150 2F                  582 	cpl
   0151 4F                  583 	ld	c,a
                            584 ;	genIpush
                            585 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0152 C5                  586 	push	bc
                            587 ;	genIpush
                            588 ;	genCall
   0153 41                  589 	ld	b,c
   0154 0E 06               590 	ld	c,#0x06
   0156 C5                  591 	push	bc
   0157 CDr00s00            592 	call	_getcode
   015A 4D                  593 	ld	c,l
   015B F1                  594 	pop	af
   015C F1                  595 	pop	af
   015D 47                  596 	ld	b,a
                            597 ;	genAssign
   015E 59                  598 	ld	e,c
                            599 ;	genLabel
   015F                     600 00124$:
                            601 ;main.c:107: if ( kcode )
                            602 ;	genIfx
   015F AF                  603 	xor	a,a
   0160 B3                  604 	or	a,e
   0161 CArEBs01            605 	jp	Z,00158$
                            606 ;main.c:109: if ( k_CS ) kcode |= 0x40;
                            607 ;	genIfx
   0164 AF                  608 	xor	a,a
   0165 B0                  609 	or	a,b
   0166 28 04               610 	jr	Z,00126$
                            611 ;	genOr
   0168 7B                  612 	ld	a,e
   0169 F6 40               613 	or	a,#0x40
   016B 5F                  614 	ld	e,a
                            615 ;	genLabel
   016C                     616 00126$:
                            617 ;main.c:110: kcode = code_table[ kcode & 0x7f ];
                            618 ;	genAnd
   016C 7B                  619 	ld	a,e
   016D E6 7F               620 	and	a,#0x7F
                            621 ;	genPlus
   016F C6r6A               622 	add	a,#<_code_table
   0171 4F                  623 	ld	c,a
   0172 3Es53               624 	ld	a,#>_code_table
   0174 CE 00               625 	adc	a,#0x00
   0176 57                  626 	ld	d,a
                            627 ;	genPointerGet
   0177 69                  628 	ld	l,c
   0178 62                  629 	ld	h,d
   0179 4E                  630 	ld	c,(hl)
                            631 ;	genAssign
   017A 59                  632 	ld	e,c
                            633 ;main.c:112: if ( k_SS )
                            634 ;	genIfx
                            635 ;	AOP_STK for _readkey_k_SS_1_1
   017B AF                  636 	xor	a,a
   017C DD B6 FF            637 	or	a,-1(ix)
   017F CArE8s01            638 	jp	Z,00155$
                            639 ;main.c:114: if ( k_CS ) return 0x87;
                            640 ;	genIfx
   0182 AF                  641 	xor	a,a
   0183 B0                  642 	or	a,b
   0184 28 05               643 	jr	Z,00152$
                            644 ;	genRet
                            645 ; Dump of IC_LEFT: type AOP_LIT size 1
   0186 2E 87               646 	ld	l,#0x87
   0188 C3rEDs01            647 	jp	00160$
                            648 ;	genLabel
   018B                     649 00152$:
                            650 ;main.c:115: else if ( kcode == 'm' ) return '.';
                            651 ;	genCmpEq
                            652 ; genCmpEq: left 1, right 1, result 0
   018B 7B                  653 	ld	a,e
   018C D6 6D               654 	sub	a,#0x6D
   018E 28 02               655 	jr	Z,00192$
   0190 18 05               656 	jr	00149$
   0192                     657 00192$:
                            658 ;	genRet
                            659 ; Dump of IC_LEFT: type AOP_LIT size 1
   0192 2E 2E               660 	ld	l,#0x2E
   0194 C3rEDs01            661 	jp	00160$
                            662 ;	genLabel
   0197                     663 00149$:
                            664 ;main.c:116: else if ( kcode == 'v' ) return '/';
                            665 ;	genCmpEq
                            666 ; genCmpEq: left 1, right 1, result 0
   0197 7B                  667 	ld	a,e
   0198 D6 76               668 	sub	a,#0x76
   019A 28 02               669 	jr	Z,00194$
   019C 18 04               670 	jr	00146$
   019E                     671 00194$:
                            672 ;	genRet
                            673 ; Dump of IC_LEFT: type AOP_LIT size 1
   019E 2E 2F               674 	ld	l,#0x2F
   01A0 18 4B               675 	jr	00160$
                            676 ;	genLabel
   01A2                     677 00146$:
                            678 ;main.c:118: else if ( kcode == 'a' ) return 0x81;
                            679 ;	genCmpEq
                            680 ; genCmpEq: left 1, right 1, result 0
   01A2 7B                  681 	ld	a,e
   01A3 D6 61               682 	sub	a,#0x61
   01A5 28 02               683 	jr	Z,00196$
   01A7 18 04               684 	jr	00143$
   01A9                     685 00196$:
                            686 ;	genRet
                            687 ; Dump of IC_LEFT: type AOP_LIT size 1
   01A9 2E 81               688 	ld	l,#0x81
   01AB 18 40               689 	jr	00160$
                            690 ;	genLabel
   01AD                     691 00143$:
                            692 ;main.c:119: else if ( kcode == 'b' ) return 0x82;
                            693 ;	genCmpEq
                            694 ; genCmpEq: left 1, right 1, result 0
   01AD 7B                  695 	ld	a,e
   01AE D6 62               696 	sub	a,#0x62
   01B0 28 02               697 	jr	Z,00198$
   01B2 18 04               698 	jr	00140$
   01B4                     699 00198$:
                            700 ;	genRet
                            701 ; Dump of IC_LEFT: type AOP_LIT size 1
   01B4 2E 82               702 	ld	l,#0x82
   01B6 18 35               703 	jr	00160$
                            704 ;	genLabel
   01B8                     705 00140$:
                            706 ;main.c:120: else if ( kcode == 'c' ) return 0x83;
                            707 ;	genCmpEq
                            708 ; genCmpEq: left 1, right 1, result 0
   01B8 7B                  709 	ld	a,e
   01B9 D6 63               710 	sub	a,#0x63
   01BB 28 02               711 	jr	Z,00200$
   01BD 18 04               712 	jr	00137$
   01BF                     713 00200$:
                            714 ;	genRet
                            715 ; Dump of IC_LEFT: type AOP_LIT size 1
   01BF 2E 83               716 	ld	l,#0x83
   01C1 18 2A               717 	jr	00160$
                            718 ;	genLabel
   01C3                     719 00137$:
                            720 ;main.c:121: else if ( kcode == 'd' ) return 0x84;
                            721 ;	genCmpEq
                            722 ; genCmpEq: left 1, right 1, result 0
   01C3 7B                  723 	ld	a,e
   01C4 D6 64               724 	sub	a,#0x64
   01C6 28 02               725 	jr	Z,00202$
   01C8 18 04               726 	jr	00134$
   01CA                     727 00202$:
                            728 ;	genRet
                            729 ; Dump of IC_LEFT: type AOP_LIT size 1
   01CA 2E 84               730 	ld	l,#0x84
   01CC 18 1F               731 	jr	00160$
                            732 ;	genLabel
   01CE                     733 00134$:
                            734 ;main.c:123: else if ( kcode == 'u' ) return 0x85;
                            735 ;	genCmpEq
                            736 ; genCmpEq: left 1, right 1, result 0
   01CE 7B                  737 	ld	a,e
   01CF D6 75               738 	sub	a,#0x75
   01D1 28 02               739 	jr	Z,00204$
   01D3 18 04               740 	jr	00131$
   01D5                     741 00204$:
                            742 ;	genRet
                            743 ; Dump of IC_LEFT: type AOP_LIT size 1
   01D5 2E 85               744 	ld	l,#0x85
   01D7 18 14               745 	jr	00160$
                            746 ;	genLabel
   01D9                     747 00131$:
                            748 ;main.c:124: else if ( kcode == 'r' ) return 0x86;
                            749 ;	genCmpEq
                            750 ; genCmpEq: left 1, right 1, result 0
   01D9 7B                  751 	ld	a,e
   01DA D6 72               752 	sub	a,#0x72
   01DC 28 02               753 	jr	Z,00206$
   01DE 18 04               754 	jr	00128$
   01E0                     755 00206$:
                            756 ;	genRet
                            757 ; Dump of IC_LEFT: type AOP_LIT size 1
   01E0 2E 86               758 	ld	l,#0x86
   01E2 18 09               759 	jr	00160$
                            760 ;	genLabel
   01E4                     761 00128$:
                            762 ;main.c:125: else return 0;
                            763 ;	genRet
                            764 ; Dump of IC_LEFT: type AOP_LIT size 1
   01E4 2E 00               765 	ld	l,#0x00
   01E6 18 05               766 	jr	00160$
                            767 ;	genLabel
   01E8                     768 00155$:
                            769 ;main.c:127: else return kcode;
                            770 ;	genRet
                            771 ; Dump of IC_LEFT: type AOP_REG size 1
                            772 ;	 reg = e
   01E8 6B                  773 	ld	l,e
   01E9 18 02               774 	jr	00160$
                            775 ;	genLabel
   01EB                     776 00158$:
                            777 ;main.c:129: else return 0;
                            778 ;	genRet
                            779 ; Dump of IC_LEFT: type AOP_LIT size 1
   01EB 2E 00               780 	ld	l,#0x00
                            781 ;	genLabel
   01ED                     782 00160$:
                            783 ;	genEndFunction
   01ED DD F9               784 	ld	sp,ix
   01EF DD E1               785 	pop	ix
   01F1 C9                  786 	ret
   01F2                     787 _readkey_end::
                            788 ;main.c:135: byte getkey()
                            789 ;	genLabel
                            790 ;	genFunction
                            791 ;	---------------------------------
                            792 ; Function getkey
                            793 ; ---------------------------------
   01F2                     794 _getkey_start::
   01F2                     795 _getkey:
                            796 ;main.c:139: if ( key_pushed ) i = 5000;
                            797 ;	genIfx
   01F2 AF                  798 	xor	a,a
   01F3 FD 21rECs53         799 	ld	iy,#_key_pushed
   01F7 FD B6 00            800 	or	a,0(iy)
   01FA 28 05               801 	jr	Z,00102$
                            802 ;	genAssign
   01FC 01 88 13            803 	ld	bc,#0x1388
                            804 ;	genGoto
   01FF 18 03               805 	jr	00139$
                            806 ;	genLabel
   0201                     807 00102$:
                            808 ;main.c:140: else i = 10000;
                            809 ;	genAssign
   0201 01 10 27            810 	ld	bc,#0x2710
                            811 ;main.c:142: while ( i != 0 )
                            812 ;	genLabel
   0204                     813 00139$:
                            814 ;	genAssign
                            815 ;	(registers are the same)
                            816 ;	genLabel
   0204                     817 00107$:
                            818 ;	genIfx
   0204 79                  819 	ld	a,c
   0205 B0                  820 	or	a,b
   0206 28 22               821 	jr	Z,00124$
                            822 ;main.c:144: if (( PPORT & 0x1f ) == 0 && ( KPORT & 0x1f ) == 0x1f )
                            823 ;	genAnd
                            824 ;Z80 AOP_SFR for _PPORT banked:0 bc:1 de:0
   0208 DB 1F               825 	in	a,(_PPORT)
   020A E6 1F               826 	and	a,#0x1F
   020C 28 02               827 	jr	Z,00156$
   020E 18 17               828 	jr	00105$
   0210                     829 00156$:
                            830 ;	genAnd
                            831 ;Z80 AOP_SFR for _KPORT banked:1 bc:1 de:1
   0210 3E 00               832 	ld	a,#>_KPORT
   0212 DB FE               833 	in	a,(#<_KPORT)
   0214 E6 1F               834 	and	a,#0x1F
                            835 ;	genCmpEq
                            836 ; genCmpEq: left 1, right 1, result 0
   0216 5F                  837 	ld	e,a
   0217 D6 1F               838 	sub	a,#0x1F
   0219 28 02               839 	jr	Z,00158$
   021B 18 0A               840 	jr	00105$
   021D                     841 00158$:
                            842 ;main.c:146: key_last = 0;
                            843 ;	genAssign
   021D FD 21rEBs53         844 	ld	iy,#_key_last
   0221 FD 36 00 00         845 	ld	0(iy),#0x00
                            846 ;main.c:147: break;
                            847 ;	genGoto
   0225 18 03               848 	jr	00124$
                            849 ;	genLabel
   0227                     850 00105$:
                            851 ;main.c:149: i--;
                            852 ;	genMinus
   0227 0B                  853 	dec	bc
                            854 ;	genGoto
   0228 18 DA               855 	jr	00107$
                            856 ;main.c:152: while ( true )
                            857 ;	genLabel
   022A                     858 00124$:
                            859 ;main.c:154: byte kdata = readkey();
                            860 ;	genCall
                            861 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   022A CDr58s00            862 	call	_readkey
   022D 4D                  863 	ld	c,l
                            864 ;	genAssign
                            865 ;	(registers are the same)
                            866 ;main.c:157: while ( kdata != 0 && i != 0 )
                            867 ;	genAssign
   022E 11 02 00            868 	ld	de,#0x0002
                            869 ;	genLabel
   0231                     870 00113$:
                            871 ;	genIfx
   0231 AF                  872 	xor	a,a
   0232 B1                  873 	or	a,c
   0233 28 17               874 	jr	Z,00115$
                            875 ;	genIfx
   0235 7B                  876 	ld	a,e
   0236 B2                  877 	or	a,d
   0237 28 13               878 	jr	Z,00115$
                            879 ;main.c:159: if ( kdata != readkey() ) break;
                            880 ;	genCall
                            881 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0239 C5                  882 	push	bc
   023A D5                  883 	push	de
   023B CDr58s00            884 	call	_readkey
   023E 45                  885 	ld	b,l
   023F D1                  886 	pop	de
   0240 78                  887 	ld	a,b
   0241 C1                  888 	pop	bc
   0242 47                  889 	ld	b,a
                            890 ;	genCmpEq
                            891 ; genCmpEq: left 1, right 1, result 0
   0243 79                  892 	ld	a,c
   0244 90                  893 	sub	b
   0245 28 02               894 	jr	Z,00160$
   0247 18 03               895 	jr	00115$
   0249                     896 00160$:
                            897 ;main.c:161: i--;
                            898 ;	genMinus
   0249 1B                  899 	dec	de
                            900 ;	genGoto
   024A 18 E5               901 	jr	00113$
                            902 ;	genLabel
   024C                     903 00115$:
                            904 ;main.c:164: if ( kdata && i == 0 )
                            905 ;	genIfx
   024C AF                  906 	xor	a,a
   024D B1                  907 	or	a,c
   024E 28 51               908 	jr	Z,00120$
                            909 ;	genIfx
   0250 7B                  910 	ld	a,e
                            911 ;main.c:168: for ( i = 0; i < 20; i++ )
                            912 ;	genAssign
   0251 B2                  913 	or	a,d
   0252 20 4D               914 	jr	NZ,00120$
   0254 47                  915 	ld	b,a
                            916 ;	genLabel
   0255                     917 00129$:
                            918 ;	genCmpLt
   0255 78                  919 	ld	a,b
   0256 D6 14               920 	sub	a,#0x14
   0258 30 20               921 	jr	NC,00132$
                            922 ;main.c:170: for ( j = 0; j < 2; j++ );
                            923 ;	genAssign
   025A 1E 02               924 	ld	e,#0x02
                            925 ;	genLabel
   025C                     926 00128$:
                            927 ;	genMinus
   025C 1D                  928 	dec	e
                            929 ;	genIfx
   025D AF                  930 	xor	a,a
   025E B3                  931 	or	a,e
   025F 20 FB               932 	jr	NZ,00128$
                            933 ;main.c:172: sound_bit ^= 0x10;
                            934 ;	genXor
   0261 FD 21rEAs53         935 	ld	iy,#_sound_bit
   0265 FD 7E 00            936 	ld	a,0(iy)
   0268 EE 10               937 	xor	a,#0x10
   026A FD 77 00            938 	ld	0(iy),a
                            939 ;main.c:173: KPORT = sound_bit;
                            940 ;	genAssign
                            941 ;Z80 AOP_SFR for _KPORT banked:1 bc:1 de:0
   026D C5                  942 	push	bc
   026E FD 7E 00            943 	ld	a,0(iy)
   0271 01 FE 00            944 	ld	bc,#_KPORT
   0274 ED 79               945 	out	(c),a
   0276 C1                  946 	pop	bc
                            947 ;main.c:168: for ( i = 0; i < 20; i++ )
                            948 ;	genPlus
                            949 ;	genPlusIncr
   0277 04                  950 	inc	b
                            951 ;	genGoto
   0278 18 DB               952 	jr	00129$
                            953 ;	genLabel
   027A                     954 00132$:
                            955 ;main.c:175: if ( kdata == key_last ) key_pushed = true;
                            956 ;	genCmpEq
                            957 ; genCmpEq: left 1, right 1, result 0
   027A 79                  958 	ld	a,c
   027B FD 21rEBs53         959 	ld	iy,#_key_last
   027F FD 96 00            960 	sub	0(iy)
   0282 28 02               961 	jr	Z,00162$
   0284 18 0A               962 	jr	00117$
   0286                     963 00162$:
                            964 ;	genAssign
   0286 FD 21rECs53         965 	ld	iy,#_key_pushed
   028A FD 36 00 01         966 	ld	0(iy),#0x01
                            967 ;	genGoto
   028E 18 08               968 	jr	00118$
                            969 ;	genLabel
   0290                     970 00117$:
                            971 ;main.c:176: else key_pushed = false;
                            972 ;	genAssign
   0290 FD 21rECs53         973 	ld	iy,#_key_pushed
   0294 FD 36 00 00         974 	ld	0(iy),#0x00
                            975 ;	genLabel
   0298                     976 00118$:
                            977 ;main.c:178: key_last = kdata;
                            978 ;	genAssign
   0298 FD 21rEBs53         979 	ld	iy,#_key_last
   029C FD 71 00            980 	ld	0(iy),c
                            981 ;main.c:179: return kdata;
                            982 ;	genRet
                            983 ; Dump of IC_LEFT: type AOP_REG size 1
                            984 ;	 reg = c
   029F 69                  985 	ld	l,c
   02A0 C9                  986 	ret
                            987 ;	genLabel
   02A1                     988 00120$:
                            989 ;main.c:181: else key_last = 0;
                            990 ;	genAssign
   02A1 FD 21rEBs53         991 	ld	iy,#_key_last
   02A5 FD 36 00 00         992 	ld	0(iy),#0x00
                            993 ;	genGoto
                            994 ;	genLabel
                            995 ;	genEndFunction
   02A9 C3r2As02            996 	jp	00124$
   02AC                     997 _getkey_end::
                            998 ;main.c:185: void halt()
                            999 ;	genLabel
                           1000 ;	genFunction
                           1001 ;	---------------------------------
                           1002 ; Function halt
                           1003 ; ---------------------------------
   02AC                    1004 _halt_start::
   02AC                    1005 _halt:
                           1006 ;main.c:194: __endasm;
                           1007 ;	genInline
                           1008 	
   02AC 01 FD 7F           1009 		ld bc, #0x7ffd
   02AF AF                 1010 		xor a
   02B0 ED 79              1011 		out (c), a
   02B2 C7                 1012 		rst #0
   02B3                    1013 	loop:
   02B3 18 FE              1014 		jr loop
                           1015 		
                           1016 ;	genLabel
                           1017 ;	genEndFunction
   02B5 C9                 1018 	ret
   02B6                    1019 _halt_end::
                           1020 ;main.c:197: void putdig( byte b, byte col, byte row )
                           1021 ;	genLabel
                           1022 ;	genFunction
                           1023 ;	---------------------------------
                           1024 ; Function putdig
                           1025 ; ---------------------------------
   02B6                    1026 _putdig_start::
   02B6                    1027 _putdig:
   02B6 DD E5              1028 	push	ix
   02B8 DD 21 00 00        1029 	ld	ix,#0
   02BC DD 39              1030 	add	ix,sp
   02BE 21 FE FF           1031 	ld	hl,#-2
   02C1 39                 1032 	add	hl,sp
   02C2 F9                 1033 	ld	sp,hl
                           1034 ;main.c:199: char d[2] = "0";
                           1035 ;	genAddrOf
   02C3 21 00 00           1036 	ld	hl,#0x0000
   02C6 39                 1037 	add	hl,sp
   02C7 4D                 1038 	ld	c,l
   02C8 44                 1039 	ld	b,h
                           1040 ;	genAssign (pointer)
                           1041 ;	isBitvar = 0
   02C9 3E 30              1042 	ld	a,#0x30
   02CB 02                 1043 	ld	(bc),a
                           1044 ;	genPlus
                           1045 ;	genPlusIncr
   02CC 59                 1046 	ld	e,c
   02CD 50                 1047 	ld	d,b
   02CE 13                 1048 	inc	de
                           1049 ;	genAssign (pointer)
                           1050 ;	isBitvar = 0
   02CF 3E 00              1051 	ld	a,#0x00
   02D1 12                 1052 	ld	(de),a
                           1053 ;main.c:200: if ( b < 0x0a ) d[0] = b + '0';
                           1054 ;	genCmpLt
                           1055 ;	AOP_STK for 
   02D2 DD 7E 04           1056 	ld	a,4(ix)
   02D5 D6 0A              1057 	sub	a,#0x0A
   02D7 30 08              1058 	jr	NC,00105$
                           1059 ;	genPlus
                           1060 ;	AOP_STK for 
                           1061 ;	genPlusIncr
   02D9 DD 7E 04           1062 	ld	a,4(ix)
   02DC C6 30              1063 	add	a,#0x30
                           1064 ;	genAssign (pointer)
                           1065 ;	isBitvar = 0
   02DE 02                 1066 	ld	(bc),a
                           1067 ;	genGoto
   02DF 18 12              1068 	jr	00106$
                           1069 ;	genLabel
   02E1                    1070 00105$:
                           1071 ;main.c:201: else if ( b < 0x10 ) d[0] =  'a' + b - 0x0a;
                           1072 ;	genCmpLt
                           1073 ;	AOP_STK for 
   02E1 DD 7E 04           1074 	ld	a,4(ix)
   02E4 D6 10              1075 	sub	a,#0x10
   02E6 30 08              1076 	jr	NC,00102$
                           1077 ;	genPlus
                           1078 ;	AOP_STK for 
                           1079 ;	genPlusIncr
   02E8 DD 7E 04           1080 	ld	a,4(ix)
   02EB C6 57              1081 	add	a,#0x57
                           1082 ;	genAssign (pointer)
                           1083 ;	isBitvar = 0
   02ED 02                 1084 	ld	(bc),a
                           1085 ;	genGoto
   02EE 18 03              1086 	jr	00106$
                           1087 ;	genLabel
   02F0                    1088 00102$:
                           1089 ;main.c:202: else d[0] = '?';
                           1090 ;	genAssign (pointer)
                           1091 ;	isBitvar = 0
   02F0 3E 3F              1092 	ld	a,#0x3F
   02F2 02                 1093 	ld	(bc),a
                           1094 ;	genLabel
   02F3                    1095 00106$:
                           1096 ;main.c:203: text_out_pos_8( d, col, row, 0, 0xff );
                           1097 ;	genIpush
                           1098 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02F3 21 00 FF           1099 	ld	hl,#0xFF00
   02F6 E5                 1100 	push	hl
                           1101 ;	genIpush
                           1102 ;	AOP_STK for 
   02F7 DD 7E 06           1103 	ld	a,6(ix)
   02FA F5                 1104 	push	af
   02FB 33                 1105 	inc	sp
                           1106 ;	genIpush
                           1107 ;	AOP_STK for 
   02FC DD 7E 05           1108 	ld	a,5(ix)
   02FF F5                 1109 	push	af
   0300 33                 1110 	inc	sp
                           1111 ;	genIpush
   0301 C5                 1112 	push	bc
                           1113 ;	genCall
   0302 CDr00s00           1114 	call	_text_out_pos_8
   0305 F1                 1115 	pop	af
   0306 F1                 1116 	pop	af
   0307 F1                 1117 	pop	af
                           1118 ;	genLabel
                           1119 ;	genEndFunction
   0308 DD F9              1120 	ld	sp,ix
   030A DD E1              1121 	pop	ix
   030C C9                 1122 	ret
   030D                    1123 _putdig_end::
                           1124 ;main.c:206: void putbyte( byte b, byte col, byte row )
                           1125 ;	genLabel
                           1126 ;	genFunction
                           1127 ;	---------------------------------
                           1128 ; Function putbyte
                           1129 ; ---------------------------------
   030D                    1130 _putbyte_start::
   030D                    1131 _putbyte:
   030D DD E5              1132 	push	ix
   030F DD 21 00 00        1133 	ld	ix,#0
   0313 DD 39              1134 	add	ix,sp
                           1135 ;main.c:208: putdig( b >> 4, col, row );
                           1136 ;	genRightShift
                           1137 ;	AOP_STK for 
   0315 DD 4E 04           1138 	ld	c,4(ix)
   0318 CB 39              1139 	srl	c
   031A CB 39              1140 	srl	c
   031C CB 39              1141 	srl	c
   031E CB 39              1142 	srl	c
                           1143 ;	genIpush
                           1144 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1145 ;	AOP_STK for 
   0320 DD 7E 06           1146 	ld	a,6(ix)
   0323 F5                 1147 	push	af
   0324 33                 1148 	inc	sp
                           1149 ;	genIpush
                           1150 ;	AOP_STK for 
   0325 DD 7E 05           1151 	ld	a,5(ix)
   0328 F5                 1152 	push	af
   0329 33                 1153 	inc	sp
                           1154 ;	genIpush
   032A 79                 1155 	ld	a,c
   032B F5                 1156 	push	af
   032C 33                 1157 	inc	sp
                           1158 ;	genCall
   032D CDrB6s02           1159 	call	_putdig
   0330 F1                 1160 	pop	af
   0331 33                 1161 	inc	sp
                           1162 ;main.c:209: putdig( b & 0x0f, col + 1, row );
                           1163 ;	genPlus
                           1164 ;	AOP_STK for 
                           1165 ;	genPlusIncr
   0332 DD 4E 05           1166 	ld	c,5(ix)
   0335 0C                 1167 	inc	c
                           1168 ;	genAnd
                           1169 ;	AOP_STK for 
   0336 DD 7E 04           1170 	ld	a,4(ix)
   0339 E6 0F              1171 	and	a,#0x0F
   033B 47                 1172 	ld	b,a
                           1173 ;	genIpush
                           1174 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1175 ;	AOP_STK for 
   033C DD 7E 06           1176 	ld	a,6(ix)
   033F F5                 1177 	push	af
   0340 33                 1178 	inc	sp
                           1179 ;	genIpush
   0341 79                 1180 	ld	a,c
   0342 F5                 1181 	push	af
   0343 33                 1182 	inc	sp
                           1183 ;	genIpush
   0344 C5                 1184 	push	bc
   0345 33                 1185 	inc	sp
                           1186 ;	genCall
   0346 CDrB6s02           1187 	call	_putdig
   0349 F1                 1188 	pop	af
   034A 33                 1189 	inc	sp
                           1190 ;main.c:210: text_out_pos_8( " ", col + 2, row, 0, 0xff );
                           1191 ;	genPlus
                           1192 ;	AOP_STK for 
                           1193 ;	genPlusIncr
   034B DD 4E 05           1194 	ld	c,5(ix)
   034E 0C                 1195 	inc	c
   034F 0C                 1196 	inc	c
                           1197 ;	genIpush
                           1198 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0350 21 00 FF           1199 	ld	hl,#0xFF00
   0353 E5                 1200 	push	hl
                           1201 ;	genIpush
                           1202 ;	AOP_STK for 
   0354 DD 7E 06           1203 	ld	a,6(ix)
   0357 F5                 1204 	push	af
   0358 33                 1205 	inc	sp
                           1206 ;	genIpush
   0359 79                 1207 	ld	a,c
   035A F5                 1208 	push	af
   035B 33                 1209 	inc	sp
                           1210 ;	genIpush
   035C 21r69s03           1211 	ld	hl,#__str_1
   035F E5                 1212 	push	hl
                           1213 ;	genCall
   0360 CDr00s00           1214 	call	_text_out_pos_8
   0363 F1                 1215 	pop	af
   0364 F1                 1216 	pop	af
   0365 F1                 1217 	pop	af
                           1218 ;	genLabel
                           1219 ;	genEndFunction
   0366 DD E1              1220 	pop	ix
   0368 C9                 1221 	ret
   0369                    1222 _putbyte_end::
   0369                    1223 __str_1:
   0369 20                 1224 	.ascii " "
   036A 00                 1225 	.db 0x00
                           1226 ;main.c:217: void strlwr( byte *name )
                           1227 ;	genLabel
                           1228 ;	genFunction
                           1229 ;	---------------------------------
                           1230 ; Function strlwr
                           1231 ; ---------------------------------
   036B                    1232 _strlwr_start::
   036B                    1233 _strlwr:
   036B DD E5              1234 	push	ix
   036D DD 21 00 00        1235 	ld	ix,#0
   0371 DD 39              1236 	add	ix,sp
                           1237 ;main.c:219: while ( *name != 0 )
                           1238 ;	genAssign
                           1239 ;	AOP_STK for 
   0373 DD 4E 04           1240 	ld	c,4(ix)
   0376 DD 46 05           1241 	ld	b,5(ix)
                           1242 ;	genLabel
   0379                    1243 00104$:
                           1244 ;	genPointerGet
   0379 0A                 1245 	ld	a,(bc)
                           1246 ;	genIfx
   037A 5F                 1247 	ld	e,a
   037B B7                 1248 	or	a,a
   037C 28 11              1249 	jr	Z,00107$
                           1250 ;main.c:221: if ( *name >= 'A' && *name <= 'Z' ) *name += 'a' - 'A';
                           1251 ;	genCmpLt
   037E 7B                 1252 	ld	a,e
   037F D6 41              1253 	sub	a,#0x41
   0381 38 09              1254 	jr	C,00102$
                           1255 ;	genCmpGt
   0383 3E 5A              1256 	ld	a,#0x5A
   0385 93                 1257 	sub	a,e
   0386 38 04              1258 	jr	C,00102$
                           1259 ;	genPlus
                           1260 ;	genPlusIncr
   0388 7B                 1261 	ld	a,e
   0389 C6 20              1262 	add	a,#0x20
                           1263 ;	genAssign (pointer)
                           1264 ;	isBitvar = 0
   038B 02                 1265 	ld	(bc),a
                           1266 ;	genLabel
   038C                    1267 00102$:
                           1268 ;main.c:222: name++;
                           1269 ;	genPlus
                           1270 ;	genPlusIncr
   038C 03                 1271 	inc	bc
                           1272 ;	genGoto
   038D 18 EA              1273 	jr	00104$
                           1274 ;	genLabel
   038F                    1275 00107$:
                           1276 ;	genEndFunction
   038F DD E1              1277 	pop	ix
   0391 C9                 1278 	ret
   0392                    1279 _strlwr_end::
                           1280 ;main.c:226: void strupr( byte *name )
                           1281 ;	genLabel
                           1282 ;	genFunction
                           1283 ;	---------------------------------
                           1284 ; Function strupr
                           1285 ; ---------------------------------
   0392                    1286 _strupr_start::
   0392                    1287 _strupr:
   0392 DD E5              1288 	push	ix
   0394 DD 21 00 00        1289 	ld	ix,#0
   0398 DD 39              1290 	add	ix,sp
                           1291 ;main.c:228: while ( *name != 0 )
                           1292 ;	genAssign
                           1293 ;	AOP_STK for 
   039A DD 4E 04           1294 	ld	c,4(ix)
   039D DD 46 05           1295 	ld	b,5(ix)
                           1296 ;	genLabel
   03A0                    1297 00104$:
                           1298 ;	genPointerGet
   03A0 0A                 1299 	ld	a,(bc)
                           1300 ;	genIfx
   03A1 5F                 1301 	ld	e,a
   03A2 B7                 1302 	or	a,a
   03A3 28 11              1303 	jr	Z,00107$
                           1304 ;main.c:230: if ( *name >= 'a' && *name <= 'z' ) *name += 'A' - 'a';
                           1305 ;	genCmpLt
   03A5 7B                 1306 	ld	a,e
   03A6 D6 61              1307 	sub	a,#0x61
   03A8 38 09              1308 	jr	C,00102$
                           1309 ;	genCmpGt
   03AA 3E 7A              1310 	ld	a,#0x7A
   03AC 93                 1311 	sub	a,e
   03AD 38 04              1312 	jr	C,00102$
                           1313 ;	genPlus
                           1314 ;	genPlusIncr
   03AF 7B                 1315 	ld	a,e
   03B0 C6 E0              1316 	add	a,#0xE0
                           1317 ;	genAssign (pointer)
                           1318 ;	isBitvar = 0
   03B2 02                 1319 	ld	(bc),a
                           1320 ;	genLabel
   03B3                    1321 00102$:
                           1322 ;main.c:231: name++;
                           1323 ;	genPlus
                           1324 ;	genPlusIncr
   03B3 03                 1325 	inc	bc
                           1326 ;	genGoto
   03B4 18 EA              1327 	jr	00104$
                           1328 ;	genLabel
   03B6                    1329 00107$:
                           1330 ;	genEndFunction
   03B6 DD E1              1331 	pop	ix
   03B8 C9                 1332 	ret
   03B9                    1333 _strupr_end::
                           1334 ;main.c:236: void pport_send( word cmd, word size, void *buff )
                           1335 ;	genLabel
                           1336 ;	genFunction
                           1337 ;	---------------------------------
                           1338 ; Function pport_send
                           1339 ; ---------------------------------
   03B9                    1340 _pport_send_start::
   03B9                    1341 _pport_send:
   03B9 DD E5              1342 	push	ix
   03BB DD 21 00 00        1343 	ld	ix,#0
   03BF DD 39              1344 	add	ix,sp
   03C1 21 FE FF           1345 	ld	hl,#-2
   03C4 39                 1346 	add	hl,sp
   03C5 F9                 1347 	ld	sp,hl
                           1348 ;main.c:238: byte *buff_b = ( byte* ) buff;
                           1349 ;	genAssign
                           1350 ;	AOP_STK for 
   03C6 DD 4E 08           1351 	ld	c,8(ix)
   03C9 DD 46 09           1352 	ld	b,9(ix)
                           1353 ;main.c:240: PPORT = cmd >> 8;
                           1354 ;	genRightShift
                           1355 ;	AOP_STK for 
   03CC DD 5E 05           1356 	ld	e,5(ix)
   03CF 16 00              1357 	ld	d,#0x00
                           1358 ;	genCast
                           1359 ;Z80 AOP_SFR for _PPORT banked:0 bc:1 de:1
   03D1 7B                 1360 	ld	a,e
   03D2 D3 1F              1361 	out	(_PPORT),a
                           1362 ;main.c:241: PPORT = ( byte ) cmd;
                           1363 ;	genCast
                           1364 ;	AOP_STK for 
                           1365 ;Z80 AOP_SFR for _PPORT banked:0 bc:1 de:0
   03D4 DD 7E 04           1366 	ld	a,4(ix)
   03D7 D3 1F              1367 	out	(_PPORT),a
                           1368 ;main.c:242: PPORT = ( byte ) size;
                           1369 ;	genCast
                           1370 ;	AOP_STK for 
                           1371 ;Z80 AOP_SFR for _PPORT banked:0 bc:1 de:0
   03D9 DD 7E 06           1372 	ld	a,6(ix)
   03DC D3 1F              1373 	out	(_PPORT),a
                           1374 ;main.c:243: PPORT = size >> 8;
                           1375 ;	genRightShift
                           1376 ;	AOP_STK for 
   03DE DD 5E 07           1377 	ld	e,7(ix)
   03E1 16 00              1378 	ld	d,#0x00
                           1379 ;	genCast
                           1380 ;Z80 AOP_SFR for _PPORT banked:0 bc:1 de:1
   03E3 7B                 1381 	ld	a,e
   03E4 D3 1F              1382 	out	(_PPORT),a
                           1383 ;main.c:245: while ( size-- != 0 ) PPORT = *buff_b++;
                           1384 ;	genAssign
                           1385 ;	AOP_STK for _pport_send_buff_b_1_1
   03E6 DD 71 FE           1386 	ld	-2(ix),c
   03E9 DD 70 FF           1387 	ld	-1(ix),b
                           1388 ;	genAssign
                           1389 ;	AOP_STK for 
   03EC DD 5E 06           1390 	ld	e,6(ix)
   03EF DD 56 07           1391 	ld	d,7(ix)
                           1392 ;	genLabel
   03F2                    1393 00101$:
                           1394 ;	genAssign
   03F2 4B                 1395 	ld	c,e
   03F3 42                 1396 	ld	b,d
                           1397 ;	genMinus
   03F4 1B                 1398 	dec	de
                           1399 ;	genIfx
   03F5 79                 1400 	ld	a,c
   03F6 B0                 1401 	or	a,b
   03F7 28 13              1402 	jr	Z,00104$
                           1403 ;	genPointerGet
                           1404 ;	AOP_STK for _pport_send_buff_b_1_1
                           1405 ;Z80 AOP_SFR for _PPORT banked:0 bc:0 de:1
   03F9 DD 6E FE           1406 	ld	l,-2(ix)
   03FC DD 66 FF           1407 	ld	h,-1(ix)
   03FF 7E                 1408 	ld	a,(hl)
   0400 D3 1F              1409 	out	(_PPORT),a
                           1410 ;	genPlus
                           1411 ;	AOP_STK for _pport_send_buff_b_1_1
                           1412 ;	genPlusIncr
   0402 DD 34 FE           1413 	inc	-2(ix)
   0405 20 03              1414 	jr	NZ,00109$
   0407 DD 34 FF           1415 	inc	-1(ix)
   040A                    1416 00109$:
                           1417 ;	genGoto
   040A 18 E6              1418 	jr	00101$
                           1419 ;	genLabel
   040C                    1420 00104$:
                           1421 ;	genEndFunction
   040C DD F9              1422 	ld	sp,ix
   040E DD E1              1423 	pop	ix
   0410 C9                 1424 	ret
   0411                    1425 _pport_send_end::
                           1426 ;main.c:248: void pport_send_data( void *buff, word size )
                           1427 ;	genLabel
                           1428 ;	genFunction
                           1429 ;	---------------------------------
                           1430 ; Function pport_send_data
                           1431 ; ---------------------------------
   0411                    1432 _pport_send_data_start::
   0411                    1433 _pport_send_data:
   0411 DD E5              1434 	push	ix
   0413 DD 21 00 00        1435 	ld	ix,#0
   0417 DD 39              1436 	add	ix,sp
   0419 21 FE FF           1437 	ld	hl,#-2
   041C 39                 1438 	add	hl,sp
   041D F9                 1439 	ld	sp,hl
                           1440 ;main.c:250: byte *buff_b = ( byte* ) buff;
                           1441 ;	genAssign
                           1442 ;	AOP_STK for 
   041E DD 4E 04           1443 	ld	c,4(ix)
   0421 DD 46 05           1444 	ld	b,5(ix)
                           1445 ;main.c:251: while ( size-- != 0 ) PPORT = *buff_b++;
                           1446 ;	genAssign
                           1447 ;	AOP_STK for _pport_send_data_buff_b_1_1
   0424 DD 71 FE           1448 	ld	-2(ix),c
   0427 DD 70 FF           1449 	ld	-1(ix),b
                           1450 ;	genAssign
                           1451 ;	AOP_STK for 
   042A DD 5E 06           1452 	ld	e,6(ix)
   042D DD 56 07           1453 	ld	d,7(ix)
                           1454 ;	genLabel
   0430                    1455 00101$:
                           1456 ;	genAssign
   0430 4B                 1457 	ld	c,e
   0431 42                 1458 	ld	b,d
                           1459 ;	genMinus
   0432 1B                 1460 	dec	de
                           1461 ;	genIfx
   0433 79                 1462 	ld	a,c
   0434 B0                 1463 	or	a,b
   0435 28 13              1464 	jr	Z,00104$
                           1465 ;	genPointerGet
                           1466 ;	AOP_STK for _pport_send_data_buff_b_1_1
                           1467 ;Z80 AOP_SFR for _PPORT banked:0 bc:0 de:1
   0437 DD 6E FE           1468 	ld	l,-2(ix)
   043A DD 66 FF           1469 	ld	h,-1(ix)
   043D 7E                 1470 	ld	a,(hl)
   043E D3 1F              1471 	out	(_PPORT),a
                           1472 ;	genPlus
                           1473 ;	AOP_STK for _pport_send_data_buff_b_1_1
                           1474 ;	genPlusIncr
   0440 DD 34 FE           1475 	inc	-2(ix)
   0443 20 03              1476 	jr	NZ,00109$
   0445 DD 34 FF           1477 	inc	-1(ix)
   0448                    1478 00109$:
                           1479 ;	genGoto
   0448 18 E6              1480 	jr	00101$
                           1481 ;	genLabel
   044A                    1482 00104$:
                           1483 ;	genEndFunction
   044A DD F9              1484 	ld	sp,ix
   044C DD E1              1485 	pop	ix
   044E C9                 1486 	ret
   044F                    1487 _pport_send_data_end::
                           1488 ;main.c:254: void pport_receive( void *buff, word size )
                           1489 ;	genLabel
                           1490 ;	genFunction
                           1491 ;	---------------------------------
                           1492 ; Function pport_receive
                           1493 ; ---------------------------------
   044F                    1494 _pport_receive_start::
   044F                    1495 _pport_receive:
   044F DD E5              1496 	push	ix
   0451 DD 21 00 00        1497 	ld	ix,#0
   0455 DD 39              1498 	add	ix,sp
   0457 21 FE FF           1499 	ld	hl,#-2
   045A 39                 1500 	add	hl,sp
   045B F9                 1501 	ld	sp,hl
                           1502 ;main.c:256: byte *buff_b = ( byte* ) buff;
                           1503 ;	genAssign
                           1504 ;	(operands are equal 3)
                           1505 ;main.c:258: pport_result = PPORT << 8;
                           1506 ;	genCast
                           1507 ;Z80 AOP_SFR for _PPORT banked:0 bc:0 de:1
   045C DB 1F              1508 	in	a,(_PPORT)
   045E 5F                 1509 	ld	e,a
   045F 16 00              1510 	ld	d,#0x00
                           1511 ;	genLeftShift
   0461 FD 21r63s38        1512 	ld	iy,#_pport_result
   0465 FD 73 01           1513 	ld	1(iy),e
   0468 FD 36 00 00        1514 	ld	0(iy),#0x00
                           1515 ;main.c:259: pport_result |= PPORT;
                           1516 ;	genCast
                           1517 ;Z80 AOP_SFR for _PPORT banked:0 bc:0 de:1
   046C DB 1F              1518 	in	a,(_PPORT)
   046E 5F                 1519 	ld	e,a
   046F 16 00              1520 	ld	d,#0x00
                           1521 ;	genOr
   0471 FD 7E 00           1522 	ld	a,0(iy)
   0474 B3                 1523 	or	a,e
   0475 FD 77 00           1524 	ld	0(iy),a
   0478 FD 7E 01           1525 	ld	a,1(iy)
   047B B2                 1526 	or	a,d
   047C FD 77 01           1527 	ld	1(iy),a
                           1528 ;main.c:261: pport_datasize = PPORT;
                           1529 ;	genCast
                           1530 ;Z80 AOP_SFR for _PPORT banked:0 bc:0 de:0
   047F DB 1F              1531 	in	a,(_PPORT)
   0481 FD 21r65s38        1532 	ld	iy,#_pport_datasize
   0485 FD 77 00           1533 	ld	0(iy),a
   0488 FD 36 01 00        1534 	ld	1(iy),#0x00
                           1535 ;main.c:262: pport_datasize |= PPORT << 8;
                           1536 ;	genCast
                           1537 ;Z80 AOP_SFR for _PPORT banked:0 bc:0 de:1
   048C DB 1F              1538 	in	a,(_PPORT)
   048E 5F                 1539 	ld	e,a
                           1540 ;	genLeftShift
   048F 53                 1541 	ld	d,e
   0490 1E 00              1542 	ld	e,#0x00
                           1543 ;	genOr
   0492 FD 7E 00           1544 	ld	a,0(iy)
   0495 B3                 1545 	or	a,e
   0496 FD 77 00           1546 	ld	0(iy),a
   0499 FD 7E 01           1547 	ld	a,1(iy)
   049C B2                 1548 	or	a,d
   049D FD 77 01           1549 	ld	1(iy),a
                           1550 ;main.c:264: pport_pktsize = pport_datasize;
                           1551 ;	genAssign
   04A0 2Ar65s38           1552 	ld	hl,(_pport_datasize)
   04A3 FD 21r67s38        1553 	ld	iy,#_pport_pktsize
   04A7 FD 75 00           1554 	ld	0(iy),l
   04AA FD 74 01           1555 	ld	1(iy),h
                           1556 ;main.c:266: if (( pport_result >> 8 ) == PP_ACK )
                           1557 ;	genRightShift
   04AD FD 21r63s38        1558 	ld	iy,#_pport_result
   04B1 FD 5E 01           1559 	ld	e,1(iy)
   04B4 16 00              1560 	ld	d,#0x00
                           1561 ;	genCmpEq
                           1562 ; genCmpEq: left 2, right 2, result 0
   04B6 7B                 1563 	ld	a,e
   04B7 D6 73              1564 	sub	a,#0x73
   04B9 20 03              1565 	jr	NZ,00116$
   04BB B2                 1566 	or	a,d
   04BC 28 02              1567 	jr	Z,00117$
   04BE                    1568 00116$:
   04BE 18 42              1569 	jr	00109$
   04C0                    1570 00117$:
                           1571 ;main.c:268: while ( pport_datasize-- != 0 )
                           1572 ;	genAssign
                           1573 ;	AOP_STK for 
                           1574 ;	AOP_STK for _pport_receive_buff_b_1_1
   04C0 DD 7E 04           1575 	ld	a,4(ix)
   04C3 DD 77 FE           1576 	ld	-2(ix),a
   04C6 DD 7E 05           1577 	ld	a,5(ix)
   04C9 DD 77 FF           1578 	ld	-1(ix),a
                           1579 ;	genAssign
                           1580 ;	AOP_STK for 
   04CC DD 4E 06           1581 	ld	c,6(ix)
   04CF DD 46 07           1582 	ld	b,7(ix)
                           1583 ;	genLabel
   04D2                    1584 00104$:
                           1585 ;	genAssign
   04D2 ED 5Br65s38        1586 	ld	de,(_pport_datasize)
                           1587 ;	genMinus
   04D6 2Ar65s38           1588 	ld	hl,(_pport_datasize)
   04D9 2B                 1589 	dec	hl
   04DA 22r65s38           1590 	ld	(_pport_datasize),hl
                           1591 ;	genIfx
   04DD 7B                 1592 	ld	a,e
   04DE B2                 1593 	or	a,d
   04DF 28 21              1594 	jr	Z,00109$
                           1595 ;main.c:270: byte c = PPORT;
                           1596 ;	genAssign
                           1597 ;Z80 AOP_SFR for _PPORT banked:0 bc:1 de:1
   04E1 DB 1F              1598 	in	a,(_PPORT)
   04E3 5F                 1599 	ld	e,a
                           1600 ;main.c:271: if ( buff != 0 && size > 0 )
                           1601 ;	genIfx
                           1602 ;	AOP_STK for 
   04E4 DD 7E 04           1603 	ld	a,4(ix)
   04E7 DD B6 05           1604 	or	a,5(ix)
   04EA 28 E6              1605 	jr	Z,00104$
                           1606 ;	genIfx
   04EC 79                 1607 	ld	a,c
   04ED B0                 1608 	or	a,b
   04EE 28 E2              1609 	jr	Z,00104$
                           1610 ;main.c:273: *buff_b++ = c;
                           1611 ;	genAssign (pointer)
                           1612 ;	AOP_STK for _pport_receive_buff_b_1_1
                           1613 ;	isBitvar = 0
   04F0 DD 6E FE           1614 	ld	l,-2(ix)
   04F3 DD 66 FF           1615 	ld	h,-1(ix)
   04F6 73                 1616 	ld	(hl),e
                           1617 ;	genPlus
                           1618 ;	AOP_STK for _pport_receive_buff_b_1_1
                           1619 ;	genPlusIncr
   04F7 DD 34 FE           1620 	inc	-2(ix)
   04FA 20 03              1621 	jr	NZ,00118$
   04FC DD 34 FF           1622 	inc	-1(ix)
   04FF                    1623 00118$:
                           1624 ;main.c:274: size--;
                           1625 ;	genMinus
   04FF 0B                 1626 	dec	bc
                           1627 ;	genGoto
   0500 18 D0              1628 	jr	00104$
                           1629 ;	genLabel
   0502                    1630 00109$:
                           1631 ;	genEndFunction
   0502 DD F9              1632 	ld	sp,ix
   0504 DD E1              1633 	pop	ix
   0506 C9                 1634 	ret
   0507                    1635 _pport_receive_end::
                           1636 ;main.c:280: void pport_open()
                           1637 ;	genLabel
                           1638 ;	genFunction
                           1639 ;	---------------------------------
                           1640 ; Function pport_open
                           1641 ; ---------------------------------
   0507                    1642 _pport_open_start::
   0507                    1643 _pport_open:
                           1644 ;main.c:282: pport_send( PP_CMD_CTL( PP_CTL_OPEN ), 0, 0 );
                           1645 ;	genIpush
                           1646 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0507 21 00 00           1647 	ld	hl,#0x0000
   050A E5                 1648 	push	hl
                           1649 ;	genIpush
   050B 21 00 00           1650 	ld	hl,#0x0000
   050E E5                 1651 	push	hl
                           1652 ;	genIpush
   050F 21 00 77           1653 	ld	hl,#0x7700
   0512 E5                 1654 	push	hl
                           1655 ;	genCall
   0513 CDrB9s03           1656 	call	_pport_send
   0516 F1                 1657 	pop	af
   0517 F1                 1658 	pop	af
   0518 F1                 1659 	pop	af
                           1660 ;main.c:283: pport_receive( 0, 0 );
                           1661 ;	genIpush
                           1662 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0519 21 00 00           1663 	ld	hl,#0x0000
   051C E5                 1664 	push	hl
                           1665 ;	genIpush
   051D 21 00 00           1666 	ld	hl,#0x0000
   0520 E5                 1667 	push	hl
                           1668 ;	genCall
   0521 CDr4Fs04           1669 	call	_pport_receive
   0524 F1                 1670 	pop	af
   0525 F1                 1671 	pop	af
                           1672 ;main.c:285: pport_good = ( pport_result == PP_W_ACK );
                           1673 ;	genCmpEq
                           1674 ; genCmpEq: left 2, right 2, result 1
                           1675 ;4
   0526 FD 21r63s38        1676 	ld	iy,#_pport_result
   052A FD 7E 00           1677 	ld	a,0(iy)
   052D B7                 1678 	or	a,a
   052E 20 0B              1679 	jr	NZ,00103$
   0530 FD 7E 01           1680 	ld	a,1(iy)
   0533 D6 73              1681 	sub	a,#0x73
   0535 20 04              1682 	jr	NZ,00103$
   0537 3E 01              1683 	ld	a,#0x01
   0539 18 01              1684 	jr	00104$
   053B                    1685 00103$:
   053B AF                 1686 	xor	a,a
   053C                    1687 00104$:
                           1688 ;6
   053C FD 21r69s38        1689 	ld	iy,#_pport_good
   0540 FD 77 00           1690 	ld	0(iy),a
                           1691 ;	genLabel
                           1692 ;	genEndFunction
   0543 C9                 1693 	ret
   0544                    1694 _pport_open_end::
                           1695 ;main.c:288: void pport_close()
                           1696 ;	genLabel
                           1697 ;	genFunction
                           1698 ;	---------------------------------
                           1699 ; Function pport_close
                           1700 ; ---------------------------------
   0544                    1701 _pport_close_start::
   0544                    1702 _pport_close:
                           1703 ;main.c:290: pport_send( PP_CMD_CTL( PP_CTL_CLOSE ), 0, 0 );
                           1704 ;	genIpush
                           1705 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0544 21 00 00           1706 	ld	hl,#0x0000
   0547 E5                 1707 	push	hl
                           1708 ;	genIpush
   0548 21 00 00           1709 	ld	hl,#0x0000
   054B E5                 1710 	push	hl
                           1711 ;	genIpush
   054C 21 01 77           1712 	ld	hl,#0x7701
   054F E5                 1713 	push	hl
                           1714 ;	genCall
   0550 CDrB9s03           1715 	call	_pport_send
   0553 F1                 1716 	pop	af
   0554 F1                 1717 	pop	af
   0555 F1                 1718 	pop	af
                           1719 ;main.c:291: pport_receive( 0, 0 );
                           1720 ;	genIpush
                           1721 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0556 21 00 00           1722 	ld	hl,#0x0000
   0559 E5                 1723 	push	hl
                           1724 ;	genIpush
   055A 21 00 00           1725 	ld	hl,#0x0000
   055D E5                 1726 	push	hl
                           1727 ;	genCall
   055E CDr4Fs04           1728 	call	_pport_receive
   0561 F1                 1729 	pop	af
   0562 F1                 1730 	pop	af
                           1731 ;	genLabel
                           1732 ;	genEndFunction
   0563 C9                 1733 	ret
   0564                    1734 _pport_close_end::
                           1735 ;main.c:296: void print_pad_8( char *str, byte col, byte row, byte sz )
                           1736 ;	genLabel
                           1737 ;	genFunction
                           1738 ;	---------------------------------
                           1739 ; Function print_pad_8
                           1740 ; ---------------------------------
   0564                    1741 _print_pad_8_start::
   0564                    1742 _print_pad_8:
   0564 DD E5              1743 	push	ix
   0566 DD 21 00 00        1744 	ld	ix,#0
   056A DD 39              1745 	add	ix,sp
                           1746 ;main.c:299: byte real_sz = strlen( str );
                           1747 ;	genIpush
                           1748 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1749 ;	AOP_STK for 
   056C DD 6E 04           1750 	ld	l,4(ix)
   056F DD 66 05           1751 	ld	h,5(ix)
   0572 E5                 1752 	push	hl
                           1753 ;	genCall
   0573 CDr00s00           1754 	call	_strlen
   0576 44                 1755 	ld	b,h
   0577 4D                 1756 	ld	c,l
   0578 F1                 1757 	pop	af
                           1758 ;	genCast
                           1759 ;main.c:300: text_out_pos_8( str, col, row, 0, sz );
                           1760 ;	genIpush
                           1761 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0579 C5                 1762 	push	bc
                           1763 ;	AOP_STK for 
   057A DD 7E 08           1764 	ld	a,8(ix)
   057D F5                 1765 	push	af
   057E 33                 1766 	inc	sp
                           1767 ;	genIpush
   057F 3E 00              1768 	ld	a,#0x00
   0581 F5                 1769 	push	af
   0582 33                 1770 	inc	sp
                           1771 ;	genIpush
                           1772 ;	AOP_STK for 
   0583 DD 7E 07           1773 	ld	a,7(ix)
   0586 F5                 1774 	push	af
   0587 33                 1775 	inc	sp
                           1776 ;	genIpush
                           1777 ;	AOP_STK for 
   0588 DD 7E 06           1778 	ld	a,6(ix)
   058B F5                 1779 	push	af
   058C 33                 1780 	inc	sp
                           1781 ;	genIpush
                           1782 ;	AOP_STK for 
   058D DD 6E 04           1783 	ld	l,4(ix)
   0590 DD 66 05           1784 	ld	h,5(ix)
   0593 E5                 1785 	push	hl
                           1786 ;	genCall
   0594 CDr00s00           1787 	call	_text_out_pos_8
   0597 F1                 1788 	pop	af
   0598 F1                 1789 	pop	af
   0599 F1                 1790 	pop	af
   059A C1                 1791 	pop	bc
                           1792 ;main.c:301: if ( real_sz < sz )
                           1793 ;	genCmpLt
                           1794 ;	AOP_STK for 
   059B 79                 1795 	ld	a,c
   059C DD 96 08           1796 	sub	a,8(ix)
   059F 30 25              1797 	jr	NC,00107$
                           1798 ;main.c:303: for ( i = real_sz; i < sz; i++ )
                           1799 ;	genAssign
                           1800 ;	(registers are the same)
                           1801 ;	genLabel
   05A1                    1802 00103$:
                           1803 ;	genCmpLt
                           1804 ;	AOP_STK for 
   05A1 79                 1805 	ld	a,c
   05A2 DD 96 08           1806 	sub	a,8(ix)
   05A5 30 1F              1807 	jr	NC,00107$
                           1808 ;main.c:305: text_out_pos_8( " ", col + i, row, 0, 1 );
                           1809 ;	genPlus
                           1810 ;	AOP_STK for 
   05A7 DD 7E 06           1811 	ld	a,6(ix)
   05AA 81                 1812 	add	a,c
   05AB 47                 1813 	ld	b,a
                           1814 ;	genIpush
                           1815 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   05AC C5                 1816 	push	bc
   05AD 21 00 01           1817 	ld	hl,#0x0100
   05B0 E5                 1818 	push	hl
                           1819 ;	genIpush
                           1820 ;	AOP_STK for 
   05B1 DD 7E 07           1821 	ld	a,7(ix)
   05B4 F5                 1822 	push	af
   05B5 33                 1823 	inc	sp
                           1824 ;	genIpush
   05B6 C5                 1825 	push	bc
   05B7 33                 1826 	inc	sp
                           1827 ;	genIpush
   05B8 21rC9s05           1828 	ld	hl,#__str_2
   05BB E5                 1829 	push	hl
                           1830 ;	genCall
   05BC CDr00s00           1831 	call	_text_out_pos_8
   05BF F1                 1832 	pop	af
   05C0 F1                 1833 	pop	af
   05C1 F1                 1834 	pop	af
   05C2 C1                 1835 	pop	bc
                           1836 ;main.c:303: for ( i = real_sz; i < sz; i++ )
                           1837 ;	genPlus
                           1838 ;	genPlusIncr
   05C3 0C                 1839 	inc	c
                           1840 ;	genGoto
   05C4 18 DB              1841 	jr	00103$
                           1842 ;	genLabel
   05C6                    1843 00107$:
                           1844 ;	genEndFunction
   05C6 DD E1              1845 	pop	ix
   05C8 C9                 1846 	ret
   05C9                    1847 _print_pad_8_end::
   05C9                    1848 __str_2:
   05C9 20                 1849 	.ascii " "
   05CA 00                 1850 	.db 0x00
                           1851 ;main.c:310: void display_path( char *str, int col, int row, int max_sz )
                           1852 ;	genLabel
                           1853 ;	genFunction
                           1854 ;	---------------------------------
                           1855 ; Function display_path
                           1856 ; ---------------------------------
   05CB                    1857 _display_path_start::
   05CB                    1858 _display_path:
   05CB DD E5              1859 	push	ix
   05CD DD 21 00 00        1860 	ld	ix,#0
   05D1 DD 39              1861 	add	ix,sp
   05D3 21 DA FF           1862 	ld	hl,#-38
   05D6 39                 1863 	add	hl,sp
   05D7 F9                 1864 	ld	sp,hl
                           1865 ;main.c:312: byte path_buff[0x20] = "/";
                           1866 ;	genAddrOf
                           1867 ;	AOP_STK for _display_path_sloc1_1_0
   05D8 21 06 00           1868 	ld	hl,#0x0006
   05DB 39                 1869 	add	hl,sp
   05DC DD 75 DA           1870 	ld	-38(ix),l
   05DF DD 74 DB           1871 	ld	-37(ix),h
                           1872 ;	genAssign (pointer)
                           1873 ;	AOP_STK for _display_path_sloc1_1_0
                           1874 ;	isBitvar = 0
   05E2 DD 6E DA           1875 	ld	l,-38(ix)
   05E5 DD 66 DB           1876 	ld	h,-37(ix)
   05E8 36 2F              1877 	ld	(hl),#0x2F
                           1878 ;	genPlus
                           1879 ;	AOP_STK for _display_path_sloc1_1_0
                           1880 ;	genPlusIncr
   05EA DD 5E DA           1881 	ld	e,-38(ix)
   05ED DD 56 DB           1882 	ld	d,-37(ix)
   05F0 13                 1883 	inc	de
                           1884 ;	genAssign (pointer)
                           1885 ;	isBitvar = 0
   05F1 3E 00              1886 	ld	a,#0x00
   05F3 12                 1887 	ld	(de),a
                           1888 ;main.c:313: byte *path_short = str;
                           1889 ;	genAssign
                           1890 ;	AOP_STK for 
   05F4 DD 4E 04           1891 	ld	c,4(ix)
   05F7 DD 46 05           1892 	ld	b,5(ix)
                           1893 ;	genAssign
                           1894 ;	AOP_STK for _display_path_path_short_1_1
   05FA DD 71 DE           1895 	ld	-34(ix),c
   05FD DD 70 DF           1896 	ld	-33(ix),b
                           1897 ;main.c:315: if ( strlen( str ) > max_sz )
                           1898 ;	genIpush
                           1899 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0600 C5                 1900 	push	bc
                           1901 ;	genCall
   0601 CDr00s00           1902 	call	_strlen
   0604 54                 1903 	ld	d,h
   0605 5D                 1904 	ld	e,l
   0606 F1                 1905 	pop	af
                           1906 ;	genCmpGt
                           1907 ;	AOP_STK for 
   0607 DD 7E 0A           1908 	ld	a,10(ix)
   060A 93                 1909 	sub	a,e
   060B DD 7E 0B           1910 	ld	a,11(ix)
   060E 9A                 1911 	sbc	a,d
   060F F2r67s06           1912 	jp	P,00108$
                           1913 ;main.c:317: while ( strlen( path_short ) > ( max_sz - 2 ) )
                           1914 ;	genMinus
                           1915 ;	AOP_STK for 
                           1916 ;	AOP_STK for _display_path_sloc0_1_0
   0612 DD 7E 0A           1917 	ld	a,10(ix)
   0615 C6 FE              1918 	add	a,#0xFE
   0617 DD 77 DC           1919 	ld	-36(ix),a
   061A DD 7E 0B           1920 	ld	a,11(ix)
   061D CE FF              1921 	adc	a,#0xFF
   061F DD 77 DD           1922 	ld	-35(ix),a
                           1923 ;	genLabel
   0622                    1924 00104$:
                           1925 ;	genIpush
                           1926 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1927 ;	AOP_STK for _display_path_path_short_1_1
   0622 DD 6E DE           1928 	ld	l,-34(ix)
   0625 DD 66 DF           1929 	ld	h,-33(ix)
   0628 E5                 1930 	push	hl
                           1931 ;	genCall
   0629 CDr00s00           1932 	call	_strlen
   062C 54                 1933 	ld	d,h
   062D 5D                 1934 	ld	e,l
   062E F1                 1935 	pop	af
                           1936 ;	genCmpGt
                           1937 ;	AOP_STK for _display_path_sloc0_1_0
   062F DD 7E DC           1938 	ld	a,-36(ix)
   0632 93                 1939 	sub	a,e
   0633 DD 7E DD           1940 	ld	a,-35(ix)
   0636 9A                 1941 	sbc	a,d
   0637 F2r57s06           1942 	jp	P,00106$
                           1943 ;main.c:319: path_short++;
                           1944 ;	genPlus
                           1945 ;	AOP_STK for _display_path_path_short_1_1
                           1946 ;	genPlusIncr
   063A DD 34 DE           1947 	inc	-34(ix)
   063D 20 03              1948 	jr	NZ,00115$
   063F DD 34 DF           1949 	inc	-33(ix)
   0642                    1950 00115$:
                           1951 ;main.c:320: while ( *path_short != '/' ) path_short++;
                           1952 ;	genAssign
                           1953 ;	AOP_STK for _display_path_path_short_1_1
   0642 DD 5E DE           1954 	ld	e,-34(ix)
   0645 DD 56 DF           1955 	ld	d,-33(ix)
                           1956 ;	genLabel
   0648                    1957 00101$:
                           1958 ;	genPointerGet
   0648 1A                 1959 	ld	a,(de)
                           1960 ;	genCmpEq
                           1961 ; genCmpEq: left 1, right 1, result 0
   0649 4F                 1962 	ld	c,a
   064A D6 2F              1963 	sub	a,#0x2F
   064C 28 D4              1964 	jr	Z,00104$
                           1965 ;	genPlus
                           1966 ;	genPlusIncr
   064E 13                 1967 	inc	de
                           1968 ;	genAssign
                           1969 ;	AOP_STK for _display_path_path_short_1_1
   064F DD 73 DE           1970 	ld	-34(ix),e
   0652 DD 72 DF           1971 	ld	-33(ix),d
                           1972 ;	genGoto
   0655 18 F1              1973 	jr	00101$
                           1974 ;	genLabel
   0657                    1975 00106$:
                           1976 ;main.c:323: strcpy( path_buff, "..." );
                           1977 ;	genIpush
                           1978 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0657 21rA4s06           1979 	ld	hl,#__str_4
   065A E5                 1980 	push	hl
                           1981 ;	genIpush
                           1982 ;	AOP_STK for _display_path_sloc1_1_0
   065B DD 6E DA           1983 	ld	l,-38(ix)
   065E DD 66 DB           1984 	ld	h,-37(ix)
   0661 E5                 1985 	push	hl
                           1986 ;	genCall
   0662 CDr00s00           1987 	call	_strcpy
   0665 F1                 1988 	pop	af
   0666 F1                 1989 	pop	af
                           1990 ;	genLabel
   0667                    1991 00108$:
                           1992 ;main.c:326: strcat( path_buff, path_short );
                           1993 ;	genIpush
                           1994 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1995 ;	AOP_STK for _display_path_path_short_1_1
   0667 DD 6E DE           1996 	ld	l,-34(ix)
   066A DD 66 DF           1997 	ld	h,-33(ix)
   066D E5                 1998 	push	hl
                           1999 ;	genIpush
                           2000 ;	AOP_STK for _display_path_sloc1_1_0
   066E DD 6E DA           2001 	ld	l,-38(ix)
   0671 DD 66 DB           2002 	ld	h,-37(ix)
   0674 E5                 2003 	push	hl
                           2004 ;	genCall
   0675 CDr00s00           2005 	call	_strcat
   0678 F1                 2006 	pop	af
   0679 F1                 2007 	pop	af
                           2008 ;main.c:327: print_pad_8( path_buff, col, row, max_sz );
                           2009 ;	genCast
                           2010 ;	AOP_STK for 
   067A DD 4E 0A           2011 	ld	c,10(ix)
                           2012 ;	genCast
                           2013 ;	AOP_STK for 
   067D DD 46 08           2014 	ld	b,8(ix)
                           2015 ;	genCast
                           2016 ;	AOP_STK for 
                           2017 ;	AOP_STK for _display_path_sloc1_1_0
   0680 DD 7E 06           2018 	ld	a,6(ix)
   0683 DD 77 DA           2019 	ld	-38(ix),a
                           2020 ;	genAddrOf
   0686 21 06 00           2021 	ld	hl,#0x0006
   0689 39                 2022 	add	hl,sp
   068A 55                 2023 	ld	d,l
   068B 5C                 2024 	ld	e,h
                           2025 ;	genIpush
                           2026 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   068C 79                 2027 	ld	a,c
   068D F5                 2028 	push	af
   068E 33                 2029 	inc	sp
                           2030 ;	genIpush
   068F C5                 2031 	push	bc
   0690 33                 2032 	inc	sp
                           2033 ;	genIpush
                           2034 ;	AOP_STK for _display_path_sloc1_1_0
   0691 DD 7E DA           2035 	ld	a,-38(ix)
   0694 F5                 2036 	push	af
   0695 33                 2037 	inc	sp
                           2038 ;	genIpush
   0696 6A                 2039 	ld	l,d
   0697 63                 2040 	ld	h,e
   0698 E5                 2041 	push	hl
                           2042 ;	genCall
   0699 CDr64s05           2043 	call	_print_pad_8
   069C F1                 2044 	pop	af
   069D F1                 2045 	pop	af
   069E 33                 2046 	inc	sp
                           2047 ;	genLabel
                           2048 ;	genEndFunction
   069F DD F9              2049 	ld	sp,ix
   06A1 DD E1              2050 	pop	ix
   06A3 C9                 2051 	ret
   06A4                    2052 _display_path_end::
   06A4                    2053 __str_4:
   06A4 2E 2E 2E           2054 	.ascii "..."
   06A7 00                 2055 	.db 0x00
                           2056 ;main.c:331: void show_table()
                           2057 ;	genLabel
                           2058 ;	genFunction
                           2059 ;	---------------------------------
                           2060 ; Function show_table
                           2061 ; ---------------------------------
   06A8                    2062 _show_table_start::
   06A8                    2063 _show_table:
   06A8 DD E5              2064 	push	ix
   06AA DD 21 00 00        2065 	ld	ix,#0
   06AE DD 39              2066 	add	ix,sp
   06B0 21 E9 FF           2067 	ld	hl,#-23
   06B3 39                 2068 	add	hl,sp
   06B4 F9                 2069 	ld	sp,hl
                           2070 ;main.c:334: text_out_pos_8( "> ", 0, 1, 0, 0xff );
                           2071 ;	genIpush
                           2072 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06B5 21 00 FF           2073 	ld	hl,#0xFF00
   06B8 E5                 2074 	push	hl
                           2075 ;	genIpush
   06B9 21 00 01           2076 	ld	hl,#0x0100
   06BC E5                 2077 	push	hl
                           2078 ;	genIpush
   06BD 21r3Es09           2079 	ld	hl,#__str_5
   06C0 E5                 2080 	push	hl
                           2081 ;	genCall
   06C1 CDr00s00           2082 	call	_text_out_pos_8
   06C4 F1                 2083 	pop	af
   06C5 F1                 2084 	pop	af
   06C6 F1                 2085 	pop	af
                           2086 ;main.c:335: display_path( path, 1, 1, 28 );
                           2087 ;	genIpush
                           2088 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06C7 21 1C 00           2089 	ld	hl,#0x001C
   06CA E5                 2090 	push	hl
                           2091 ;	genIpush
   06CB 21 01 00           2092 	ld	hl,#0x0001
   06CE E5                 2093 	push	hl
                           2094 ;	genIpush
   06CF 21 01 00           2095 	ld	hl,#0x0001
   06D2 E5                 2096 	push	hl
                           2097 ;	genIpush
   06D3 21r22s38           2098 	ld	hl,#_path
   06D6 E5                 2099 	push	hl
                           2100 ;	genCall
   06D7 CDrCBs05           2101 	call	_display_path
   06DA F1                 2102 	pop	af
   06DB F1                 2103 	pop	af
   06DC F1                 2104 	pop	af
   06DD F1                 2105 	pop	af
                           2106 ;main.c:336: for ( i = 0; i < FILES_PER_ROW*2; i++ )
                           2107 ;	genAssign
                           2108 ;	AOP_STK for _show_table_i_1_1
   06DE DD 36 FF 00        2109 	ld	-1(ix),#0x00
                           2110 ;	genLabel
   06E2                    2111 00118$:
                           2112 ;	genCmpLt
                           2113 ;	AOP_STK for _show_table_i_1_1
   06E2 DD 7E FF           2114 	ld	a,-1(ix)
   06E5 D6 20              2115 	sub	a,#0x20
   06E7 D2rE3s08           2116 	jp	NC,00121$
                           2117 ;main.c:338: int col = ( i / FILES_PER_ROW ) * 16 + 2;
                           2118 ;	genRightShift
                           2119 ;	AOP_STK for _show_table_i_1_1
   06EA DD 46 FF           2120 	ld	b,-1(ix)
   06ED CB 38              2121 	srl	b
   06EF CB 38              2122 	srl	b
   06F1 CB 38              2123 	srl	b
   06F3 CB 38              2124 	srl	b
                           2125 ;	genCast
   06F5 1E 00              2126 	ld	e,#0x00
                           2127 ;	genLeftShift
   06F7 CB 20              2128 	sla	b
   06F9 CB 13              2129 	rl	e
   06FB CB 20              2130 	sla	b
   06FD CB 13              2131 	rl	e
   06FF CB 20              2132 	sla	b
   0701 CB 13              2133 	rl	e
   0703 CB 20              2134 	sla	b
   0705 CB 13              2135 	rl	e
                           2136 ;	genPlus
                           2137 ;	AOP_STK for _show_table_col_2_2
                           2138 ;	genPlusIncr
   0707 78                 2139 	ld	a,b
   0708 C6 02              2140 	add	a,#0x02
   070A DD 77 FD           2141 	ld	-3(ix),a
   070D 7B                 2142 	ld	a,e
   070E CE 00              2143 	adc	a,#0x00
   0710 DD 77 FE           2144 	ld	-2(ix),a
                           2145 ;main.c:339: int row = ( i % FILES_PER_ROW ) + 3;
                           2146 ;	genAnd
                           2147 ;	AOP_STK for _show_table_i_1_1
   0713 DD 7E FF           2148 	ld	a,-1(ix)
   0716 E6 0F              2149 	and	a,#0x0F
   0718 47                 2150 	ld	b,a
                           2151 ;	genCast
   0719 0E 00              2152 	ld	c,#0x00
                           2153 ;	genPlus
                           2154 ;	AOP_STK for _show_table_row_2_2
                           2155 ;	genPlusIncr
   071B 78                 2156 	ld	a,b
   071C C6 03              2157 	add	a,#0x03
   071E DD 77 FB           2158 	ld	-5(ix),a
   0721 79                 2159 	ld	a,c
   0722 CE 00              2160 	adc	a,#0x00
   0724 DD 77 FC           2161 	ld	-4(ix),a
                           2162 ;main.c:340: int pos = i + files_table_start;
                           2163 ;	genCast
                           2164 ;	AOP_STK for _show_table_i_1_1
   0727 DD 4E FF           2165 	ld	c,-1(ix)
   072A 06 00              2166 	ld	b,#0x00
                           2167 ;	genPlus
                           2168 ;	Shift into pair idx 0
   072C 21r02s38           2169 	ld	hl,#_files_table_start
   072F 79                 2170 	ld	a,c
   0730 86                 2171 	add	a,(hl)
   0731 4F                 2172 	ld	c,a
   0732 78                 2173 	ld	a,b
   0733 23                 2174 	inc	hl
   0734 8E                 2175 	adc	a,(hl)
   0735 47                 2176 	ld	b,a
                           2177 ;	genAssign
                           2178 ;	AOP_STK for _show_table_pos_2_2
   0736 DD 71 F9           2179 	ld	-7(ix),c
   0739 DD 70 FA           2180 	ld	-6(ix),b
                           2181 ;main.c:342: if ( pos < files_size )
                           2182 ;	genCmpLt
                           2183 ;	AOP_STK for _show_table_pos_2_2
   073C DD 7E F9           2184 	ld	a,-7(ix)
   073F FD 21r00s38        2185 	ld	iy,#_files_size
   0743 FD 96 00           2186 	sub	a,0(iy)
   0746 DD 7E FA           2187 	ld	a,-6(ix)
   0749 FD 9E 01           2188 	sbc	a,1(iy)
   074C F2rC4s08           2189 	jp	P,00106$
                           2190 ;main.c:346: for ( len = 0; files[pos].name[len] && files[pos].name[len] != '.'; len++ );
                           2191 ;	genMult
                           2192 ;	AOP_STK for _show_table_pos_2_2
   074F DD 5E F9           2193 	ld	e,-7(ix)
   0752 DD 56 FA           2194 	ld	d,-6(ix)
   0755 6B                 2195 	ld	l,e
   0756 62                 2196 	ld	h,d
   0757 29                 2197 	add	hl,hl
   0758 19                 2198 	add	hl,de
   0759 29                 2199 	add	hl,hl
   075A 19                 2200 	add	hl,de
   075B 29                 2201 	add	hl,hl
   075C 4D                 2202 	ld	c,l
   075D 44                 2203 	ld	b,h
                           2204 ;	genPlus
   075E 21r00s00           2205 	ld	hl,#_files
   0761 09                 2206 	add	hl,bc
   0762 4D                 2207 	ld	c,l
   0763 44                 2208 	ld	b,h
                           2209 ;	genPlus
                           2210 ;	genPlusIncr
   0764 03                 2211 	inc	bc
                           2212 ;	genAssign
                           2213 ;	AOP_STK for _show_table_len_3_3
   0765 DD 36 F8 00        2214 	ld	-8(ix),#0x00
                           2215 ;	genLabel
   0769                    2216 00114$:
                           2217 ;	genPlus
                           2218 ;	AOP_STK for _show_table_len_3_3
   0769 79                 2219 	ld	a,c
   076A DD 86 F8           2220 	add	a,-8(ix)
   076D 57                 2221 	ld	d,a
   076E 78                 2222 	ld	a,b
   076F CE 00              2223 	adc	a,#0x00
   0771 5F                 2224 	ld	e,a
                           2225 ;	genPointerGet
   0772 6A                 2226 	ld	l,d
   0773 63                 2227 	ld	h,e
   0774 5E                 2228 	ld	e,(hl)
                           2229 ;	genIfx
   0775 AF                 2230 	xor	a,a
   0776 B3                 2231 	or	a,e
   0777 28 0A              2232 	jr	Z,00137$
                           2233 ;	genCmpEq
                           2234 ; genCmpEq: left 1, right 1, result 0
   0779 7B                 2235 	ld	a,e
   077A D6 2E              2236 	sub	a,#0x2E
   077C 28 05              2237 	jr	Z,00137$
                           2238 ;	genPlus
                           2239 ;	AOP_STK for _show_table_len_3_3
                           2240 ;	genPlusIncr
   077E DD 34 F8           2241 	inc	-8(ix)
                           2242 ;	genGoto
   0781 18 E6              2243 	jr	00114$
                           2244 ;	genLabel
   0783                    2245 00137$:
                           2246 ;	genAssign
                           2247 ;	AOP_STK for _show_table_len_3_3
                           2248 ;	AOP_STK for _show_table_sloc1_1_0
   0783 DD 7E F8           2249 	ld	a,-8(ix)
   0786 DD 77 EB           2250 	ld	-21(ix),a
                           2251 ;main.c:347: if ( files[pos].name[len] && files[pos].name[0] != '.' )
                           2252 ;	genMult
                           2253 ;	AOP_STK for _show_table_pos_2_2
   0789 DD 5E F9           2254 	ld	e,-7(ix)
   078C DD 56 FA           2255 	ld	d,-6(ix)
   078F 6B                 2256 	ld	l,e
   0790 62                 2257 	ld	h,d
   0791 29                 2258 	add	hl,hl
   0792 19                 2259 	add	hl,de
   0793 29                 2260 	add	hl,hl
   0794 19                 2261 	add	hl,de
   0795 29                 2262 	add	hl,hl
   0796 5D                 2263 	ld	e,l
   0797 54                 2264 	ld	d,h
                           2265 ;	genPlus
                           2266 ;	AOP_STK for _show_table_sloc0_1_0
   0798 21r00s00           2267 	ld	hl,#_files
   079B 19                 2268 	add	hl,de
   079C DD 75 EC           2269 	ld	-20(ix),l
   079F DD 74 ED           2270 	ld	-19(ix),h
                           2271 ;	genPlus
                           2272 ;	AOP_STK for _show_table_sloc0_1_0
                           2273 ;	genPlusIncr
   07A2 DD 7E EC           2274 	ld	a,-20(ix)
   07A5 C6 01              2275 	add	a,#0x01
   07A7 47                 2276 	ld	b,a
   07A8 DD 7E ED           2277 	ld	a,-19(ix)
   07AB CE 00              2278 	adc	a,#0x00
   07AD 4F                 2279 	ld	c,a
                           2280 ;	genPlus
                           2281 ;	AOP_STK for _show_table_len_3_3
   07AE 78                 2282 	ld	a,b
   07AF DD 86 F8           2283 	add	a,-8(ix)
   07B2 47                 2284 	ld	b,a
   07B3 79                 2285 	ld	a,c
   07B4 CE 00              2286 	adc	a,#0x00
   07B6 4F                 2287 	ld	c,a
                           2288 ;	genPointerGet
   07B7 68                 2289 	ld	l,b
   07B8 61                 2290 	ld	h,c
   07B9 7E                 2291 	ld	a,(hl)
                           2292 ;	genIfx
   07BA B7                 2293 	or	a,a
   07BB CAr89s08           2294 	jp	Z,00102$
                           2295 ;	genPlus
                           2296 ;	AOP_STK for _show_table_sloc0_1_0
                           2297 ;	genPlusIncr
   07BE DD 4E EC           2298 	ld	c,-20(ix)
   07C1 DD 46 ED           2299 	ld	b,-19(ix)
   07C4 03                 2300 	inc	bc
                           2301 ;	genPointerGet
   07C5 0A                 2302 	ld	a,(bc)
                           2303 ;	genCmpEq
                           2304 ; genCmpEq: left 1, right 1, result 0
   07C6 4F                 2305 	ld	c,a
   07C7 D6 2E              2306 	sub	a,#0x2E
   07C9 CAr89s08           2307 	jp	Z,00102$
                           2308 ;main.c:350: byte fnlen = len > 8 ? 8 : len;
                           2309 ;	genCmpGt
                           2310 ;	AOP_STK for _show_table_len_3_3
   07CC 3E 08              2311 	ld	a,#0x08
   07CE DD 96 F8           2312 	sub	a,-8(ix)
   07D1 30 04              2313 	jr	NC,00124$
                           2314 ;	genAssign
   07D3 0E 08              2315 	ld	c,#0x08
                           2316 ;	genGoto
   07D5 18 03              2317 	jr	00125$
                           2318 ;	genLabel
   07D7                    2319 00124$:
                           2320 ;	genAssign
                           2321 ;	AOP_STK for _show_table_len_3_3
   07D7 DD 4E F8           2322 	ld	c,-8(ix)
                           2323 ;	genLabel
   07DA                    2324 00125$:
                           2325 ;	genAssign
                           2326 ;	AOP_STK for _show_table_fnlen_4_4
   07DA DD 71 EE           2327 	ld	-18(ix),c
                           2328 ;main.c:351: memcpy( fn, files[pos].name, fnlen );
                           2329 ;	genCast
                           2330 ;	AOP_STK for _show_table_fnlen_4_4
                           2331 ;	AOP_STK for _show_table_sloc0_1_0
   07DD DD 7E EE           2332 	ld	a,-18(ix)
   07E0 DD 77 EC           2333 	ld	-20(ix),a
   07E3 DD 36 ED 00        2334 	ld	-19(ix),#0x00
                           2335 ;	genPlus
   07E7 21r00s00           2336 	ld	hl,#_files
   07EA 19                 2337 	add	hl,de
   07EB 4D                 2338 	ld	c,l
   07EC 44                 2339 	ld	b,h
                           2340 ;	genPlus
                           2341 ;	AOP_STK for _show_table_sloc2_1_0
                           2342 ;	genPlusIncr
   07ED 79                 2343 	ld	a,c
   07EE C6 01              2344 	add	a,#0x01
   07F0 DD 77 E9           2345 	ld	-23(ix),a
   07F3 78                 2346 	ld	a,b
   07F4 CE 00              2347 	adc	a,#0x00
   07F6 DD 77 EA           2348 	ld	-22(ix),a
                           2349 ;	genAddrOf
   07F9 21 06 00           2350 	ld	hl,#0x0006
   07FC 39                 2351 	add	hl,sp
   07FD 4D                 2352 	ld	c,l
   07FE 44                 2353 	ld	b,h
                           2354 ;	genIpush
                           2355 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   07FF D5                 2356 	push	de
                           2357 ;	AOP_STK for _show_table_sloc0_1_0
   0800 DD 6E EC           2358 	ld	l,-20(ix)
   0803 DD 66 ED           2359 	ld	h,-19(ix)
   0806 E5                 2360 	push	hl
                           2361 ;	genIpush
                           2362 ;	AOP_STK for _show_table_sloc2_1_0
   0807 DD 6E E9           2363 	ld	l,-23(ix)
   080A DD 66 EA           2364 	ld	h,-22(ix)
   080D E5                 2365 	push	hl
                           2366 ;	genIpush
   080E C5                 2367 	push	bc
                           2368 ;	genCall
   080F CDr00s00           2369 	call	_memcpy
   0812 F1                 2370 	pop	af
   0813 F1                 2371 	pop	af
   0814 F1                 2372 	pop	af
   0815 D1                 2373 	pop	de
                           2374 ;main.c:352: fn[fnlen] = 0;
                           2375 ;	genAddrOf
                           2376 ;	AOP_STK for _show_table_sloc2_1_0
   0816 21 06 00           2377 	ld	hl,#0x0006
   0819 39                 2378 	add	hl,sp
   081A DD 75 E9           2379 	ld	-23(ix),l
   081D DD 74 EA           2380 	ld	-22(ix),h
                           2381 ;	genPlus
                           2382 ;	AOP_STK for _show_table_sloc2_1_0
                           2383 ;	AOP_STK for _show_table_fnlen_4_4
   0820 DD 7E E9           2384 	ld	a,-23(ix)
   0823 DD 86 EE           2385 	add	a,-18(ix)
   0826 4F                 2386 	ld	c,a
   0827 DD 7E EA           2387 	ld	a,-22(ix)
   082A CE 00              2388 	adc	a,#0x00
   082C 47                 2389 	ld	b,a
                           2390 ;	genAssign (pointer)
                           2391 ;	isBitvar = 0
   082D 3E 00              2392 	ld	a,#0x00
   082F 02                 2393 	ld	(bc),a
                           2394 ;main.c:353: print_pad_8( fn, col, row, 8 );
                           2395 ;	genCast
                           2396 ;	AOP_STK for _show_table_row_2_2
                           2397 ;	AOP_STK for _show_table_sloc0_1_0
   0830 DD 7E FB           2398 	ld	a,-5(ix)
   0833 DD 77 EC           2399 	ld	-20(ix),a
                           2400 ;	genCast
                           2401 ;	AOP_STK for _show_table_col_2_2
   0836 DD 46 FD           2402 	ld	b,-3(ix)
                           2403 ;	genIpush
                           2404 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0839 D5                 2405 	push	de
   083A 3E 08              2406 	ld	a,#0x08
   083C F5                 2407 	push	af
   083D 33                 2408 	inc	sp
                           2409 ;	genIpush
                           2410 ;	AOP_STK for _show_table_sloc0_1_0
   083E DD 7E EC           2411 	ld	a,-20(ix)
   0841 F5                 2412 	push	af
   0842 33                 2413 	inc	sp
                           2414 ;	genIpush
   0843 C5                 2415 	push	bc
   0844 33                 2416 	inc	sp
                           2417 ;	genIpush
                           2418 ;	AOP_STK for _show_table_sloc2_1_0
   0845 DD 6E E9           2419 	ld	l,-23(ix)
   0848 DD 66 EA           2420 	ld	h,-22(ix)
   084B E5                 2421 	push	hl
                           2422 ;	genCall
   084C CDr64s05           2423 	call	_print_pad_8
   084F F1                 2424 	pop	af
   0850 F1                 2425 	pop	af
   0851 33                 2426 	inc	sp
   0852 D1                 2427 	pop	de
                           2428 ;main.c:354: print_pad_8( files[pos].name + len, col + 8, row, 4 );
                           2429 ;	genCast
                           2430 ;	AOP_STK for _show_table_col_2_2
   0853 DD 46 FD           2431 	ld	b,-3(ix)
                           2432 ;	genPlus
                           2433 ;	AOP_STK for _show_table_sloc2_1_0
                           2434 ;	genPlusIncr
   0856 78                 2435 	ld	a,b
   0857 C6 08              2436 	add	a,#0x08
   0859 DD 77 E9           2437 	ld	-23(ix),a
                           2438 ;	genPlus
   085C 21r00s00           2439 	ld	hl,#_files
   085F 19                 2440 	add	hl,de
   0860 45                 2441 	ld	b,l
   0861 4C                 2442 	ld	c,h
                           2443 ;	genPlus
                           2444 ;	genPlusIncr
   0862 04                 2445 	inc	b
   0863 20 01              2446 	jr	NZ,00143$
   0865 0C                 2447 	inc	c
   0866                    2448 00143$:
                           2449 ;	genPlus
                           2450 ;	AOP_STK for _show_table_sloc1_1_0
   0866 78                 2451 	ld	a,b
   0867 DD 86 EB           2452 	add	a,-21(ix)
   086A 47                 2453 	ld	b,a
   086B 79                 2454 	ld	a,c
   086C CE 00              2455 	adc	a,#0x00
   086E 4F                 2456 	ld	c,a
                           2457 ;	genIpush
                           2458 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   086F 3E 04              2459 	ld	a,#0x04
   0871 F5                 2460 	push	af
   0872 33                 2461 	inc	sp
                           2462 ;	genIpush
                           2463 ;	AOP_STK for _show_table_sloc0_1_0
   0873 DD 7E EC           2464 	ld	a,-20(ix)
   0876 F5                 2465 	push	af
   0877 33                 2466 	inc	sp
                           2467 ;	genIpush
                           2468 ;	AOP_STK for _show_table_sloc2_1_0
   0878 DD 7E E9           2469 	ld	a,-23(ix)
   087B F5                 2470 	push	af
   087C 33                 2471 	inc	sp
                           2472 ;	genIpush
   087D 68                 2473 	ld	l,b
   087E 61                 2474 	ld	h,c
   087F E5                 2475 	push	hl
                           2476 ;	genCall
   0880 CDr64s05           2477 	call	_print_pad_8
   0883 F1                 2478 	pop	af
   0884 F1                 2479 	pop	af
   0885 33                 2480 	inc	sp
                           2481 ;	genGoto
   0886 C3rDDs08           2482 	jp	00120$
                           2483 ;	genLabel
   0889                    2484 00102$:
                           2485 ;main.c:358: print_pad_8( files[pos].name, col, row, 8 );
                           2486 ;	genCast
                           2487 ;	AOP_STK for _show_table_row_2_2
   0889 DD 4E FB           2488 	ld	c,-5(ix)
                           2489 ;	genCast
                           2490 ;	AOP_STK for _show_table_col_2_2
   088C DD 46 FD           2491 	ld	b,-3(ix)
                           2492 ;	genPlus
   088F 21r00s00           2493 	ld	hl,#_files
   0892 19                 2494 	add	hl,de
   0893 5D                 2495 	ld	e,l
   0894 54                 2496 	ld	d,h
                           2497 ;	genPlus
                           2498 ;	genPlusIncr
   0895 13                 2499 	inc	de
                           2500 ;	genIpush
                           2501 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0896 C5                 2502 	push	bc
   0897 3E 08              2503 	ld	a,#0x08
   0899 F5                 2504 	push	af
   089A 33                 2505 	inc	sp
                           2506 ;	genIpush
   089B 79                 2507 	ld	a,c
   089C F5                 2508 	push	af
   089D 33                 2509 	inc	sp
                           2510 ;	genIpush
   089E C5                 2511 	push	bc
   089F 33                 2512 	inc	sp
                           2513 ;	genIpush
   08A0 D5                 2514 	push	de
                           2515 ;	genCall
   08A1 CDr64s05           2516 	call	_print_pad_8
   08A4 F1                 2517 	pop	af
   08A5 F1                 2518 	pop	af
   08A6 33                 2519 	inc	sp
   08A7 C1                 2520 	pop	bc
                           2521 ;main.c:359: print_pad_8( "", col + 8, row, 4 );
                           2522 ;	genCast
                           2523 ;	AOP_STK for _show_table_col_2_2
   08A8 DD 46 FD           2524 	ld	b,-3(ix)
                           2525 ;	genPlus
                           2526 ;	genPlusIncr
   08AB 78                 2527 	ld	a,b
   08AC C6 08              2528 	add	a,#0x08
   08AE 47                 2529 	ld	b,a
                           2530 ;	genIpush
                           2531 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08AF 3E 04              2532 	ld	a,#0x04
   08B1 F5                 2533 	push	af
   08B2 33                 2534 	inc	sp
                           2535 ;	genIpush
   08B3 79                 2536 	ld	a,c
   08B4 F5                 2537 	push	af
   08B5 33                 2538 	inc	sp
                           2539 ;	genIpush
   08B6 C5                 2540 	push	bc
   08B7 33                 2541 	inc	sp
                           2542 ;	genIpush
   08B8 21r41s09           2543 	ld	hl,#__str_6
   08BB E5                 2544 	push	hl
                           2545 ;	genCall
   08BC CDr64s05           2546 	call	_print_pad_8
   08BF F1                 2547 	pop	af
   08C0 F1                 2548 	pop	af
   08C1 33                 2549 	inc	sp
                           2550 ;	genGoto
   08C2 18 19              2551 	jr	00120$
                           2552 ;	genLabel
   08C4                    2553 00106$:
                           2554 ;main.c:364: print_pad_8( "", col, row, 12 );
                           2555 ;	genCast
                           2556 ;	AOP_STK for _show_table_row_2_2
   08C4 DD 4E FB           2557 	ld	c,-5(ix)
                           2558 ;	genCast
                           2559 ;	AOP_STK for _show_table_col_2_2
   08C7 DD 46 FD           2560 	ld	b,-3(ix)
                           2561 ;	genIpush
                           2562 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08CA 3E 0C              2563 	ld	a,#0x0C
   08CC F5                 2564 	push	af
   08CD 33                 2565 	inc	sp
                           2566 ;	genIpush
   08CE 79                 2567 	ld	a,c
   08CF F5                 2568 	push	af
   08D0 33                 2569 	inc	sp
                           2570 ;	genIpush
   08D1 C5                 2571 	push	bc
   08D2 33                 2572 	inc	sp
                           2573 ;	genIpush
   08D3 21r41s09           2574 	ld	hl,#__str_6
   08D6 E5                 2575 	push	hl
                           2576 ;	genCall
   08D7 CDr64s05           2577 	call	_print_pad_8
   08DA F1                 2578 	pop	af
   08DB F1                 2579 	pop	af
   08DC 33                 2580 	inc	sp
                           2581 ;	genLabel
   08DD                    2582 00120$:
                           2583 ;main.c:336: for ( i = 0; i < FILES_PER_ROW*2; i++ )
                           2584 ;	genPlus
                           2585 ;	AOP_STK for _show_table_i_1_1
                           2586 ;	genPlusIncr
   08DD DD 34 FF           2587 	inc	-1(ix)
                           2588 ;	genGoto
   08E0 C3rE2s06           2589 	jp	00118$
                           2590 ;	genLabel
   08E3                    2591 00121$:
                           2592 ;main.c:367: if ( !files_size )
                           2593 ;	genIfx
   08E3 FD 21r00s38        2594 	ld	iy,#_files_size
   08E7 FD 7E 00           2595 	ld	a,0(iy)
   08EA FD B6 01           2596 	or	a,1(iy)
   08ED 20 4A              2597 	jr	NZ,00122$
                           2598 ;main.c:369: if ( !pport_good )
                           2599 ;	genIfx
   08EF AF                 2600 	xor	a,a
   08F0 FD 21r69s38        2601 	ld	iy,#_pport_good
   08F4 FD B6 00           2602 	or	a,0(iy)
   08F7 20 21              2603 	jr	NZ,00109$
                           2604 ;main.c:371: text_out_pos_8( "SD error !", 10, 4, 0, 0xff );
                           2605 ;	genIpush
                           2606 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08F9 21 00 FF           2607 	ld	hl,#0xFF00
   08FC E5                 2608 	push	hl
                           2609 ;	genIpush
   08FD 21 0A 04           2610 	ld	hl,#0x040A
   0900 E5                 2611 	push	hl
                           2612 ;	genIpush
   0901 21r42s09           2613 	ld	hl,#__str_7
   0904 E5                 2614 	push	hl
                           2615 ;	genCall
   0905 CDr00s00           2616 	call	_text_out_pos_8
   0908 F1                 2617 	pop	af
   0909 F1                 2618 	pop	af
   090A F1                 2619 	pop	af
                           2620 ;main.c:372: set_attr( 0302, 10, 4, 10 );
                           2621 ;	genIpush
                           2622 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   090B 21 04 0A           2623 	ld	hl,#0x0A04
   090E E5                 2624 	push	hl
                           2625 ;	genIpush
   090F 21 C2 0A           2626 	ld	hl,#0x0AC2
   0912 E5                 2627 	push	hl
                           2628 ;	genCall
   0913 CDr00s00           2629 	call	_set_attr
   0916 F1                 2630 	pop	af
   0917 F1                 2631 	pop	af
                           2632 ;	genGoto
   0918 18 1F              2633 	jr	00122$
                           2634 ;	genLabel
   091A                    2635 00109$:
                           2636 ;main.c:376: text_out_pos_8( "no files !", 10, 4, 0, 0xff );
                           2637 ;	genIpush
                           2638 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   091A 21 00 FF           2639 	ld	hl,#0xFF00
   091D E5                 2640 	push	hl
                           2641 ;	genIpush
   091E 21 0A 04           2642 	ld	hl,#0x040A
   0921 E5                 2643 	push	hl
                           2644 ;	genIpush
   0922 21r4Ds09           2645 	ld	hl,#__str_8
   0925 E5                 2646 	push	hl
                           2647 ;	genCall
   0926 CDr00s00           2648 	call	_text_out_pos_8
   0929 F1                 2649 	pop	af
   092A F1                 2650 	pop	af
   092B F1                 2651 	pop	af
                           2652 ;main.c:377: set_attr( 0102, 10, 4, 10 );
                           2653 ;	genIpush
                           2654 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   092C 21 04 0A           2655 	ld	hl,#0x0A04
   092F E5                 2656 	push	hl
                           2657 ;	genIpush
   0930 21 42 0A           2658 	ld	hl,#0x0A42
   0933 E5                 2659 	push	hl
                           2660 ;	genCall
   0934 CDr00s00           2661 	call	_set_attr
   0937 F1                 2662 	pop	af
   0938 F1                 2663 	pop	af
                           2664 ;	genLabel
   0939                    2665 00122$:
                           2666 ;	genEndFunction
   0939 DD F9              2667 	ld	sp,ix
   093B DD E1              2668 	pop	ix
   093D C9                 2669 	ret
   093E                    2670 _show_table_end::
   093E                    2671 __str_5:
   093E 3E 20              2672 	.ascii "> "
   0940 00                 2673 	.db 0x00
   0941                    2674 __str_6:
   0941 00                 2675 	.db 0x00
   0942                    2676 __str_7:
   0942 53 44 20 65 72 72  2677 	.ascii "SD error !"
        6F 72 20 21
   094C 00                 2678 	.db 0x00
   094D                    2679 __str_8:
   094D 6E 6F 20 66 69 6C  2680 	.ascii "no files !"
        65 73 20 21
   0957 00                 2681 	.db 0x00
                           2682 ;main.c:384: byte comp_name( int a, int b )
                           2683 ;	genLabel
                           2684 ;	genFunction
                           2685 ;	---------------------------------
                           2686 ; Function comp_name
                           2687 ; ---------------------------------
   0958                    2688 _comp_name_start::
   0958                    2689 _comp_name:
   0958 DD E5              2690 	push	ix
   095A DD 21 00 00        2691 	ld	ix,#0
   095E DD 39              2692 	add	ix,sp
   0960 21 FF FF           2693 	ld	hl,#-1
   0963 39                 2694 	add	hl,sp
   0964 F9                 2695 	ld	sp,hl
                           2696 ;main.c:386: if (( files[a].attr & AM_DIR ) && !( files[b].attr & AM_DIR ) ) return true;
                           2697 ;	genMult
                           2698 ;	AOP_STK for 
   0965 DD 5E 04           2699 	ld	e,4(ix)
   0968 DD 56 05           2700 	ld	d,5(ix)
   096B 6B                 2701 	ld	l,e
   096C 62                 2702 	ld	h,d
   096D 29                 2703 	add	hl,hl
   096E 19                 2704 	add	hl,de
   096F 29                 2705 	add	hl,hl
   0970 19                 2706 	add	hl,de
   0971 29                 2707 	add	hl,hl
   0972 4D                 2708 	ld	c,l
   0973 44                 2709 	ld	b,h
                           2710 ;	genPlus
   0974 21r00s00           2711 	ld	hl,#_files
   0977 09                 2712 	add	hl,bc
   0978 5D                 2713 	ld	e,l
   0979 54                 2714 	ld	d,h
                           2715 ;	genPointerGet
   097A 1A                 2716 	ld	a,(de)
                           2717 ;	genAnd
                           2718 ;	AOP_STK for _comp_name_sloc0_1_0
   097B 5F                 2719 	ld	e,a
   097C E6 10              2720 	and	a,#0x10
                           2721 ;	genIfx
                           2722 ;	AOP_STK for _comp_name_sloc0_1_0
   097E DD 77 FF           2723 	ld	-1(ix),a
   0981 B7                 2724 	or	a,a
   0982 28 26              2725 	jr	Z,00106$
                           2726 ;	genMult
                           2727 ;	AOP_STK for 
   0984 DD 5E 06           2728 	ld	e,6(ix)
   0987 DD 56 07           2729 	ld	d,7(ix)
   098A 6B                 2730 	ld	l,e
   098B 62                 2731 	ld	h,d
   098C 29                 2732 	add	hl,hl
   098D 19                 2733 	add	hl,de
   098E 29                 2734 	add	hl,hl
   098F 19                 2735 	add	hl,de
   0990 29                 2736 	add	hl,hl
   0991 55                 2737 	ld	d,l
   0992 5C                 2738 	ld	e,h
                           2739 ;	genPlus
   0993 3Er00              2740 	ld	a,#<_files
   0995 82                 2741 	add	a,d
   0996 57                 2742 	ld	d,a
   0997 3Es00              2743 	ld	a,#>_files
   0999 8B                 2744 	adc	a,e
   099A 5F                 2745 	ld	e,a
                           2746 ;	genPointerGet
   099B 6A                 2747 	ld	l,d
   099C 63                 2748 	ld	h,e
   099D 56                 2749 	ld	d,(hl)
                           2750 ;	genAnd
   099E 7A                 2751 	ld	a,d
   099F E6 10              2752 	and	a,#0x10
   09A1 28 02              2753 	jr	Z,00116$
   09A3 18 05              2754 	jr	00106$
   09A5                    2755 00116$:
                           2756 ;	genRet
                           2757 ; Dump of IC_LEFT: type AOP_LIT size 1
   09A5 2E 01              2758 	ld	l,#0x01
   09A7 C3r06s0A           2759 	jp	00109$
                           2760 ;	genLabel
   09AA                    2761 00106$:
                           2762 ;main.c:387: else if ( !( files[a].attr & AM_DIR ) && ( files[b].attr & AM_DIR ) ) return false;
                           2763 ;	genIfx
                           2764 ;	AOP_STK for _comp_name_sloc0_1_0
   09AA AF                 2765 	xor	a,a
   09AB DD B6 FF           2766 	or	a,-1(ix)
   09AE 20 1F              2767 	jr	NZ,00102$
                           2768 ;	genMult
                           2769 ;	AOP_STK for 
   09B0 DD 5E 06           2770 	ld	e,6(ix)
   09B3 DD 56 07           2771 	ld	d,7(ix)
   09B6 6B                 2772 	ld	l,e
   09B7 62                 2773 	ld	h,d
   09B8 29                 2774 	add	hl,hl
   09B9 19                 2775 	add	hl,de
   09BA 29                 2776 	add	hl,hl
   09BB 19                 2777 	add	hl,de
   09BC 29                 2778 	add	hl,hl
   09BD 5D                 2779 	ld	e,l
   09BE 54                 2780 	ld	d,h
                           2781 ;	genPlus
   09BF 21r00s00           2782 	ld	hl,#_files
   09C2 19                 2783 	add	hl,de
   09C3 5D                 2784 	ld	e,l
   09C4 54                 2785 	ld	d,h
                           2786 ;	genPointerGet
   09C5 1A                 2787 	ld	a,(de)
                           2788 ;	genAnd
   09C6 5F                 2789 	ld	e,a
   09C7 E6 10              2790 	and	a,#0x10
   09C9 28 04              2791 	jr	Z,00102$
                           2792 ;	genRet
                           2793 ; Dump of IC_LEFT: type AOP_LIT size 1
   09CB 2E 00              2794 	ld	l,#0x00
   09CD 18 37              2795 	jr	00109$
                           2796 ;	genLabel
   09CF                    2797 00102$:
                           2798 ;main.c:388: else return strcmp( files[a].name, files[b].name ) <= 0;
                           2799 ;	genMult
                           2800 ;	AOP_STK for 
   09CF DD 5E 06           2801 	ld	e,6(ix)
   09D2 DD 56 07           2802 	ld	d,7(ix)
   09D5 6B                 2803 	ld	l,e
   09D6 62                 2804 	ld	h,d
   09D7 29                 2805 	add	hl,hl
   09D8 19                 2806 	add	hl,de
   09D9 29                 2807 	add	hl,hl
   09DA 19                 2808 	add	hl,de
   09DB 29                 2809 	add	hl,hl
   09DC 5D                 2810 	ld	e,l
   09DD 54                 2811 	ld	d,h
                           2812 ;	genPlus
   09DE 21r00s00           2813 	ld	hl,#_files
   09E1 19                 2814 	add	hl,de
   09E2 5D                 2815 	ld	e,l
   09E3 54                 2816 	ld	d,h
                           2817 ;	genPlus
                           2818 ;	genPlusIncr
   09E4 13                 2819 	inc	de
                           2820 ;	genPlus
   09E5 21r00s00           2821 	ld	hl,#_files
   09E8 09                 2822 	add	hl,bc
   09E9 4D                 2823 	ld	c,l
   09EA 44                 2824 	ld	b,h
                           2825 ;	genPlus
                           2826 ;	genPlusIncr
   09EB 03                 2827 	inc	bc
                           2828 ;	genIpush
                           2829 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   09EC D5                 2830 	push	de
                           2831 ;	genIpush
   09ED C5                 2832 	push	bc
                           2833 ;	genCall
   09EE CDr00s00           2834 	call	_strcmp
   09F1 44                 2835 	ld	b,h
   09F2 4D                 2836 	ld	c,l
   09F3 F1                 2837 	pop	af
   09F4 F1                 2838 	pop	af
                           2839 ;	genCmpGt
   09F5 3E 00              2840 	ld	a,#0x00
   09F7 91                 2841 	sub	a,c
   09F8 3E 00              2842 	ld	a,#0x00
   09FA 98                 2843 	sbc	a,b
   09FB 07                 2844 	rlca
   09FC E6 01              2845 	and	a,#0x01
                           2846 ;	genNot
   09FE 4F                 2847 	ld	c,a
   09FF B7                 2848 	or	a,a
   0A00 D6 01              2849 	sub	a,#0x01
   0A02 3E 00              2850 	ld	a,#0x00
   0A04 17                 2851 	rla
   0A05 6F                 2852 	ld	l,a
                           2853 ;	genRet
                           2854 ; Dump of IC_LEFT: type AOP_STR size 1
                           2855 ;	genLabel
   0A06                    2856 00109$:
                           2857 ;	genEndFunction
   0A06 DD F9              2858 	ld	sp,ix
   0A08 DD E1              2859 	pop	ix
   0A0A C9                 2860 	ret
   0A0B                    2861 _comp_name_end::
                           2862 ;main.c:391: void swap_name( int a, int b )
                           2863 ;	genLabel
                           2864 ;	genFunction
                           2865 ;	---------------------------------
                           2866 ; Function swap_name
                           2867 ; ---------------------------------
   0A0B                    2868 _swap_name_start::
   0A0B                    2869 _swap_name:
   0A0B DD E5              2870 	push	ix
   0A0D DD 21 00 00        2871 	ld	ix,#0
   0A11 DD 39              2872 	add	ix,sp
   0A13 21 F0 FF           2873 	ld	hl,#-16
   0A16 39                 2874 	add	hl,sp
   0A17 F9                 2875 	ld	sp,hl
                           2876 ;main.c:395: memcpy( &temp, &files[a], sizeof( struct FRECORD ) );
                           2877 ;	genMult
                           2878 ;	AOP_STK for 
   0A18 DD 5E 04           2879 	ld	e,4(ix)
   0A1B DD 56 05           2880 	ld	d,5(ix)
   0A1E 6B                 2881 	ld	l,e
   0A1F 62                 2882 	ld	h,d
   0A20 29                 2883 	add	hl,hl
   0A21 19                 2884 	add	hl,de
   0A22 29                 2885 	add	hl,hl
   0A23 19                 2886 	add	hl,de
   0A24 29                 2887 	add	hl,hl
   0A25 4D                 2888 	ld	c,l
   0A26 44                 2889 	ld	b,h
                           2890 ;	genPlus
                           2891 ;	AOP_STK for _swap_name_sloc0_1_0
   0A27 21r00s00           2892 	ld	hl,#_files
   0A2A 09                 2893 	add	hl,bc
   0A2B DD 75 F0           2894 	ld	-16(ix),l
   0A2E DD 74 F1           2895 	ld	-15(ix),h
                           2896 ;	genAddrOf
   0A31 21 02 00           2897 	ld	hl,#0x0002
   0A34 39                 2898 	add	hl,sp
   0A35 5D                 2899 	ld	e,l
   0A36 54                 2900 	ld	d,h
                           2901 ;	genIpush
                           2902 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0A37 C5                 2903 	push	bc
   0A38 21 0E 00           2904 	ld	hl,#0x000E
   0A3B E5                 2905 	push	hl
                           2906 ;	genIpush
                           2907 ;	AOP_STK for _swap_name_sloc0_1_0
   0A3C DD 6E F0           2908 	ld	l,-16(ix)
   0A3F DD 66 F1           2909 	ld	h,-15(ix)
   0A42 E5                 2910 	push	hl
                           2911 ;	genIpush
   0A43 D5                 2912 	push	de
                           2913 ;	genCall
   0A44 CDr00s00           2914 	call	_memcpy
   0A47 F1                 2915 	pop	af
   0A48 F1                 2916 	pop	af
   0A49 F1                 2917 	pop	af
   0A4A C1                 2918 	pop	bc
                           2919 ;main.c:396: memcpy( &files[a], &files[b], sizeof( struct FRECORD ) );
                           2920 ;	genMult
                           2921 ;	AOP_STK for 
                           2922 ;	AOP_STK for _swap_name_sloc0_1_0
   0A4B DD 5E 06           2923 	ld	e,6(ix)
   0A4E DD 56 07           2924 	ld	d,7(ix)
   0A51 6B                 2925 	ld	l,e
   0A52 62                 2926 	ld	h,d
   0A53 29                 2927 	add	hl,hl
   0A54 19                 2928 	add	hl,de
   0A55 29                 2929 	add	hl,hl
   0A56 19                 2930 	add	hl,de
   0A57 29                 2931 	add	hl,hl
   0A58 DD 75 F0           2932 	ld	-16(ix),l
   0A5B DD 74 F1           2933 	ld	-15(ix),h
                           2934 ;	genPlus
                           2935 ;	AOP_STK for _swap_name_sloc0_1_0
   0A5E 3Er00              2936 	ld	a,#<_files
   0A60 DD 86 F0           2937 	add	a,-16(ix)
   0A63 5F                 2938 	ld	e,a
   0A64 3Es00              2939 	ld	a,#>_files
   0A66 DD 8E F1           2940 	adc	a,-15(ix)
   0A69 57                 2941 	ld	d,a
                           2942 ;	genPlus
   0A6A 21r00s00           2943 	ld	hl,#_files
   0A6D 09                 2944 	add	hl,bc
   0A6E 4D                 2945 	ld	c,l
   0A6F 44                 2946 	ld	b,h
                           2947 ;	genIpush
                           2948 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A70 21 0E 00           2949 	ld	hl,#0x000E
   0A73 E5                 2950 	push	hl
                           2951 ;	genIpush
   0A74 D5                 2952 	push	de
                           2953 ;	genIpush
   0A75 C5                 2954 	push	bc
                           2955 ;	genCall
   0A76 CDr00s00           2956 	call	_memcpy
   0A79 F1                 2957 	pop	af
   0A7A F1                 2958 	pop	af
   0A7B F1                 2959 	pop	af
                           2960 ;main.c:397: memcpy( &files[b], &temp,  sizeof( struct FRECORD ) );
                           2961 ;	genAddrOf
   0A7C 21 02 00           2962 	ld	hl,#0x0002
   0A7F 39                 2963 	add	hl,sp
   0A80 4D                 2964 	ld	c,l
   0A81 44                 2965 	ld	b,h
                           2966 ;	genPlus
                           2967 ;	AOP_STK for _swap_name_sloc0_1_0
   0A82 3Er00              2968 	ld	a,#<_files
   0A84 DD 86 F0           2969 	add	a,-16(ix)
   0A87 5F                 2970 	ld	e,a
   0A88 3Es00              2971 	ld	a,#>_files
   0A8A DD 8E F1           2972 	adc	a,-15(ix)
   0A8D 57                 2973 	ld	d,a
                           2974 ;	genIpush
                           2975 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A8E 21 0E 00           2976 	ld	hl,#0x000E
   0A91 E5                 2977 	push	hl
                           2978 ;	genIpush
   0A92 C5                 2979 	push	bc
                           2980 ;	genIpush
   0A93 D5                 2981 	push	de
                           2982 ;	genCall
   0A94 CDr00s00           2983 	call	_memcpy
   0A97 F1                 2984 	pop	af
   0A98 F1                 2985 	pop	af
   0A99 F1                 2986 	pop	af
                           2987 ;	genLabel
                           2988 ;	genEndFunction
   0A9A DD F9              2989 	ld	sp,ix
   0A9C DD E1              2990 	pop	ix
   0A9E C9                 2991 	ret
   0A9F                    2992 _swap_name_end::
                           2993 ;main.c:400: void qsort( int l, int h )
                           2994 ;	genLabel
                           2995 ;	genFunction
                           2996 ;	---------------------------------
                           2997 ; Function qsort
                           2998 ; ---------------------------------
   0A9F                    2999 _qsort_start::
   0A9F                    3000 _qsort:
   0A9F DD E5              3001 	push	ix
   0AA1 DD 21 00 00        3002 	ld	ix,#0
   0AA5 DD 39              3003 	add	ix,sp
   0AA7 21 FA FF           3004 	ld	hl,#-6
   0AAA 39                 3005 	add	hl,sp
   0AAB F9                 3006 	ld	sp,hl
                           3007 ;main.c:402: int i = l;
                           3008 ;	genAssign
                           3009 ;	AOP_STK for 
   0AAC DD 5E 04           3010 	ld	e,4(ix)
   0AAF DD 56 05           3011 	ld	d,5(ix)
                           3012 ;main.c:403: int j = h;
                           3013 ;	genAssign
                           3014 ;	AOP_STK for 
                           3015 ;	AOP_STK for _qsort_j_1_1
   0AB2 DD 7E 06           3016 	ld	a,6(ix)
   0AB5 DD 77 FE           3017 	ld	-2(ix),a
   0AB8 DD 7E 07           3018 	ld	a,7(ix)
   0ABB DD 77 FF           3019 	ld	-1(ix),a
                           3020 ;main.c:405: int k = ( l + h ) / 2;
                           3021 ;	genPlus
                           3022 ;	AOP_STK for _qsort_j_1_1
   0ABE 7B                 3023 	ld	a,e
   0ABF DD 86 FE           3024 	add	a,-2(ix)
   0AC2 4F                 3025 	ld	c,a
   0AC3 7A                 3026 	ld	a,d
   0AC4 DD 8E FF           3027 	adc	a,-1(ix)
   0AC7 47                 3028 	ld	b,a
                           3029 ;	genIpush
                           3030 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0AC8 D5                 3031 	push	de
   0AC9 21 02 00           3032 	ld	hl,#0x0002
   0ACC E5                 3033 	push	hl
                           3034 ;	genIpush
   0ACD C5                 3035 	push	bc
                           3036 ;	genCall
   0ACE CDr00s00           3037 	call	__divsint_rrx_s
   0AD1 44                 3038 	ld	b,h
   0AD2 4D                 3039 	ld	c,l
   0AD3 F1                 3040 	pop	af
   0AD4 F1                 3041 	pop	af
   0AD5 D1                 3042 	pop	de
                           3043 ;	genAssign
                           3044 ;	AOP_STK for _qsort_k_1_1
   0AD6 DD 71 FC           3045 	ld	-4(ix),c
   0AD9 DD 70 FD           3046 	ld	-3(ix),b
                           3047 ;main.c:409: while ( i < k && comp_name( i, k ) ) i++;
                           3048 ;	genAssign
                           3049 ;	AOP_STK for _qsort_sloc0_1_0
   0ADC DD 73 FA           3050 	ld	-6(ix),e
   0ADF DD 72 FB           3051 	ld	-5(ix),d
                           3052 ;	genLabel
   0AE2                    3053 00102$:
                           3054 ;	genCmpLt
                           3055 ;	AOP_STK for _qsort_sloc0_1_0
                           3056 ;	AOP_STK for _qsort_k_1_1
   0AE2 DD 7E FA           3057 	ld	a,-6(ix)
   0AE5 DD 96 FC           3058 	sub	a,-4(ix)
   0AE8 DD 7E FB           3059 	ld	a,-5(ix)
   0AEB DD 9E FD           3060 	sbc	a,-3(ix)
   0AEE F2r13s0B           3061 	jp	P,00130$
                           3062 ;	genIpush
                           3063 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3064 ;	AOP_STK for _qsort_k_1_1
   0AF1 DD 6E FC           3065 	ld	l,-4(ix)
   0AF4 DD 66 FD           3066 	ld	h,-3(ix)
   0AF7 E5                 3067 	push	hl
                           3068 ;	genIpush
                           3069 ;	AOP_STK for _qsort_sloc0_1_0
   0AF8 DD 6E FA           3070 	ld	l,-6(ix)
   0AFB DD 66 FB           3071 	ld	h,-5(ix)
   0AFE E5                 3072 	push	hl
                           3073 ;	genCall
   0AFF CDr58s09           3074 	call	_comp_name
   0B02 4D                 3075 	ld	c,l
   0B03 F1                 3076 	pop	af
   0B04 F1                 3077 	pop	af
                           3078 ;	genIfx
   0B05 AF                 3079 	xor	a,a
   0B06 B1                 3080 	or	a,c
   0B07 28 0A              3081 	jr	Z,00130$
                           3082 ;	genPlus
                           3083 ;	AOP_STK for _qsort_sloc0_1_0
                           3084 ;	genPlusIncr
   0B09 DD 34 FA           3085 	inc	-6(ix)
   0B0C 20 03              3086 	jr	NZ,00138$
   0B0E DD 34 FB           3087 	inc	-5(ix)
   0B11                    3088 00138$:
                           3089 ;	genGoto
   0B11 18 CF              3090 	jr	00102$
                           3091 ;main.c:410: while ( j > k && comp_name( k, j ) ) j--;
                           3092 ;	genLabel
   0B13                    3093 00130$:
                           3094 ;	genAssign
                           3095 ;	AOP_STK for _qsort_j_1_1
   0B13 DD 4E FE           3096 	ld	c,-2(ix)
   0B16 DD 46 FF           3097 	ld	b,-1(ix)
                           3098 ;	genLabel
   0B19                    3099 00106$:
                           3100 ;	genCmpGt
                           3101 ;	AOP_STK for _qsort_k_1_1
   0B19 DD 7E FC           3102 	ld	a,-4(ix)
   0B1C 91                 3103 	sub	a,c
   0B1D DD 7E FD           3104 	ld	a,-3(ix)
   0B20 98                 3105 	sbc	a,b
   0B21 F2r41s0B           3106 	jp	P,00136$
                           3107 ;	genIpush
                           3108 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B24 C5                 3109 	push	bc
   0B25 C5                 3110 	push	bc
                           3111 ;	genIpush
                           3112 ;	AOP_STK for _qsort_k_1_1
   0B26 DD 6E FC           3113 	ld	l,-4(ix)
   0B29 DD 66 FD           3114 	ld	h,-3(ix)
   0B2C E5                 3115 	push	hl
                           3116 ;	genCall
   0B2D CDr58s09           3117 	call	_comp_name
   0B30 5D                 3118 	ld	e,l
   0B31 F1                 3119 	pop	af
   0B32 F1                 3120 	pop	af
   0B33 C1                 3121 	pop	bc
                           3122 ;	genIfx
   0B34 AF                 3123 	xor	a,a
   0B35 B3                 3124 	or	a,e
   0B36 28 09              3125 	jr	Z,00136$
                           3126 ;	genMinus
   0B38 0B                 3127 	dec	bc
                           3128 ;	genAssign
                           3129 ;	AOP_STK for _qsort_j_1_1
   0B39 DD 71 FE           3130 	ld	-2(ix),c
   0B3C DD 70 FF           3131 	ld	-1(ix),b
                           3132 ;	genGoto
   0B3F 18 D8              3133 	jr	00106$
                           3134 ;	genLabel
   0B41                    3135 00136$:
                           3136 ;	genAssign
                           3137 ;	AOP_STK for _qsort_j_1_1
   0B41 DD 71 FE           3138 	ld	-2(ix),c
   0B44 DD 70 FF           3139 	ld	-1(ix),b
                           3140 ;main.c:412: if ( i == j ) break;
                           3141 ;	genCmpEq
                           3142 ;	AOP_STK for _qsort_sloc0_1_0
                           3143 ; genCmpEq: left 2, right 2, result 0
   0B47 DD 7E FA           3144 	ld	a,-6(ix)
   0B4A 91                 3145 	sub	c
   0B4B 20 06              3146 	jr	NZ,00139$
   0B4D DD 7E FB           3147 	ld	a,-5(ix)
   0B50 90                 3148 	sub	b
   0B51 28 48              3149 	jr	Z,00118$
   0B53                    3150 00139$:
                           3151 ;main.c:413: swap_name( i, j );
                           3152 ;	genIpush
                           3153 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0B53 C5                 3154 	push	bc
   0B54 C5                 3155 	push	bc
                           3156 ;	genIpush
                           3157 ;	AOP_STK for _qsort_sloc0_1_0
   0B55 DD 6E FA           3158 	ld	l,-6(ix)
   0B58 DD 66 FB           3159 	ld	h,-5(ix)
   0B5B E5                 3160 	push	hl
                           3161 ;	genCall
   0B5C CDr0Bs0A           3162 	call	_swap_name
   0B5F F1                 3163 	pop	af
   0B60 F1                 3164 	pop	af
   0B61 C1                 3165 	pop	bc
                           3166 ;main.c:415: if ( i == k ) k = j;
                           3167 ;	genCmpEq
                           3168 ;	AOP_STK for _qsort_sloc0_1_0
                           3169 ;	AOP_STK for _qsort_k_1_1
                           3170 ; genCmpEq: left 2, right 2, result 0
   0B62 DD 7E FA           3171 	ld	a,-6(ix)
   0B65 DD 96 FC           3172 	sub	-4(ix)
   0B68 20 08              3173 	jr	NZ,00140$
   0B6A DD 7E FB           3174 	ld	a,-5(ix)
   0B6D DD 96 FD           3175 	sub	-3(ix)
   0B70 28 02              3176 	jr	Z,00141$
   0B72                    3177 00140$:
   0B72 18 09              3178 	jr	00114$
   0B74                    3179 00141$:
                           3180 ;	genAssign
                           3181 ;	AOP_STK for _qsort_k_1_1
   0B74 DD 71 FC           3182 	ld	-4(ix),c
   0B77 DD 70 FD           3183 	ld	-3(ix),b
                           3184 ;	genGoto
   0B7A C3rE2s0A           3185 	jp	00102$
                           3186 ;	genLabel
   0B7D                    3187 00114$:
                           3188 ;main.c:416: else if ( j == k ) k = i;
                           3189 ;	genCmpEq
                           3190 ;	AOP_STK for _qsort_k_1_1
                           3191 ; genCmpEq: left 2, right 2, result 0
   0B7D 79                 3192 	ld	a,c
   0B7E DD 96 FC           3193 	sub	-4(ix)
   0B81 20 06              3194 	jr	NZ,00142$
   0B83 78                 3195 	ld	a,b
   0B84 DD 96 FD           3196 	sub	-3(ix)
   0B87 28 03              3197 	jr	Z,00143$
   0B89                    3198 00142$:
   0B89 C3rE2s0A           3199 	jp	00102$
   0B8C                    3200 00143$:
                           3201 ;	genAssign
                           3202 ;	AOP_STK for _qsort_sloc0_1_0
                           3203 ;	AOP_STK for _qsort_k_1_1
   0B8C DD 7E FA           3204 	ld	a,-6(ix)
   0B8F DD 77 FC           3205 	ld	-4(ix),a
   0B92 DD 7E FB           3206 	ld	a,-5(ix)
   0B95 DD 77 FD           3207 	ld	-3(ix),a
                           3208 ;	genGoto
   0B98 C3rE2s0A           3209 	jp	00102$
                           3210 ;	genLabel
   0B9B                    3211 00118$:
                           3212 ;main.c:419: if ( l < k - 1 ) qsort( l, k - 1 );
                           3213 ;	genMinus
                           3214 ;	AOP_STK for _qsort_k_1_1
   0B9B DD 4E FC           3215 	ld	c,-4(ix)
   0B9E DD 46 FD           3216 	ld	b,-3(ix)
   0BA1 0B                 3217 	dec	bc
                           3218 ;	genCmpLt
                           3219 ;	AOP_STK for 
   0BA2 DD 7E 04           3220 	ld	a,4(ix)
   0BA5 91                 3221 	sub	a,c
   0BA6 DD 7E 05           3222 	ld	a,5(ix)
   0BA9 98                 3223 	sbc	a,b
   0BAA F2rBAs0B           3224 	jp	P,00120$
                           3225 ;	genIpush
                           3226 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0BAD C5                 3227 	push	bc
                           3228 ;	genIpush
                           3229 ;	AOP_STK for 
   0BAE DD 6E 04           3230 	ld	l,4(ix)
   0BB1 DD 66 05           3231 	ld	h,5(ix)
   0BB4 E5                 3232 	push	hl
                           3233 ;	genCall
   0BB5 CDr9Fs0A           3234 	call	_qsort
   0BB8 F1                 3235 	pop	af
   0BB9 F1                 3236 	pop	af
                           3237 ;	genLabel
   0BBA                    3238 00120$:
                           3239 ;main.c:420: if ( k + 1 < h ) qsort( k + 1, h );
                           3240 ;	genPlus
                           3241 ;	AOP_STK for _qsort_k_1_1
                           3242 ;	genPlusIncr
   0BBA DD 4E FC           3243 	ld	c,-4(ix)
   0BBD DD 46 FD           3244 	ld	b,-3(ix)
   0BC0 03                 3245 	inc	bc
                           3246 ;	genCmpLt
                           3247 ;	AOP_STK for 
   0BC1 79                 3248 	ld	a,c
   0BC2 DD 96 06           3249 	sub	a,6(ix)
   0BC5 78                 3250 	ld	a,b
   0BC6 DD 9E 07           3251 	sbc	a,7(ix)
   0BC9 F2rD9s0B           3252 	jp	P,00123$
                           3253 ;	genIpush
                           3254 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3255 ;	AOP_STK for 
   0BCC DD 6E 06           3256 	ld	l,6(ix)
   0BCF DD 66 07           3257 	ld	h,7(ix)
   0BD2 E5                 3258 	push	hl
                           3259 ;	genIpush
   0BD3 C5                 3260 	push	bc
                           3261 ;	genCall
   0BD4 CDr9Fs0A           3262 	call	_qsort
   0BD7 F1                 3263 	pop	af
   0BD8 F1                 3264 	pop	af
                           3265 ;	genLabel
   0BD9                    3266 00123$:
                           3267 ;	genEndFunction
   0BD9 DD F9              3268 	ld	sp,ix
   0BDB DD E1              3269 	pop	ix
   0BDD C9                 3270 	ret
   0BDE                    3271 _qsort_end::
                           3272 ;main.c:423: void read_dir()
                           3273 ;	genLabel
                           3274 ;	genFunction
                           3275 ;	---------------------------------
                           3276 ; Function read_dir
                           3277 ; ---------------------------------
   0BDE                    3278 _read_dir_start::
   0BDE                    3279 _read_dir:
   0BDE DD E5              3280 	push	ix
   0BE0 DD 21 00 00        3281 	ld	ix,#0
   0BE4 DD 39              3282 	add	ix,sp
   0BE6 21 E9 FF           3283 	ld	hl,#-23
   0BE9 39                 3284 	add	hl,sp
   0BEA F9                 3285 	ld	sp,hl
                           3286 ;main.c:425: files_size = 0;
                           3287 ;	genAssign
   0BEB FD 21r00s38        3288 	ld	iy,#_files_size
   0BEF FD 36 00 00        3289 	ld	0(iy),#0x00
   0BF3 FD 36 01 00        3290 	ld	1(iy),#0x00
                           3291 ;main.c:426: files_table_start = 0;
                           3292 ;	genAssign
   0BF7 FD 21r02s38        3293 	ld	iy,#_files_table_start
   0BFB FD 36 00 00        3294 	ld	0(iy),#0x00
   0BFF FD 36 01 00        3295 	ld	1(iy),#0x00
                           3296 ;main.c:427: files_sel = 0;
                           3297 ;	genAssign
   0C03 FD 21r04s38        3298 	ld	iy,#_files_sel
   0C07 FD 36 00 00        3299 	ld	0(iy),#0x00
   0C0B FD 36 01 00        3300 	ld	1(iy),#0x00
                           3301 ;main.c:429: if ( pport_good )
                           3302 ;	genIfx
   0C0F AF                 3303 	xor	a,a
   0C10 FD 21r69s38        3304 	ld	iy,#_pport_good
   0C14 FD B6 00           3305 	or	a,0(iy)
   0C17 CAr92s0D           3306 	jp	Z,00119$
                           3307 ;main.c:431: if( strlen( path ) == 0 )
                           3308 ;	genIpush
                           3309 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C1A 21r22s38           3310 	ld	hl,#_path
   0C1D E5                 3311 	push	hl
                           3312 ;	genCall
   0C1E CDr00s00           3313 	call	_strlen
   0C21 44                 3314 	ld	b,h
   0C22 4D                 3315 	ld	c,l
   0C23 F1                 3316 	pop	af
                           3317 ;	genIfx
   0C24 79                 3318 	ld	a,c
   0C25 B0                 3319 	or	a,b
   0C26 20 29              3320 	jr	NZ,00102$
                           3321 ;main.c:433: pport_send( PP_CMD_FCTL( PP_FCTL_DIR ), strlen( path ), path );
                           3322 ;	genIpush
                           3323 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C28 21r22s38           3324 	ld	hl,#_path
   0C2B E5                 3325 	push	hl
                           3326 ;	genCall
   0C2C CDr00s00           3327 	call	_strlen
   0C2F 44                 3328 	ld	b,h
   0C30 4D                 3329 	ld	c,l
   0C31 F1                 3330 	pop	af
                           3331 ;	genIpush
                           3332 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C32 21r22s38           3333 	ld	hl,#_path
   0C35 E5                 3334 	push	hl
                           3335 ;	genIpush
   0C36 C5                 3336 	push	bc
                           3337 ;	genIpush
   0C37 21 00 78           3338 	ld	hl,#0x7800
   0C3A E5                 3339 	push	hl
                           3340 ;	genCall
   0C3B CDrB9s03           3341 	call	_pport_send
   0C3E F1                 3342 	pop	af
   0C3F F1                 3343 	pop	af
   0C40 F1                 3344 	pop	af
                           3345 ;main.c:434: pport_receive( 0, 0 );
                           3346 ;	genIpush
                           3347 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C41 21 00 00           3348 	ld	hl,#0x0000
   0C44 E5                 3349 	push	hl
                           3350 ;	genIpush
   0C45 21 00 00           3351 	ld	hl,#0x0000
   0C48 E5                 3352 	push	hl
                           3353 ;	genCall
   0C49 CDr4Fs04           3354 	call	_pport_receive
   0C4C F1                 3355 	pop	af
   0C4D F1                 3356 	pop	af
                           3357 ;	genGoto
   0C4E C3rABs0C           3358 	jp	00130$
                           3359 ;	genLabel
   0C51                    3360 00102$:
                           3361 ;main.c:438: pport_send( PP_CMD_FCTL( PP_FCTL_DIR ), strlen( path ) - 1, path );
                           3362 ;	genIpush
                           3363 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C51 21r22s38           3364 	ld	hl,#_path
   0C54 E5                 3365 	push	hl
                           3366 ;	genCall
   0C55 CDr00s00           3367 	call	_strlen
   0C58 44                 3368 	ld	b,h
   0C59 4D                 3369 	ld	c,l
   0C5A F1                 3370 	pop	af
                           3371 ;	genMinus
   0C5B 0B                 3372 	dec	bc
                           3373 ;	genIpush
                           3374 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C5C 21r22s38           3375 	ld	hl,#_path
   0C5F E5                 3376 	push	hl
                           3377 ;	genIpush
   0C60 C5                 3378 	push	bc
                           3379 ;	genIpush
   0C61 21 00 78           3380 	ld	hl,#0x7800
   0C64 E5                 3381 	push	hl
                           3382 ;	genCall
   0C65 CDrB9s03           3383 	call	_pport_send
   0C68 F1                 3384 	pop	af
   0C69 F1                 3385 	pop	af
   0C6A F1                 3386 	pop	af
                           3387 ;main.c:439: pport_receive( 0, 0 );
                           3388 ;	genIpush
                           3389 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C6B 21 00 00           3390 	ld	hl,#0x0000
   0C6E E5                 3391 	push	hl
                           3392 ;	genIpush
   0C6F 21 00 00           3393 	ld	hl,#0x0000
   0C72 E5                 3394 	push	hl
                           3395 ;	genCall
   0C73 CDr4Fs04           3396 	call	_pport_receive
   0C76 F1                 3397 	pop	af
   0C77 F1                 3398 	pop	af
                           3399 ;main.c:441: files[ files_size ].attr = AM_DIR;
                           3400 ;	genMult
   0C78 ED 5Br00s38        3401 	ld	de,(_files_size)
   0C7C 6B                 3402 	ld	l,e
   0C7D 62                 3403 	ld	h,d
   0C7E 29                 3404 	add	hl,hl
   0C7F 19                 3405 	add	hl,de
   0C80 29                 3406 	add	hl,hl
   0C81 19                 3407 	add	hl,de
   0C82 29                 3408 	add	hl,hl
   0C83 4D                 3409 	ld	c,l
   0C84 44                 3410 	ld	b,h
                           3411 ;	genPlus
   0C85 21r00s00           3412 	ld	hl,#_files
   0C88 09                 3413 	add	hl,bc
   0C89 5D                 3414 	ld	e,l
   0C8A 54                 3415 	ld	d,h
                           3416 ;	genAssign (pointer)
                           3417 ;	isBitvar = 0
   0C8B 3E 10              3418 	ld	a,#0x10
   0C8D 12                 3419 	ld	(de),a
                           3420 ;main.c:442: strcpy( files[ files_size ].name, ".." );
                           3421 ;	genPlus
   0C8E 21r00s00           3422 	ld	hl,#_files
   0C91 09                 3423 	add	hl,bc
   0C92 4D                 3424 	ld	c,l
   0C93 44                 3425 	ld	b,h
                           3426 ;	genPlus
                           3427 ;	genPlusIncr
   0C94 03                 3428 	inc	bc
                           3429 ;	genIpush
                           3430 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C95 21rC0s0D           3431 	ld	hl,#__str_9
   0C98 E5                 3432 	push	hl
                           3433 ;	genIpush
   0C99 C5                 3434 	push	bc
                           3435 ;	genCall
   0C9A CDr00s00           3436 	call	_strcpy
   0C9D F1                 3437 	pop	af
   0C9E F1                 3438 	pop	af
                           3439 ;main.c:443: files_size++;
                           3440 ;	genPlus
                           3441 ;	genPlusIncr
   0C9F FD 21r00s38        3442 	ld	iy,#_files_size
   0CA3 FD 34 00           3443 	inc	0(iy)
   0CA6 20 03              3444 	jr	NZ,00134$
   0CA8 FD 34 01           3445 	inc	1(iy)
   0CAB                    3446 00134$:
                           3447 ;main.c:446: while ( true )
                           3448 ;	genLabel
   0CAB                    3449 00130$:
                           3450 ;	genLabel
   0CAB                    3451 00116$:
                           3452 ;main.c:450: pport_send( PP_CMD_FCTL( PP_FCTL_RDIR ), 0, 0 );
                           3453 ;	genIpush
                           3454 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CAB 21 00 00           3455 	ld	hl,#0x0000
   0CAE E5                 3456 	push	hl
                           3457 ;	genIpush
   0CAF 21 00 00           3458 	ld	hl,#0x0000
   0CB2 E5                 3459 	push	hl
                           3460 ;	genIpush
   0CB3 21 01 78           3461 	ld	hl,#0x7801
   0CB6 E5                 3462 	push	hl
                           3463 ;	genCall
   0CB7 CDrB9s03           3464 	call	_pport_send
   0CBA F1                 3465 	pop	af
   0CBB F1                 3466 	pop	af
   0CBC F1                 3467 	pop	af
                           3468 ;main.c:451: pport_receive( &fi, sizeof( fi ) );
                           3469 ;	genAddrOf
   0CBD 21 01 00           3470 	ld	hl,#0x0001
   0CC0 39                 3471 	add	hl,sp
   0CC1 4D                 3472 	ld	c,l
   0CC2 44                 3473 	ld	b,h
                           3474 ;	genIpush
                           3475 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CC3 21 16 00           3476 	ld	hl,#0x0016
   0CC6 E5                 3477 	push	hl
                           3478 ;	genIpush
   0CC7 C5                 3479 	push	bc
                           3480 ;	genCall
   0CC8 CDr4Fs04           3481 	call	_pport_receive
   0CCB F1                 3482 	pop	af
   0CCC F1                 3483 	pop	af
                           3484 ;main.c:453: if ( files_size == FILES_SIZE ) break;
                           3485 ;	genCmpEq
                           3486 ; genCmpEq: left 2, right 2, result 0
   0CCD FD 21r00s38        3487 	ld	iy,#_files_size
   0CD1 FD 7E 00           3488 	ld	a,0(iy)
   0CD4 B7                 3489 	or	a,a
   0CD5 20 08              3490 	jr	NZ,00135$
   0CD7 FD 7E 01           3491 	ld	a,1(iy)
   0CDA D6 04              3492 	sub	a,#0x04
   0CDC CAr9Es0D           3493 	jp	Z,00120$
   0CDF                    3494 00135$:
                           3495 ;main.c:454: if ( pport_result != PP_W_ACK ) break;
                           3496 ;	genCmpEq
                           3497 ; genCmpEq: left 2, right 2, result 0
   0CDF FD 21r63s38        3498 	ld	iy,#_pport_result
   0CE3 FD 7E 00           3499 	ld	a,0(iy)
   0CE6 B7                 3500 	or	a,a
   0CE7 20 07              3501 	jr	NZ,00136$
   0CE9 FD 7E 01           3502 	ld	a,1(iy)
   0CEC D6 73              3503 	sub	a,#0x73
   0CEE 28 03              3504 	jr	Z,00137$
   0CF0                    3505 00136$:
   0CF0 C3r9Es0D           3506 	jp	00120$
   0CF3                    3507 00137$:
                           3508 ;main.c:455: if ( fi.fname[0] == 0 ) break;
                           3509 ;	genAddrOf
   0CF3 21 01 00           3510 	ld	hl,#0x0001
   0CF6 39                 3511 	add	hl,sp
   0CF7 4D                 3512 	ld	c,l
   0CF8 44                 3513 	ld	b,h
                           3514 ;	genPlus
                           3515 ;	genPlusIncr
   0CF9 79                 3516 	ld	a,c
   0CFA C6 09              3517 	add	a,#0x09
   0CFC 5F                 3518 	ld	e,a
   0CFD 78                 3519 	ld	a,b
   0CFE CE 00              3520 	adc	a,#0x00
   0D00 57                 3521 	ld	d,a
                           3522 ;	genPointerGet
   0D01 1A                 3523 	ld	a,(de)
                           3524 ;	genIfx
   0D02 B7                 3525 	or	a,a
   0D03 CAr9Es0D           3526 	jp	Z,00120$
                           3527 ;main.c:456: if ( fi.fattrib & ( AM_HID | AM_SYS ) ) continue;
                           3528 ;	genPlus
                           3529 ;	genPlusIncr
   0D06 79                 3530 	ld	a,c
   0D07 C6 08              3531 	add	a,#0x08
   0D09 5F                 3532 	ld	e,a
   0D0A 78                 3533 	ld	a,b
   0D0B CE 00              3534 	adc	a,#0x00
   0D0D 57                 3535 	ld	d,a
                           3536 ;	genPointerGet
                           3537 ;	AOP_STK for _read_dir_sloc0_1_0
   0D0E 1A                 3538 	ld	a,(de)
   0D0F DD 77 E9           3539 	ld	-23(ix),a
                           3540 ;	genAnd
                           3541 ;	AOP_STK for _read_dir_sloc0_1_0
   0D12 DD 7E E9           3542 	ld	a,-23(ix)
   0D15 E6 06              3543 	and	a,#0x06
   0D17 28 03              3544 	jr	Z,00139$
   0D19 C3rABs0C           3545 	jp	00116$
   0D1C                    3546 00139$:
                           3547 ;main.c:458: files[ files_size ].attr = fi.fattrib;
                           3548 ;	genMult
   0D1C ED 5Br00s38        3549 	ld	de,(_files_size)
   0D20 6B                 3550 	ld	l,e
   0D21 62                 3551 	ld	h,d
   0D22 29                 3552 	add	hl,hl
   0D23 19                 3553 	add	hl,de
   0D24 29                 3554 	add	hl,hl
   0D25 19                 3555 	add	hl,de
   0D26 29                 3556 	add	hl,hl
   0D27 55                 3557 	ld	d,l
   0D28 5C                 3558 	ld	e,h
                           3559 ;	genPlus
   0D29 3Er00              3560 	ld	a,#<_files
   0D2B 82                 3561 	add	a,d
   0D2C 57                 3562 	ld	d,a
   0D2D 3Es00              3563 	ld	a,#>_files
   0D2F 8B                 3564 	adc	a,e
   0D30 5F                 3565 	ld	e,a
                           3566 ;	genAssign (pointer)
                           3567 ;	AOP_STK for _read_dir_sloc0_1_0
                           3568 ;	isBitvar = 0
   0D31 6A                 3569 	ld	l,d
   0D32 63                 3570 	ld	h,e
   0D33 DD 7E E9           3571 	ld	a,-23(ix)
   0D36 77                 3572 	ld	(hl),a
                           3573 ;main.c:459: if ( fi.fattrib & ( AM_DIR ) ) strupr( fi.fname );
                           3574 ;	genAnd
                           3575 ;	AOP_STK for _read_dir_sloc0_1_0
   0D37 DD 7E E9           3576 	ld	a,-23(ix)
   0D3A E6 10              3577 	and	a,#0x10
   0D3C 28 0F              3578 	jr	Z,00113$
                           3579 ;	genPlus
                           3580 ;	genPlusIncr
   0D3E 79                 3581 	ld	a,c
   0D3F C6 09              3582 	add	a,#0x09
   0D41 5F                 3583 	ld	e,a
   0D42 78                 3584 	ld	a,b
   0D43 CE 00              3585 	adc	a,#0x00
   0D45 57                 3586 	ld	d,a
                           3587 ;	genIpush
                           3588 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D46 D5                 3589 	push	de
                           3590 ;	genCall
   0D47 CDr92s03           3591 	call	_strupr
   0D4A F1                 3592 	pop	af
                           3593 ;	genGoto
   0D4B 18 0D              3594 	jr	00114$
                           3595 ;	genLabel
   0D4D                    3596 00113$:
                           3597 ;main.c:460: else strlwr( fi.fname );
                           3598 ;	genPlus
                           3599 ;	genPlusIncr
   0D4D 79                 3600 	ld	a,c
   0D4E C6 09              3601 	add	a,#0x09
   0D50 4F                 3602 	ld	c,a
   0D51 78                 3603 	ld	a,b
   0D52 CE 00              3604 	adc	a,#0x00
   0D54 47                 3605 	ld	b,a
                           3606 ;	genIpush
                           3607 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D55 C5                 3608 	push	bc
                           3609 ;	genCall
   0D56 CDr6Bs03           3610 	call	_strlwr
   0D59 F1                 3611 	pop	af
                           3612 ;	genLabel
   0D5A                    3613 00114$:
                           3614 ;main.c:461: strcpy( files[ files_size ].name, fi.fname );
                           3615 ;	genAddrOf
   0D5A 21 01 00           3616 	ld	hl,#0x0001
   0D5D 39                 3617 	add	hl,sp
   0D5E 4D                 3618 	ld	c,l
   0D5F 44                 3619 	ld	b,h
                           3620 ;	genPlus
                           3621 ;	genPlusIncr
   0D60 79                 3622 	ld	a,c
   0D61 C6 09              3623 	add	a,#0x09
   0D63 4F                 3624 	ld	c,a
   0D64 78                 3625 	ld	a,b
   0D65 CE 00              3626 	adc	a,#0x00
   0D67 47                 3627 	ld	b,a
                           3628 ;	genMult
   0D68 ED 5Br00s38        3629 	ld	de,(_files_size)
   0D6C 6B                 3630 	ld	l,e
   0D6D 62                 3631 	ld	h,d
   0D6E 29                 3632 	add	hl,hl
   0D6F 19                 3633 	add	hl,de
   0D70 29                 3634 	add	hl,hl
   0D71 19                 3635 	add	hl,de
   0D72 29                 3636 	add	hl,hl
   0D73 5D                 3637 	ld	e,l
   0D74 54                 3638 	ld	d,h
                           3639 ;	genPlus
   0D75 21r00s00           3640 	ld	hl,#_files
   0D78 19                 3641 	add	hl,de
   0D79 5D                 3642 	ld	e,l
   0D7A 54                 3643 	ld	d,h
                           3644 ;	genPlus
                           3645 ;	genPlusIncr
   0D7B 13                 3646 	inc	de
                           3647 ;	genIpush
                           3648 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0D7C C5                 3649 	push	bc
                           3650 ;	genIpush
   0D7D D5                 3651 	push	de
                           3652 ;	genCall
   0D7E CDr00s00           3653 	call	_strcpy
   0D81 F1                 3654 	pop	af
   0D82 F1                 3655 	pop	af
                           3656 ;main.c:463: files_size++;
                           3657 ;	genPlus
                           3658 ;	genPlusIncr
   0D83 FD 21r00s38        3659 	ld	iy,#_files_size
   0D87 FD 34 00           3660 	inc	0(iy)
   0D8A 20 03              3661 	jr	NZ,00141$
   0D8C FD 34 01           3662 	inc	1(iy)
   0D8F                    3663 00141$:
                           3664 ;	genGoto
   0D8F C3rABs0C           3665 	jp	00116$
                           3666 ;	genLabel
   0D92                    3667 00119$:
                           3668 ;main.c:468: files_size = 0;
                           3669 ;	genAssign
   0D92 FD 21r00s38        3670 	ld	iy,#_files_size
   0D96 FD 36 00 00        3671 	ld	0(iy),#0x00
   0D9A FD 36 01 00        3672 	ld	1(iy),#0x00
                           3673 ;	genLabel
   0D9E                    3674 00120$:
                           3675 ;main.c:471: if ( files_size )
                           3676 ;	genIfx
   0D9E FD 21r00s38        3677 	ld	iy,#_files_size
   0DA2 FD 7E 00           3678 	ld	a,0(iy)
   0DA5 FD B6 01           3679 	or	a,1(iy)
   0DA8 28 11              3680 	jr	Z,00123$
                           3681 ;main.c:473: qsort( 0, files_size - 1 );
                           3682 ;	genMinus
   0DAA FD 4E 00           3683 	ld	c,0(iy)
   0DAD FD 46 01           3684 	ld	b,1(iy)
   0DB0 0B                 3685 	dec	bc
                           3686 ;	genIpush
                           3687 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0DB1 C5                 3688 	push	bc
                           3689 ;	genIpush
   0DB2 21 00 00           3690 	ld	hl,#0x0000
   0DB5 E5                 3691 	push	hl
                           3692 ;	genCall
   0DB6 CDr9Fs0A           3693 	call	_qsort
   0DB9 F1                 3694 	pop	af
   0DBA F1                 3695 	pop	af
                           3696 ;	genLabel
   0DBB                    3697 00123$:
                           3698 ;	genEndFunction
   0DBB DD F9              3699 	ld	sp,ix
   0DBD DD E1              3700 	pop	ix
   0DBF C9                 3701 	ret
   0DC0                    3702 _read_dir_end::
   0DC0                    3703 __str_9:
   0DC0 2E 2E              3704 	.ascii ".."
   0DC2 00                 3705 	.db 0x00
                           3706 ;main.c:479: void clrscr()
                           3707 ;	genLabel
                           3708 ;	genFunction
                           3709 ;	---------------------------------
                           3710 ; Function clrscr
                           3711 ; ---------------------------------
   0DC3                    3712 _clrscr_start::
   0DC3                    3713 _clrscr:
                           3714 ;main.c:499: __endasm;
                           3715 ;	genInline
                           3716 	
   0DC3 F3                 3717 		di
   0DC4 21 00 40           3718 		ld hl, #0x4000
   0DC7 E5                 3719 		push hl
   0DC8 D1                 3720 		pop de
   0DC9 13                 3721 		inc de
   0DCA AF                 3722 		xor a
   0DCB 77                 3723 		ld( hl ), a
   0DCC 01 00 18           3724 		ld bc, #0x1800
   0DCF ED B0              3725 		ldir
   0DD1 23                 3726 		inc hl
   0DD2 13                 3727 		inc de
   0DD3 3E 07              3728 		ld a, #7
   0DD5 77                 3729 		ld( hl ), a
   0DD6 01 00 03           3730 		ld bc, #0x300
   0DD9 ED B0              3731 		ldir
   0DDB AF                 3732 		xor a
   0DDC D3 FE              3733 		out( 0xfe ), a
                           3734 		
                           3735 ;	genLabel
                           3736 ;	genEndFunction
   0DDE C9                 3737 	ret
   0DDF                    3738 _clrscr_end::
                           3739 ;main.c:507: int yes_or_no( char *prompt )
                           3740 ;	genLabel
                           3741 ;	genFunction
                           3742 ;	---------------------------------
                           3743 ; Function yes_or_no
                           3744 ; ---------------------------------
   0DDF                    3745 _yes_or_no_start::
   0DDF                    3746 _yes_or_no:
   0DDF DD E5              3747 	push	ix
   0DE1 DD 21 00 00        3748 	ld	ix,#0
   0DE5 DD 39              3749 	add	ix,sp
   0DE7 21 FB FF           3750 	ld	hl,#-5
   0DEA 39                 3751 	add	hl,sp
   0DEB F9                 3752 	ld	sp,hl
                           3753 ;main.c:512: byte sz = strlen( prompt );
                           3754 ;	genIpush
                           3755 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3756 ;	AOP_STK for 
   0DEC DD 6E 04           3757 	ld	l,4(ix)
   0DEF DD 66 05           3758 	ld	h,5(ix)
   0DF2 E5                 3759 	push	hl
                           3760 ;	genCall
   0DF3 CDr00s00           3761 	call	_strlen
   0DF6 44                 3762 	ld	b,h
   0DF7 4D                 3763 	ld	c,l
   0DF8 F1                 3764 	pop	af
                           3765 ;	genCast
                           3766 ;main.c:513: if ( sz & 1 ) sz += 1;
                           3767 ;	genAnd
   0DF9 79                 3768 	ld	a,c
   0DFA E6 01              3769 	and	a,#0x01
   0DFC 28 01              3770 	jr	Z,00102$
                           3771 ;	genPlus
                           3772 ;	genPlusIncr
   0DFE 0C                 3773 	inc	c
                           3774 ;	genLabel
   0DFF                    3775 00102$:
                           3776 ;main.c:514: if ( sz < 18 ) sz = 18;
                           3777 ;	genCmpLt
   0DFF 79                 3778 	ld	a,c
   0E00 D6 12              3779 	sub	a,#0x12
   0E02 30 02              3780 	jr	NC,00104$
                           3781 ;	genAssign
   0E04 0E 12              3782 	ld	c,#0x12
                           3783 ;	genLabel
   0E06                    3784 00104$:
                           3785 ;main.c:515: sz += 4;
                           3786 ;	genPlus
                           3787 ;	genPlusIncr
   0E06 0C                 3788 	inc	c
   0E07 0C                 3789 	inc	c
   0E08 0C                 3790 	inc	c
   0E09 0C                 3791 	inc	c
                           3792 ;main.c:517: for ( i = 0; i < 6; i++ )
                           3793 ;	genAssign
                           3794 ;	AOP_STK for _yes_or_no_i_1_1
   0E0A DD 36 FF 00        3795 	ld	-1(ix),#0x00
                           3796 ;	genLabel
   0E0E                    3797 00125$:
                           3798 ;	genCmpLt
                           3799 ;	AOP_STK for _yes_or_no_i_1_1
   0E0E DD 7E FF           3800 	ld	a,-1(ix)
   0E11 D6 06              3801 	sub	a,#0x06
   0E13 D2r6Cs0E           3802 	jp	NC,00128$
                           3803 ;main.c:519: set_attr( 050, ( 32 - sz ) / 2, top + i, sz );
                           3804 ;	genPlus
                           3805 ;	AOP_STK for _yes_or_no_i_1_1
                           3806 ;	genPlusIncr
   0E16 DD 7E FF           3807 	ld	a,-1(ix)
   0E19 C6 07              3808 	add	a,#0x07
   0E1B 5F                 3809 	ld	e,a
                           3810 ;	genCast
   0E1C 51                 3811 	ld	d,c
   0E1D 06 00              3812 	ld	b,#0x00
                           3813 ;	genMinus
   0E1F 3E 20              3814 	ld	a,#0x20
   0E21 92                 3815 	sub	a,d
   0E22 57                 3816 	ld	d,a
   0E23 3E 00              3817 	ld	a,#0x00
   0E25 98                 3818 	sbc	a,b
   0E26 47                 3819 	ld	b,a
                           3820 ;	genIpush
                           3821 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0E27 C5                 3822 	push	bc
   0E28 D5                 3823 	push	de
   0E29 21 02 00           3824 	ld	hl,#0x0002
   0E2C E5                 3825 	push	hl
                           3826 ;	genIpush
   0E2D 6A                 3827 	ld	l,d
   0E2E 60                 3828 	ld	h,b
   0E2F E5                 3829 	push	hl
                           3830 ;	genCall
   0E30 CDr00s00           3831 	call	__divsint_rrx_s
   0E33 54                 3832 	ld	d,h
   0E34 45                 3833 	ld	b,l
   0E35 F1                 3834 	pop	af
   0E36 F1                 3835 	pop	af
   0E37 7A                 3836 	ld	a,d
   0E38 D1                 3837 	pop	de
   0E39 57                 3838 	ld	d,a
   0E3A 78                 3839 	ld	a,b
   0E3B C1                 3840 	pop	bc
   0E3C 47                 3841 	ld	b,a
                           3842 ;	genCast
                           3843 ;	genIpush
                           3844 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   0E3D C5                 3845 	push	bc
   0E3E D5                 3846 	push	de
   0E3F 79                 3847 	ld	a,c
   0E40 F5                 3848 	push	af
   0E41 33                 3849 	inc	sp
                           3850 ;	genIpush
   0E42 7B                 3851 	ld	a,e
   0E43 F5                 3852 	push	af
   0E44 33                 3853 	inc	sp
                           3854 ;	genIpush
   0E45 C5                 3855 	push	bc
   0E46 33                 3856 	inc	sp
                           3857 ;	genIpush
   0E47 3E 28              3858 	ld	a,#0x28
   0E49 F5                 3859 	push	af
   0E4A 33                 3860 	inc	sp
                           3861 ;	genCall
   0E4B CDr00s00           3862 	call	_set_attr
   0E4E F1                 3863 	pop	af
   0E4F F1                 3864 	pop	af
   0E50 D1                 3865 	pop	de
   0E51 C1                 3866 	pop	bc
                           3867 ;main.c:520: print_pad_8( "", ( 32 - sz ) / 2, top + i, sz );
                           3868 ;	genIpush
                           3869 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E52 C5                 3870 	push	bc
   0E53 79                 3871 	ld	a,c
   0E54 F5                 3872 	push	af
   0E55 33                 3873 	inc	sp
                           3874 ;	genIpush
   0E56 7B                 3875 	ld	a,e
   0E57 F5                 3876 	push	af
   0E58 33                 3877 	inc	sp
                           3878 ;	genIpush
   0E59 C5                 3879 	push	bc
   0E5A 33                 3880 	inc	sp
                           3881 ;	genIpush
   0E5B 21r69s10           3882 	ld	hl,#__str_10
   0E5E E5                 3883 	push	hl
                           3884 ;	genCall
   0E5F CDr64s05           3885 	call	_print_pad_8
   0E62 F1                 3886 	pop	af
   0E63 F1                 3887 	pop	af
   0E64 33                 3888 	inc	sp
   0E65 C1                 3889 	pop	bc
                           3890 ;main.c:517: for ( i = 0; i < 6; i++ )
                           3891 ;	genPlus
                           3892 ;	AOP_STK for _yes_or_no_i_1_1
                           3893 ;	genPlusIncr
   0E66 DD 34 FF           3894 	inc	-1(ix)
                           3895 ;	genGoto
   0E69 C3r0Es0E           3896 	jp	00125$
                           3897 ;	genLabel
   0E6C                    3898 00128$:
                           3899 ;main.c:523: text_out_pos_8( "-= Confirmation =-", 7, top, 0, 0xff );
                           3900 ;	genIpush
                           3901 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E6C C5                 3902 	push	bc
   0E6D 21 00 FF           3903 	ld	hl,#0xFF00
   0E70 E5                 3904 	push	hl
                           3905 ;	genIpush
   0E71 21 07 07           3906 	ld	hl,#0x0707
   0E74 E5                 3907 	push	hl
                           3908 ;	genIpush
   0E75 21r6As10           3909 	ld	hl,#__str_11
   0E78 E5                 3910 	push	hl
                           3911 ;	genCall
   0E79 CDr00s00           3912 	call	_text_out_pos_8
   0E7C F1                 3913 	pop	af
   0E7D F1                 3914 	pop	af
   0E7E F1                 3915 	pop	af
   0E7F C1                 3916 	pop	bc
                           3917 ;main.c:524: text_out_pos_8( prompt, ( 32 - strlen( prompt ) ) / 2, top + 2, 0, 0xff );
                           3918 ;	genIpush
                           3919 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E80 C5                 3920 	push	bc
                           3921 ;	AOP_STK for 
   0E81 DD 6E 04           3922 	ld	l,4(ix)
   0E84 DD 66 05           3923 	ld	h,5(ix)
   0E87 E5                 3924 	push	hl
                           3925 ;	genCall
   0E88 CDr00s00           3926 	call	_strlen
   0E8B 54                 3927 	ld	d,h
   0E8C 5D                 3928 	ld	e,l
   0E8D F1                 3929 	pop	af
   0E8E C1                 3930 	pop	bc
                           3931 ;	genMinus
   0E8F 3E 20              3932 	ld	a,#0x20
   0E91 93                 3933 	sub	a,e
   0E92 5F                 3934 	ld	e,a
   0E93 3E 00              3935 	ld	a,#0x00
   0E95 9A                 3936 	sbc	a,d
   0E96 57                 3937 	ld	d,a
                           3938 ;	genIpush
                           3939 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E97 C5                 3940 	push	bc
   0E98 21 02 00           3941 	ld	hl,#0x0002
   0E9B E5                 3942 	push	hl
                           3943 ;	genIpush
   0E9C D5                 3944 	push	de
                           3945 ;	genCall
   0E9D CDr00s00           3946 	call	__divsint_rrx_s
   0EA0 54                 3947 	ld	d,h
   0EA1 5D                 3948 	ld	e,l
   0EA2 F1                 3949 	pop	af
   0EA3 F1                 3950 	pop	af
   0EA4 C1                 3951 	pop	bc
                           3952 ;	genCast
   0EA5 43                 3953 	ld	b,e
                           3954 ;	genIpush
                           3955 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0EA6 C5                 3956 	push	bc
   0EA7 21 00 FF           3957 	ld	hl,#0xFF00
   0EAA E5                 3958 	push	hl
                           3959 ;	genIpush
   0EAB 3E 09              3960 	ld	a,#0x09
   0EAD F5                 3961 	push	af
   0EAE 33                 3962 	inc	sp
                           3963 ;	genIpush
   0EAF C5                 3964 	push	bc
   0EB0 33                 3965 	inc	sp
                           3966 ;	genIpush
                           3967 ;	AOP_STK for 
   0EB1 DD 6E 04           3968 	ld	l,4(ix)
   0EB4 DD 66 05           3969 	ld	h,5(ix)
   0EB7 E5                 3970 	push	hl
                           3971 ;	genCall
   0EB8 CDr00s00           3972 	call	_text_out_pos_8
   0EBB F1                 3973 	pop	af
   0EBC F1                 3974 	pop	af
   0EBD F1                 3975 	pop	af
   0EBE C1                 3976 	pop	bc
                           3977 ;main.c:525: set_attr( 052, ( 32 - strlen( prompt ) ) / 2, top + 2, strlen( prompt ) );
                           3978 ;	genIpush
                           3979 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0EBF C5                 3980 	push	bc
                           3981 ;	AOP_STK for 
   0EC0 DD 6E 04           3982 	ld	l,4(ix)
   0EC3 DD 66 05           3983 	ld	h,5(ix)
   0EC6 E5                 3984 	push	hl
                           3985 ;	genCall
   0EC7 CDr00s00           3986 	call	_strlen
   0ECA 54                 3987 	ld	d,h
   0ECB 5D                 3988 	ld	e,l
   0ECC F1                 3989 	pop	af
   0ECD C1                 3990 	pop	bc
                           3991 ;	genCast
   0ECE 43                 3992 	ld	b,e
                           3993 ;	genIpush
                           3994 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0ECF C5                 3995 	push	bc
                           3996 ;	AOP_STK for 
   0ED0 DD 6E 04           3997 	ld	l,4(ix)
   0ED3 DD 66 05           3998 	ld	h,5(ix)
   0ED6 E5                 3999 	push	hl
                           4000 ;	genCall
   0ED7 CDr00s00           4001 	call	_strlen
   0EDA 54                 4002 	ld	d,h
   0EDB 5D                 4003 	ld	e,l
   0EDC F1                 4004 	pop	af
   0EDD C1                 4005 	pop	bc
                           4006 ;	genMinus
   0EDE 3E 20              4007 	ld	a,#0x20
   0EE0 93                 4008 	sub	a,e
   0EE1 5F                 4009 	ld	e,a
   0EE2 3E 00              4010 	ld	a,#0x00
   0EE4 9A                 4011 	sbc	a,d
   0EE5 57                 4012 	ld	d,a
                           4013 ;	genIpush
                           4014 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0EE6 C5                 4015 	push	bc
   0EE7 21 02 00           4016 	ld	hl,#0x0002
   0EEA E5                 4017 	push	hl
                           4018 ;	genIpush
   0EEB D5                 4019 	push	de
                           4020 ;	genCall
   0EEC CDr00s00           4021 	call	__divsint_rrx_s
   0EEF 54                 4022 	ld	d,h
   0EF0 5D                 4023 	ld	e,l
   0EF1 F1                 4024 	pop	af
   0EF2 F1                 4025 	pop	af
   0EF3 C1                 4026 	pop	bc
                           4027 ;	genCast
                           4028 ;	genIpush
                           4029 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0EF4 C5                 4030 	push	bc
   0EF5 C5                 4031 	push	bc
   0EF6 33                 4032 	inc	sp
                           4033 ;	genIpush
   0EF7 3E 09              4034 	ld	a,#0x09
   0EF9 F5                 4035 	push	af
   0EFA 33                 4036 	inc	sp
                           4037 ;	genIpush
                           4038 ;	genIpush
                           4039 ;	genCall
   0EFB 53                 4040 	ld	d,e
   0EFC 1E 2A              4041 	ld	e,#0x2A
   0EFE D5                 4042 	push	de
   0EFF CDr00s00           4043 	call	_set_attr
   0F02 F1                 4044 	pop	af
   0F03 F1                 4045 	pop	af
   0F04 C1                 4046 	pop	bc
                           4047 ;main.c:527: text_out_pos_8( "Yes", 10, top + 4, 0, 0xff );
                           4048 ;	genIpush
                           4049 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0F05 C5                 4050 	push	bc
   0F06 21 00 FF           4051 	ld	hl,#0xFF00
   0F09 E5                 4052 	push	hl
                           4053 ;	genIpush
   0F0A 21 0A 0B           4054 	ld	hl,#0x0B0A
   0F0D E5                 4055 	push	hl
                           4056 ;	genIpush
   0F0E 21r7Ds10           4057 	ld	hl,#__str_12
   0F11 E5                 4058 	push	hl
                           4059 ;	genCall
   0F12 CDr00s00           4060 	call	_text_out_pos_8
   0F15 F1                 4061 	pop	af
   0F16 F1                 4062 	pop	af
   0F17 F1                 4063 	pop	af
   0F18 C1                 4064 	pop	bc
                           4065 ;main.c:528: set_attr( 017, 9, top + 4, 5 );
                           4066 ;	genIpush
                           4067 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0F19 C5                 4068 	push	bc
   0F1A 21 0B 05           4069 	ld	hl,#0x050B
   0F1D E5                 4070 	push	hl
                           4071 ;	genIpush
   0F1E 21 0F 09           4072 	ld	hl,#0x090F
   0F21 E5                 4073 	push	hl
                           4074 ;	genCall
   0F22 CDr00s00           4075 	call	_set_attr
   0F25 F1                 4076 	pop	af
   0F26 F1                 4077 	pop	af
   0F27 C1                 4078 	pop	bc
                           4079 ;main.c:529: text_out_pos_8( "No", 20, top + 4, 0, 0xff );
                           4080 ;	genIpush
                           4081 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0F28 C5                 4082 	push	bc
   0F29 21 00 FF           4083 	ld	hl,#0xFF00
   0F2C E5                 4084 	push	hl
                           4085 ;	genIpush
   0F2D 21 14 0B           4086 	ld	hl,#0x0B14
   0F30 E5                 4087 	push	hl
                           4088 ;	genIpush
   0F31 21r81s10           4089 	ld	hl,#__str_13
   0F34 E5                 4090 	push	hl
                           4091 ;	genCall
   0F35 CDr00s00           4092 	call	_text_out_pos_8
   0F38 F1                 4093 	pop	af
   0F39 F1                 4094 	pop	af
   0F3A F1                 4095 	pop	af
   0F3B C1                 4096 	pop	bc
                           4097 ;main.c:531: res = 1;
                           4098 ;	genAssign
                           4099 ;	AOP_STK for _yes_or_no_res_1_1
   0F3C DD 36 FD 01        4100 	ld	-3(ix),#0x01
   0F40 DD 36 FE 00        4101 	ld	-2(ix),#0x00
                           4102 ;main.c:533: while ( 1 )
                           4103 ;	genLabel
   0F44                    4104 00123$:
                           4105 ;main.c:535: int new_res = res;
                           4106 ;	genAssign
                           4107 ;	AOP_STK for _yes_or_no_res_1_1
                           4108 ;	AOP_STK for _yes_or_no_new_res_2_3
   0F44 DD 7E FD           4109 	ld	a,-3(ix)
   0F47 DD 77 FB           4110 	ld	-5(ix),a
   0F4A DD 7E FE           4111 	ld	a,-2(ix)
   0F4D DD 77 FC           4112 	ld	-4(ix),a
                           4113 ;main.c:536: byte key = getkey();
                           4114 ;	genCall
                           4115 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0F50 C5                 4116 	push	bc
   0F51 CDrF2s01           4117 	call	_getkey
   0F54 7D                 4118 	ld	a,l
   0F55 C1                 4119 	pop	bc
                           4120 ;	genAssign
                           4121 ;	(registers are the same)
                           4122 ;main.c:537: if ( key == 9 || key == 8 )
                           4123 ;	genCmpEq
                           4124 ; genCmpEq: left 1, right 1, result 0
   0F56 47                 4125 	ld	b,a
   0F57 D6 09              4126 	sub	a,#0x09
   0F59 28 07              4127 	jr	Z,00113$
                           4128 ;	genCmpEq
                           4129 ; genCmpEq: left 1, right 1, result 0
   0F5B 78                 4130 	ld	a,b
   0F5C D6 08              4131 	sub	a,#0x08
   0F5E 28 02              4132 	jr	Z,00152$
   0F60 18 15              4133 	jr	00114$
   0F62                    4134 00152$:
                           4135 ;	genLabel
   0F62                    4136 00113$:
                           4137 ;main.c:539: res = !res;
                           4138 ;	genNot
                           4139 ;	AOP_STK for _yes_or_no_res_1_1
   0F62 DD 7E FD           4140 	ld	a,-3(ix)
   0F65 DD B6 FE           4141 	or	a,-2(ix)
   0F68 D6 01              4142 	sub	a,#0x01
   0F6A 3E 00              4143 	ld	a,#0x00
   0F6C 17                 4144 	rla
   0F6D 5F                 4145 	ld	e,a
                           4146 ;	genCast
                           4147 ;	AOP_STK for _yes_or_no_res_1_1
   0F6E DD 73 FD           4148 	ld	-3(ix),e
   0F71 DD 36 FE 00        4149 	ld	-2(ix),#0x00
                           4150 ;	genGoto
   0F75 18 2A              4151 	jr	00115$
                           4152 ;	genLabel
   0F77                    4153 00114$:
                           4154 ;main.c:541: else if ( key == 'y' )
                           4155 ;	genCmpEq
                           4156 ; genCmpEq: left 1, right 1, result 0
   0F77 78                 4157 	ld	a,b
   0F78 D6 79              4158 	sub	a,#0x79
   0F7A 28 02              4159 	jr	Z,00154$
   0F7C 18 0B              4160 	jr	00111$
   0F7E                    4161 00154$:
                           4162 ;main.c:543: res = 1;
                           4163 ;	genAssign
                           4164 ;	AOP_STK for _yes_or_no_res_1_1
   0F7E DD 36 FD 01        4165 	ld	-3(ix),#0x01
   0F82 DD 36 FE 00        4166 	ld	-2(ix),#0x00
                           4167 ;main.c:544: break;
                           4168 ;	genGoto
   0F86 C3rFCs0F           4169 	jp	00146$
                           4170 ;	genLabel
   0F89                    4171 00111$:
                           4172 ;main.c:546: else if ( key == 'n' )
                           4173 ;	genCmpEq
                           4174 ; genCmpEq: left 1, right 1, result 0
   0F89 78                 4175 	ld	a,b
   0F8A D6 6E              4176 	sub	a,#0x6E
   0F8C 28 02              4177 	jr	Z,00156$
   0F8E 18 0B              4178 	jr	00108$
   0F90                    4179 00156$:
                           4180 ;main.c:548: res = 0;
                           4181 ;	genAssign
                           4182 ;	AOP_STK for _yes_or_no_res_1_1
   0F90 DD 36 FD 00        4183 	ld	-3(ix),#0x00
   0F94 DD 36 FE 00        4184 	ld	-2(ix),#0x00
                           4185 ;main.c:549: break;
                           4186 ;	genGoto
   0F98 C3rFCs0F           4187 	jp	00146$
                           4188 ;	genLabel
   0F9B                    4189 00108$:
                           4190 ;main.c:551: else if ( key == 0xd )
                           4191 ;	genCmpEq
                           4192 ; genCmpEq: left 1, right 1, result 0
   0F9B 78                 4193 	ld	a,b
   0F9C D6 0D              4194 	sub	a,#0x0D
   0F9E CArFCs0F           4195 	jp	Z,00146$
                           4196 ;main.c:553: break;
                           4197 ;	genLabel
   0FA1                    4198 00115$:
                           4199 ;main.c:555: if ( new_res != res )
                           4200 ;	genCmpEq
                           4201 ;	AOP_STK for _yes_or_no_new_res_2_3
                           4202 ;	AOP_STK for _yes_or_no_res_1_1
                           4203 ; genCmpEq: left 2, right 2, result 0
   0FA1 DD 7E FB           4204 	ld	a,-5(ix)
   0FA4 DD 96 FD           4205 	sub	-3(ix)
   0FA7 20 09              4206 	jr	NZ,00158$
   0FA9 DD 7E FC           4207 	ld	a,-4(ix)
   0FAC DD 96 FE           4208 	sub	-2(ix)
   0FAF CAr44s0F           4209 	jp	Z,00123$
   0FB2                    4210 00158$:
                           4211 ;main.c:557: if ( res )
                           4212 ;	genIfx
                           4213 ;	AOP_STK for _yes_or_no_res_1_1
   0FB2 DD 7E FD           4214 	ld	a,-3(ix)
   0FB5 DD B6 FE           4215 	or	a,-2(ix)
   0FB8 28 21              4216 	jr	Z,00118$
                           4217 ;main.c:559: set_attr( 017, 9, top + 4, 5 );
                           4218 ;	genIpush
                           4219 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0FBA C5                 4220 	push	bc
   0FBB 21 0B 05           4221 	ld	hl,#0x050B
   0FBE E5                 4222 	push	hl
                           4223 ;	genIpush
   0FBF 21 0F 09           4224 	ld	hl,#0x090F
   0FC2 E5                 4225 	push	hl
                           4226 ;	genCall
   0FC3 CDr00s00           4227 	call	_set_attr
   0FC6 F1                 4228 	pop	af
   0FC7 F1                 4229 	pop	af
   0FC8 C1                 4230 	pop	bc
                           4231 ;main.c:560: set_attr( 050, 19, top + 4, 4 );
                           4232 ;	genIpush
                           4233 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0FC9 C5                 4234 	push	bc
   0FCA 21 0B 04           4235 	ld	hl,#0x040B
   0FCD E5                 4236 	push	hl
                           4237 ;	genIpush
   0FCE 21 28 13           4238 	ld	hl,#0x1328
   0FD1 E5                 4239 	push	hl
                           4240 ;	genCall
   0FD2 CDr00s00           4241 	call	_set_attr
   0FD5 F1                 4242 	pop	af
   0FD6 F1                 4243 	pop	af
   0FD7 C1                 4244 	pop	bc
                           4245 ;	genGoto
   0FD8 C3r44s0F           4246 	jp	00123$
                           4247 ;	genLabel
   0FDB                    4248 00118$:
                           4249 ;main.c:564: set_attr( 050, 9, top + 4, 5 );
                           4250 ;	genIpush
                           4251 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0FDB C5                 4252 	push	bc
   0FDC 21 0B 05           4253 	ld	hl,#0x050B
   0FDF E5                 4254 	push	hl
                           4255 ;	genIpush
   0FE0 21 28 09           4256 	ld	hl,#0x0928
   0FE3 E5                 4257 	push	hl
                           4258 ;	genCall
   0FE4 CDr00s00           4259 	call	_set_attr
   0FE7 F1                 4260 	pop	af
   0FE8 F1                 4261 	pop	af
   0FE9 C1                 4262 	pop	bc
                           4263 ;main.c:565: set_attr( 017, 19, top + 4, 4 );
                           4264 ;	genIpush
                           4265 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0FEA C5                 4266 	push	bc
   0FEB 21 0B 04           4267 	ld	hl,#0x040B
   0FEE E5                 4268 	push	hl
                           4269 ;	genIpush
   0FEF 21 0F 13           4270 	ld	hl,#0x130F
   0FF2 E5                 4271 	push	hl
                           4272 ;	genCall
   0FF3 CDr00s00           4273 	call	_set_attr
   0FF6 F1                 4274 	pop	af
   0FF7 F1                 4275 	pop	af
   0FF8 C1                 4276 	pop	bc
                           4277 ;	genGoto
   0FF9 C3r44s0F           4278 	jp	00123$
                           4279 ;main.c:569: for ( i = 0; i < 6; i++ )
                           4280 ;	genLabel
   0FFC                    4281 00146$:
                           4282 ;	genAssign
                           4283 ;	AOP_STK for _yes_or_no_i_1_1
   0FFC DD 36 FF 00        4284 	ld	-1(ix),#0x00
                           4285 ;	genLabel
   1000                    4286 00129$:
                           4287 ;	genCmpLt
                           4288 ;	AOP_STK for _yes_or_no_i_1_1
   1000 DD 7E FF           4289 	ld	a,-1(ix)
   1003 D6 06              4290 	sub	a,#0x06
   1005 D2r5Es10           4291 	jp	NC,00132$
                           4292 ;main.c:571: print_pad_8( "", ( 32 - sz ) / 2, top + i, sz );
                           4293 ;	genPlus
                           4294 ;	AOP_STK for _yes_or_no_i_1_1
                           4295 ;	genPlusIncr
   1008 DD 7E FF           4296 	ld	a,-1(ix)
   100B C6 07              4297 	add	a,#0x07
   100D 5F                 4298 	ld	e,a
                           4299 ;	genCast
   100E 51                 4300 	ld	d,c
   100F 06 00              4301 	ld	b,#0x00
                           4302 ;	genMinus
   1011 3E 20              4303 	ld	a,#0x20
   1013 92                 4304 	sub	a,d
   1014 57                 4305 	ld	d,a
   1015 3E 00              4306 	ld	a,#0x00
   1017 98                 4307 	sbc	a,b
   1018 47                 4308 	ld	b,a
                           4309 ;	genIpush
                           4310 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   1019 C5                 4311 	push	bc
   101A D5                 4312 	push	de
   101B 21 02 00           4313 	ld	hl,#0x0002
   101E E5                 4314 	push	hl
                           4315 ;	genIpush
   101F 6A                 4316 	ld	l,d
   1020 60                 4317 	ld	h,b
   1021 E5                 4318 	push	hl
                           4319 ;	genCall
   1022 CDr00s00           4320 	call	__divsint_rrx_s
   1025 54                 4321 	ld	d,h
   1026 45                 4322 	ld	b,l
   1027 F1                 4323 	pop	af
   1028 F1                 4324 	pop	af
   1029 7A                 4325 	ld	a,d
   102A D1                 4326 	pop	de
   102B 57                 4327 	ld	d,a
   102C 78                 4328 	ld	a,b
   102D C1                 4329 	pop	bc
   102E 47                 4330 	ld	b,a
                           4331 ;	genCast
                           4332 ;	genIpush
                           4333 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   102F C5                 4334 	push	bc
   1030 D5                 4335 	push	de
   1031 79                 4336 	ld	a,c
   1032 F5                 4337 	push	af
   1033 33                 4338 	inc	sp
                           4339 ;	genIpush
   1034 7B                 4340 	ld	a,e
   1035 F5                 4341 	push	af
   1036 33                 4342 	inc	sp
                           4343 ;	genIpush
   1037 C5                 4344 	push	bc
   1038 33                 4345 	inc	sp
                           4346 ;	genIpush
   1039 21r69s10           4347 	ld	hl,#__str_10
   103C E5                 4348 	push	hl
                           4349 ;	genCall
   103D CDr64s05           4350 	call	_print_pad_8
   1040 F1                 4351 	pop	af
   1041 F1                 4352 	pop	af
   1042 33                 4353 	inc	sp
   1043 D1                 4354 	pop	de
   1044 C1                 4355 	pop	bc
                           4356 ;main.c:572: set_attr( 007, ( 32 - sz ) / 2, top + i, sz );
                           4357 ;	genIpush
                           4358 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1045 C5                 4359 	push	bc
   1046 79                 4360 	ld	a,c
   1047 F5                 4361 	push	af
   1048 33                 4362 	inc	sp
                           4363 ;	genIpush
   1049 7B                 4364 	ld	a,e
   104A F5                 4365 	push	af
   104B 33                 4366 	inc	sp
                           4367 ;	genIpush
   104C C5                 4368 	push	bc
   104D 33                 4369 	inc	sp
                           4370 ;	genIpush
   104E 3E 07              4371 	ld	a,#0x07
   1050 F5                 4372 	push	af
   1051 33                 4373 	inc	sp
                           4374 ;	genCall
   1052 CDr00s00           4375 	call	_set_attr
   1055 F1                 4376 	pop	af
   1056 F1                 4377 	pop	af
   1057 C1                 4378 	pop	bc
                           4379 ;main.c:569: for ( i = 0; i < 6; i++ )
                           4380 ;	genPlus
                           4381 ;	AOP_STK for _yes_or_no_i_1_1
                           4382 ;	genPlusIncr
   1058 DD 34 FF           4383 	inc	-1(ix)
                           4384 ;	genGoto
   105B C3r00s10           4385 	jp	00129$
                           4386 ;	genLabel
   105E                    4387 00132$:
                           4388 ;main.c:574: return res;
                           4389 ;	genRet
                           4390 ;	AOP_STK for _yes_or_no_res_1_1
                           4391 ; Dump of IC_LEFT: type AOP_STK size 2
                           4392 ;	 aop_stk -3
   105E DD 6E FD           4393 	ld	l,-3(ix)
   1061 DD 66 FE           4394 	ld	h,-2(ix)
                           4395 ;	genLabel
                           4396 ;	genEndFunction
   1064 DD F9              4397 	ld	sp,ix
   1066 DD E1              4398 	pop	ix
   1068 C9                 4399 	ret
   1069                    4400 _yes_or_no_end::
   1069                    4401 __str_10:
   1069 00                 4402 	.db 0x00
   106A                    4403 __str_11:
   106A 2D 3D 20 43 6F 6E  4404 	.ascii "-= Confirmation =-"
        66 69 72 6D 61 74
        69 6F 6E 20 3D 2D
   107C 00                 4405 	.db 0x00
   107D                    4406 __str_12:
   107D 59 65 73           4407 	.ascii "Yes"
   1080 00                 4408 	.db 0x00
   1081                    4409 __str_13:
   1081 4E 6F              4410 	.ascii "No"
   1083 00                 4411 	.db 0x00
                           4412 ;main.c:577: int input_box( char *head, char *prompt, char *str, int max_sz )
                           4413 ;	genLabel
                           4414 ;	genFunction
                           4415 ;	---------------------------------
                           4416 ; Function input_box
                           4417 ; ---------------------------------
   1084                    4418 _input_box_start::
   1084                    4419 _input_box:
   1084 DD E5              4420 	push	ix
   1086 DD 21 00 00        4421 	ld	ix,#0
   108A DD 39              4422 	add	ix,sp
   108C 21 F6 FF           4423 	ld	hl,#-10
   108F 39                 4424 	add	hl,sp
   1090 F9                 4425 	ld	sp,hl
                           4426 ;main.c:583: for ( i = 0; i < 6; i++ )
                           4427 ;	genAssign
   1091 0E 00              4428 	ld	c,#0x00
                           4429 ;	genLabel
   1093                    4430 00150$:
                           4431 ;	genCmpLt
                           4432 ;main.c:585: set_attr( 050, ( 32 - WN_8 ) / 2, top + i, WN_8 );
                           4433 ;	genPlus
                           4434 ;	genPlusIncr
   1093 79                 4435 	ld	a,c
   1094 FE 06              4436 	cp	a,#0x06
   1096 30 2D              4437 	jr	NC,00153$
   1098 C6 07              4438 	add	a,#0x07
   109A 47                 4439 	ld	b,a
                           4440 ;	genIpush
                           4441 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   109B C5                 4442 	push	bc
   109C 3E 16              4443 	ld	a,#0x16
   109E F5                 4444 	push	af
   109F 33                 4445 	inc	sp
                           4446 ;	genIpush
   10A0 C5                 4447 	push	bc
   10A1 33                 4448 	inc	sp
                           4449 ;	genIpush
   10A2 21 28 05           4450 	ld	hl,#0x0528
   10A5 E5                 4451 	push	hl
                           4452 ;	genCall
   10A6 CDr00s00           4453 	call	_set_attr
   10A9 F1                 4454 	pop	af
   10AA F1                 4455 	pop	af
   10AB C1                 4456 	pop	bc
                           4457 ;main.c:586: print_pad_8( "", ( 32 - WN_8 ) / 2, top + i, WN_8 );
                           4458 ;	genIpush
                           4459 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   10AC C5                 4460 	push	bc
   10AD 3E 16              4461 	ld	a,#0x16
   10AF F5                 4462 	push	af
   10B0 33                 4463 	inc	sp
                           4464 ;	genIpush
   10B1 C5                 4465 	push	bc
   10B2 33                 4466 	inc	sp
                           4467 ;	genIpush
   10B3 3E 05              4468 	ld	a,#0x05
   10B5 F5                 4469 	push	af
   10B6 33                 4470 	inc	sp
                           4471 ;	genIpush
   10B7 21r1Cs14           4472 	ld	hl,#__str_14
   10BA E5                 4473 	push	hl
                           4474 ;	genCall
   10BB CDr64s05           4475 	call	_print_pad_8
   10BE F1                 4476 	pop	af
   10BF F1                 4477 	pop	af
   10C0 33                 4478 	inc	sp
   10C1 C1                 4479 	pop	bc
                           4480 ;main.c:583: for ( i = 0; i < 6; i++ )
                           4481 ;	genPlus
                           4482 ;	genPlusIncr
   10C2 0C                 4483 	inc	c
                           4484 ;	genGoto
   10C3 18 CE              4485 	jr	00150$
                           4486 ;	genLabel
   10C5                    4487 00153$:
                           4488 ;main.c:588: set_attr( 0417, ( 32 - WN_8 ) / 2 + 1, top + 4, WN_8 - 2 );
                           4489 ;	genIpush
                           4490 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   10C5 21 0B 14           4491 	ld	hl,#0x140B
   10C8 E5                 4492 	push	hl
                           4493 ;	genIpush
   10C9 21 0F 06           4494 	ld	hl,#0x060F
   10CC E5                 4495 	push	hl
                           4496 ;	genCall
   10CD CDr00s00           4497 	call	_set_attr
   10D0 F1                 4498 	pop	af
   10D1 F1                 4499 	pop	af
                           4500 ;main.c:589: i = strlen( head );
                           4501 ;	genIpush
                           4502 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4503 ;	AOP_STK for 
   10D2 DD 6E 04           4504 	ld	l,4(ix)
   10D5 DD 66 05           4505 	ld	h,5(ix)
   10D8 E5                 4506 	push	hl
                           4507 ;	genCall
   10D9 CDr00s00           4508 	call	_strlen
   10DC 44                 4509 	ld	b,h
   10DD 4D                 4510 	ld	c,l
   10DE F1                 4511 	pop	af
                           4512 ;	genCast
                           4513 ;main.c:590: text_out_pos_8( "-= ", ( 26 - i ) / 2, top, 0, 0xff );
                           4514 ;	genCast
   10DF 59                 4515 	ld	e,c
   10E0 16 00              4516 	ld	d,#0x00
                           4517 ;	genMinus
   10E2 3E 1A              4518 	ld	a,#0x1A
   10E4 93                 4519 	sub	a,e
   10E5 5F                 4520 	ld	e,a
   10E6 3E 00              4521 	ld	a,#0x00
   10E8 9A                 4522 	sbc	a,d
   10E9 57                 4523 	ld	d,a
                           4524 ;	genIpush
                           4525 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   10EA C5                 4526 	push	bc
   10EB 21 02 00           4527 	ld	hl,#0x0002
   10EE E5                 4528 	push	hl
                           4529 ;	genIpush
   10EF D5                 4530 	push	de
                           4531 ;	genCall
   10F0 CDr00s00           4532 	call	__divsint_rrx_s
   10F3 54                 4533 	ld	d,h
   10F4 5D                 4534 	ld	e,l
   10F5 F1                 4535 	pop	af
   10F6 F1                 4536 	pop	af
   10F7 C1                 4537 	pop	bc
                           4538 ;	genCast
   10F8 43                 4539 	ld	b,e
                           4540 ;	genIpush
                           4541 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   10F9 C5                 4542 	push	bc
   10FA D5                 4543 	push	de
   10FB 21 00 FF           4544 	ld	hl,#0xFF00
   10FE E5                 4545 	push	hl
                           4546 ;	genIpush
   10FF 3E 07              4547 	ld	a,#0x07
   1101 F5                 4548 	push	af
   1102 33                 4549 	inc	sp
                           4550 ;	genIpush
   1103 C5                 4551 	push	bc
   1104 33                 4552 	inc	sp
                           4553 ;	genIpush
   1105 21r1Ds14           4554 	ld	hl,#__str_15
   1108 E5                 4555 	push	hl
                           4556 ;	genCall
   1109 CDr00s00           4557 	call	_text_out_pos_8
   110C F1                 4558 	pop	af
   110D F1                 4559 	pop	af
   110E F1                 4560 	pop	af
   110F D1                 4561 	pop	de
   1110 C1                 4562 	pop	bc
                           4563 ;main.c:591: text_out_pos_8( head, ( 26 - i ) / 2 + 3, top, 0, 0xff );
                           4564 ;	genCast
   1111 43                 4565 	ld	b,e
                           4566 ;	genPlus
                           4567 ;	genPlusIncr
   1112 04                 4568 	inc	b
   1113 04                 4569 	inc	b
   1114 04                 4570 	inc	b
                           4571 ;	genIpush
                           4572 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1115 C5                 4573 	push	bc
   1116 21 00 FF           4574 	ld	hl,#0xFF00
   1119 E5                 4575 	push	hl
                           4576 ;	genIpush
   111A 3E 07              4577 	ld	a,#0x07
   111C F5                 4578 	push	af
   111D 33                 4579 	inc	sp
                           4580 ;	genIpush
   111E C5                 4581 	push	bc
   111F 33                 4582 	inc	sp
                           4583 ;	genIpush
                           4584 ;	AOP_STK for 
   1120 DD 6E 04           4585 	ld	l,4(ix)
   1123 DD 66 05           4586 	ld	h,5(ix)
   1126 E5                 4587 	push	hl
                           4588 ;	genCall
   1127 CDr00s00           4589 	call	_text_out_pos_8
   112A F1                 4590 	pop	af
   112B F1                 4591 	pop	af
   112C F1                 4592 	pop	af
   112D C1                 4593 	pop	bc
                           4594 ;main.c:592: text_out_pos_8( " =-", ( 26 - i ) / 2 + 3 + i, top, 0, 0xff );
                           4595 ;	genPlus
   112E 78                 4596 	ld	a,b
   112F 81                 4597 	add	a,c
   1130 4F                 4598 	ld	c,a
                           4599 ;	genIpush
                           4600 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1131 21 00 FF           4601 	ld	hl,#0xFF00
   1134 E5                 4602 	push	hl
                           4603 ;	genIpush
   1135 3E 07              4604 	ld	a,#0x07
   1137 F5                 4605 	push	af
   1138 33                 4606 	inc	sp
                           4607 ;	genIpush
   1139 79                 4608 	ld	a,c
   113A F5                 4609 	push	af
   113B 33                 4610 	inc	sp
                           4611 ;	genIpush
   113C 21r21s14           4612 	ld	hl,#__str_16
   113F E5                 4613 	push	hl
                           4614 ;	genCall
   1140 CDr00s00           4615 	call	_text_out_pos_8
   1143 F1                 4616 	pop	af
   1144 F1                 4617 	pop	af
   1145 F1                 4618 	pop	af
                           4619 ;main.c:593: text_out_pos_8( prompt, ( 32 - WN_8 ) / 2 + 1, top + 2, 0, 0xff );
                           4620 ;	genIpush
                           4621 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1146 21 00 FF           4622 	ld	hl,#0xFF00
   1149 E5                 4623 	push	hl
                           4624 ;	genIpush
   114A 21 06 09           4625 	ld	hl,#0x0906
   114D E5                 4626 	push	hl
                           4627 ;	genIpush
                           4628 ;	AOP_STK for 
   114E DD 6E 06           4629 	ld	l,6(ix)
   1151 DD 66 07           4630 	ld	h,7(ix)
   1154 E5                 4631 	push	hl
                           4632 ;	genCall
   1155 CDr00s00           4633 	call	_text_out_pos_8
   1158 F1                 4634 	pop	af
   1159 F1                 4635 	pop	af
   115A F1                 4636 	pop	af
                           4637 ;main.c:595: curs = start = 0;
                           4638 ;	genAssign
                           4639 ;	AOP_STK for _input_box_start_1_1
   115B DD 36 FD 00        4640 	ld	-3(ix),#0x00
                           4641 ;	genAssign
                           4642 ;	AOP_STK for _input_box_curs_1_1
   115F DD 36 FE 00        4643 	ld	-2(ix),#0x00
                           4644 ;main.c:596: str[0] = 0;
                           4645 ;	genAssign
                           4646 ;	AOP_STK for 
                           4647 ;	AOP_STK for _input_box_sloc1_1_0
   1163 DD 7E 08           4648 	ld	a,8(ix)
   1166 DD 77 F6           4649 	ld	-10(ix),a
   1169 DD 7E 09           4650 	ld	a,9(ix)
   116C DD 77 F7           4651 	ld	-9(ix),a
                           4652 ;	genAssign (pointer)
                           4653 ;	AOP_STK for _input_box_sloc1_1_0
                           4654 ;	isBitvar = 0
   116F DD 6E F6           4655 	ld	l,-10(ix)
   1172 DD 66 F7           4656 	ld	h,-9(ix)
   1175 36 00              4657 	ld	(hl),#0x00
                           4658 ;main.c:597: sz = 0;
                           4659 ;	genAssign
                           4660 ;	AOP_STK for _input_box_sz_1_1
   1177 DD 36 FC 00        4661 	ld	-4(ix),#0x00
                           4662 ;main.c:598: set_attr( 0272, ( 32 - WN_8 ) / 2 + 1 + curs, top + 4, 1 );
                           4663 ;	genIpush
                           4664 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   117B 21 0B 01           4665 	ld	hl,#0x010B
   117E E5                 4666 	push	hl
                           4667 ;	genIpush
   117F 21 BA 06           4668 	ld	hl,#0x06BA
   1182 E5                 4669 	push	hl
                           4670 ;	genCall
   1183 CDr00s00           4671 	call	_set_attr
   1186 F1                 4672 	pop	af
   1187 F1                 4673 	pop	af
                           4674 ;main.c:599: while ( 1 )
                           4675 ;	genLabel
   1188                    4676 00148$:
                           4677 ;main.c:601: byte prev_curs = curs;
                           4678 ;	genAssign
                           4679 ;	AOP_STK for _input_box_curs_1_1
                           4680 ;	AOP_STK for _input_box_prev_curs_2_3
   1188 DD 7E FE           4681 	ld	a,-2(ix)
   118B DD 77 FB           4682 	ld	-5(ix),a
                           4683 ;main.c:602: byte prev_start = start;
                           4684 ;	genAssign
                           4685 ;	AOP_STK for _input_box_start_1_1
                           4686 ;	AOP_STK for _input_box_prev_start_2_3
   118E DD 7E FD           4687 	ld	a,-3(ix)
   1191 DD 77 FA           4688 	ld	-6(ix),a
                           4689 ;main.c:604: byte redraw = 0;
                           4690 ;	genAssign
   1194 1E 00              4691 	ld	e,#0x00
                           4692 ;main.c:606: key = getkey();
                           4693 ;	genCall
                           4694 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   1196 D5                 4695 	push	de
   1197 CDrF2s01           4696 	call	_getkey
   119A 4D                 4697 	ld	c,l
   119B D1                 4698 	pop	de
                           4699 ;	genAssign
   119C 51                 4700 	ld	d,c
                           4701 ;main.c:607: if ( key == 8 )
                           4702 ;	genCmpEq
                           4703 ; genCmpEq: left 1, right 1, result 0
   119D 7A                 4704 	ld	a,d
   119E D6 08              4705 	sub	a,#0x08
   11A0 28 02              4706 	jr	Z,00203$
   11A2 18 1B              4707 	jr	00143$
   11A4                    4708 00203$:
                           4709 ;main.c:609: if ( curs > 0 )
                           4710 ;	genIfx
                           4711 ;	AOP_STK for _input_box_curs_1_1
   11A4 AF                 4712 	xor	a,a
   11A5 DD B6 FE           4713 	or	a,-2(ix)
   11A8 CAr8Cs13           4714 	jp	Z,00144$
                           4715 ;main.c:611: curs--;
                           4716 ;	genMinus
                           4717 ;	AOP_STK for _input_box_curs_1_1
   11AB DD 35 FE           4718 	dec	-2(ix)
                           4719 ;main.c:612: if ( curs < start )
                           4720 ;	genCmpLt
                           4721 ;	AOP_STK for _input_box_curs_1_1
                           4722 ;	AOP_STK for _input_box_start_1_1
   11AE DD 7E FE           4723 	ld	a,-2(ix)
   11B1 DD 96 FD           4724 	sub	a,-3(ix)
   11B4 D2r8Cs13           4725 	jp	NC,00144$
                           4726 ;main.c:614: start--;
                           4727 ;	genMinus
                           4728 ;	AOP_STK for _input_box_start_1_1
   11B7 DD 35 FD           4729 	dec	-3(ix)
                           4730 ;main.c:615: redraw = 1;
                           4731 ;	genAssign
   11BA 1E 01              4732 	ld	e,#0x01
                           4733 ;	genGoto
   11BC C3r8Cs13           4734 	jp	00144$
                           4735 ;	genLabel
   11BF                    4736 00143$:
                           4737 ;main.c:619: else if ( key == 9 )
                           4738 ;	genCmpEq
                           4739 ; genCmpEq: left 1, right 1, result 0
   11BF 7A                 4740 	ld	a,d
   11C0 D6 09              4741 	sub	a,#0x09
   11C2 28 02              4742 	jr	Z,00205$
   11C4 18 34              4743 	jr	00140$
   11C6                    4744 00205$:
                           4745 ;main.c:621: if ( curs < sz )
                           4746 ;	genCmpLt
                           4747 ;	AOP_STK for _input_box_curs_1_1
                           4748 ;	AOP_STK for _input_box_sz_1_1
   11C6 DD 7E FE           4749 	ld	a,-2(ix)
   11C9 DD 96 FC           4750 	sub	a,-4(ix)
   11CC 30 03              4751 	jr	NC,00106$
                           4752 ;main.c:623: curs += 1;
                           4753 ;	genPlus
                           4754 ;	AOP_STK for _input_box_curs_1_1
                           4755 ;	genPlusIncr
   11CE DD 34 FE           4756 	inc	-2(ix)
                           4757 ;	genLabel
   11D1                    4758 00106$:
                           4759 ;main.c:625: if (( start + ( WN_8 - 3 ) ) < curs )
                           4760 ;	genCast
                           4761 ;	AOP_STK for _input_box_start_1_1
   11D1 DD 4E FD           4762 	ld	c,-3(ix)
   11D4 06 00              4763 	ld	b,#0x00
                           4764 ;	genPlus
                           4765 ;	AOP_STK for _input_box_sloc0_1_0
                           4766 ;	genPlusIncr
   11D6 79                 4767 	ld	a,c
   11D7 C6 13              4768 	add	a,#0x13
   11D9 DD 77 F8           4769 	ld	-8(ix),a
   11DC 78                 4770 	ld	a,b
   11DD CE 00              4771 	adc	a,#0x00
   11DF DD 77 F9           4772 	ld	-7(ix),a
                           4773 ;	genCast
                           4774 ;	AOP_STK for _input_box_curs_1_1
   11E2 DD 4E FE           4775 	ld	c,-2(ix)
   11E5 06 00              4776 	ld	b,#0x00
                           4777 ;	genCmpLt
                           4778 ;	AOP_STK for _input_box_sloc0_1_0
   11E7 DD 7E F8           4779 	ld	a,-8(ix)
   11EA 91                 4780 	sub	a,c
   11EB DD 7E F9           4781 	ld	a,-7(ix)
   11EE 98                 4782 	sbc	a,b
   11EF F2r8Cs13           4783 	jp	P,00144$
                           4784 ;main.c:627: start += 1;
                           4785 ;	genPlus
                           4786 ;	AOP_STK for _input_box_start_1_1
                           4787 ;	genPlusIncr
   11F2 DD 34 FD           4788 	inc	-3(ix)
                           4789 ;main.c:628: redraw = 1;
                           4790 ;	genAssign
   11F5 1E 01              4791 	ld	e,#0x01
                           4792 ;	genGoto
   11F7 C3r8Cs13           4793 	jp	00144$
                           4794 ;	genLabel
   11FA                    4795 00140$:
                           4796 ;main.c:631: else if ( key == 0xc )
                           4797 ;	genCmpEq
                           4798 ; genCmpEq: left 1, right 1, result 0
   11FA 7A                 4799 	ld	a,d
   11FB D6 0C              4800 	sub	a,#0x0C
   11FD 28 03              4801 	jr	Z,00207$
   11FF C3r97s12           4802 	jp	00137$
   1202                    4803 00207$:
                           4804 ;main.c:633: if ( curs == sz && curs > 0 )
                           4805 ;	genCmpEq
                           4806 ;	AOP_STK for _input_box_curs_1_1
                           4807 ;	AOP_STK for _input_box_sz_1_1
                           4808 ; genCmpEq: left 1, right 1, result 0
   1202 DD 7E FE           4809 	ld	a,-2(ix)
   1205 DD 96 FC           4810 	sub	-4(ix)
   1208 28 02              4811 	jr	Z,00209$
   120A 18 2A              4812 	jr	00116$
   120C                    4813 00209$:
                           4814 ;	genIfx
                           4815 ;	AOP_STK for _input_box_curs_1_1
   120C AF                 4816 	xor	a,a
   120D DD B6 FE           4817 	or	a,-2(ix)
   1210 28 24              4818 	jr	Z,00116$
                           4819 ;main.c:635: sz -= 1;
                           4820 ;	genMinus
                           4821 ;	AOP_STK for _input_box_sz_1_1
   1212 DD 35 FC           4822 	dec	-4(ix)
                           4823 ;main.c:636: curs -= 1;
                           4824 ;	genMinus
                           4825 ;	AOP_STK for _input_box_curs_1_1
   1215 DD 35 FE           4826 	dec	-2(ix)
                           4827 ;main.c:637: if ( start > 0 )
                           4828 ;	genIfx
                           4829 ;	AOP_STK for _input_box_start_1_1
   1218 AF                 4830 	xor	a,a
   1219 DD B6 FD           4831 	or	a,-3(ix)
   121C 28 03              4832 	jr	Z,00110$
                           4833 ;main.c:639: start--;
                           4834 ;	genMinus
                           4835 ;	AOP_STK for _input_box_start_1_1
   121E DD 35 FD           4836 	dec	-3(ix)
                           4837 ;	genLabel
   1221                    4838 00110$:
                           4839 ;main.c:641: str[sz] = 0;
                           4840 ;	genPlus
                           4841 ;	AOP_STK for _input_box_sloc1_1_0
                           4842 ;	AOP_STK for _input_box_sz_1_1
   1221 DD 7E F6           4843 	ld	a,-10(ix)
   1224 DD 86 FC           4844 	add	a,-4(ix)
   1227 4F                 4845 	ld	c,a
   1228 DD 7E F7           4846 	ld	a,-9(ix)
   122B CE 00              4847 	adc	a,#0x00
   122D 47                 4848 	ld	b,a
                           4849 ;	genAssign (pointer)
                           4850 ;	isBitvar = 0
   122E 3E 00              4851 	ld	a,#0x00
   1230 02                 4852 	ld	(bc),a
                           4853 ;main.c:642: redraw = 1;
                           4854 ;	genAssign
   1231 1E 01              4855 	ld	e,#0x01
                           4856 ;	genGoto
   1233 C3r8Cs13           4857 	jp	00144$
                           4858 ;	genLabel
   1236                    4859 00116$:
                           4860 ;main.c:644: else if ( curs > 0 )
                           4861 ;	genIfx
                           4862 ;	AOP_STK for _input_box_curs_1_1
   1236 AF                 4863 	xor	a,a
   1237 DD B6 FE           4864 	or	a,-2(ix)
   123A CAr8Cs13           4865 	jp	Z,00144$
                           4866 ;main.c:646: for ( i = curs; i < sz; i++ )
                           4867 ;	genAssign
                           4868 ;	AOP_STK for _input_box_curs_1_1
                           4869 ;	AOP_STK for _input_box_i_1_1
   123D DD 7E FE           4870 	ld	a,-2(ix)
   1240 DD 77 FF           4871 	ld	-1(ix),a
                           4872 ;	genLabel
   1243                    4873 00154$:
                           4874 ;	genCmpLt
                           4875 ;	AOP_STK for _input_box_i_1_1
                           4876 ;	AOP_STK for _input_box_sz_1_1
   1243 DD 7E FF           4877 	ld	a,-1(ix)
   1246 DD 96 FC           4878 	sub	a,-4(ix)
   1249 30 28              4879 	jr	NC,00157$
                           4880 ;main.c:648: str[i-1] = str[i];
                           4881 ;	genCast
                           4882 ;	AOP_STK for _input_box_i_1_1
   124B DD 46 FF           4883 	ld	b,-1(ix)
   124E 0E 00              4884 	ld	c,#0x00
                           4885 ;	genMinus
   1250 68                 4886 	ld	l,b
   1251 61                 4887 	ld	h,c
   1252 2B                 4888 	dec	hl
   1253 45                 4889 	ld	b,l
   1254 4C                 4890 	ld	c,h
                           4891 ;	genPlus
                           4892 ;	AOP_STK for _input_box_sloc1_1_0
   1255 DD 7E F6           4893 	ld	a,-10(ix)
   1258 80                 4894 	add	a,b
   1259 5F                 4895 	ld	e,a
   125A DD 7E F7           4896 	ld	a,-9(ix)
   125D 89                 4897 	adc	a,c
   125E 57                 4898 	ld	d,a
                           4899 ;	genPlus
                           4900 ;	AOP_STK for _input_box_sloc1_1_0
                           4901 ;	AOP_STK for _input_box_i_1_1
   125F DD 7E F6           4902 	ld	a,-10(ix)
   1262 DD 86 FF           4903 	add	a,-1(ix)
   1265 4F                 4904 	ld	c,a
   1266 DD 7E F7           4905 	ld	a,-9(ix)
   1269 CE 00              4906 	adc	a,#0x00
   126B 47                 4907 	ld	b,a
                           4908 ;	genPointerGet
   126C 0A                 4909 	ld	a,(bc)
                           4910 ;	genAssign (pointer)
                           4911 ;	isBitvar = 0
   126D 12                 4912 	ld	(de),a
                           4913 ;main.c:646: for ( i = curs; i < sz; i++ )
                           4914 ;	genPlus
                           4915 ;	AOP_STK for _input_box_i_1_1
                           4916 ;	genPlusIncr
   126E DD 34 FF           4917 	inc	-1(ix)
                           4918 ;	genGoto
   1271 18 D0              4919 	jr	00154$
                           4920 ;	genLabel
   1273                    4921 00157$:
                           4922 ;main.c:650: sz -= 1;
                           4923 ;	genMinus
                           4924 ;	AOP_STK for _input_box_sz_1_1
   1273 DD 35 FC           4925 	dec	-4(ix)
                           4926 ;main.c:651: str[sz] = 0;
                           4927 ;	genPlus
                           4928 ;	AOP_STK for _input_box_sloc1_1_0
                           4929 ;	AOP_STK for _input_box_sz_1_1
   1276 DD 7E F6           4930 	ld	a,-10(ix)
   1279 DD 86 FC           4931 	add	a,-4(ix)
   127C 4F                 4932 	ld	c,a
   127D DD 7E F7           4933 	ld	a,-9(ix)
   1280 CE 00              4934 	adc	a,#0x00
   1282 47                 4935 	ld	b,a
                           4936 ;	genAssign (pointer)
                           4937 ;	isBitvar = 0
   1283 3E 00              4938 	ld	a,#0x00
   1285 02                 4939 	ld	(bc),a
                           4940 ;main.c:652: curs -= 1;
                           4941 ;	genMinus
                           4942 ;	AOP_STK for _input_box_curs_1_1
   1286 DD 35 FE           4943 	dec	-2(ix)
                           4944 ;main.c:653: if ( start > 0 )
                           4945 ;	genIfx
                           4946 ;	AOP_STK for _input_box_start_1_1
   1289 AF                 4947 	xor	a,a
   128A DD B6 FD           4948 	or	a,-3(ix)
   128D 28 03              4949 	jr	Z,00112$
                           4950 ;main.c:655: start--;
                           4951 ;	genMinus
                           4952 ;	AOP_STK for _input_box_start_1_1
   128F DD 35 FD           4953 	dec	-3(ix)
                           4954 ;	genLabel
   1292                    4955 00112$:
                           4956 ;main.c:657: redraw = 1;
                           4957 ;	genAssign
   1292 1E 01              4958 	ld	e,#0x01
                           4959 ;	genGoto
   1294 C3r8Cs13           4960 	jp	00144$
                           4961 ;	genLabel
   1297                    4962 00137$:
                           4963 ;main.c:660: else if ( key >= 32 && key < 128 && sz < max_sz )
                           4964 ;	genCmpLt
                           4965 ;	genCmpLt
   1297 7A                 4966 	ld	a,d
   1298 FE 20              4967 	cp	a,#0x20
   129A DAr70s13           4968 	jp	C,00132$
   129D D6 80              4969 	sub	a,#0x80
   129F D2r70s13           4970 	jp	NC,00132$
                           4971 ;	genCast
                           4972 ;	AOP_STK for _input_box_sz_1_1
   12A2 DD 4E FC           4973 	ld	c,-4(ix)
   12A5 06 00              4974 	ld	b,#0x00
                           4975 ;	genCmpLt
                           4976 ;	AOP_STK for 
   12A7 79                 4977 	ld	a,c
   12A8 DD 96 0A           4978 	sub	a,10(ix)
   12AB 78                 4979 	ld	a,b
   12AC DD 9E 0B           4980 	sbc	a,11(ix)
   12AF F2r70s13           4981 	jp	P,00132$
                           4982 ;main.c:662: if ( curs == sz )
                           4983 ;	genCmpEq
                           4984 ;	AOP_STK for _input_box_curs_1_1
                           4985 ;	AOP_STK for _input_box_sz_1_1
                           4986 ; genCmpEq: left 1, right 1, result 0
   12B2 DD 7E FE           4987 	ld	a,-2(ix)
   12B5 DD 96 FC           4988 	sub	-4(ix)
   12B8 28 02              4989 	jr	Z,00211$
   12BA 18 3E              4990 	jr	00190$
   12BC                    4991 00211$:
                           4992 ;main.c:664: str[curs] = key;
                           4993 ;	genPlus
                           4994 ;	AOP_STK for _input_box_sloc1_1_0
                           4995 ;	AOP_STK for _input_box_curs_1_1
   12BC DD 7E F6           4996 	ld	a,-10(ix)
   12BF DD 86 FE           4997 	add	a,-2(ix)
   12C2 4F                 4998 	ld	c,a
   12C3 DD 7E F7           4999 	ld	a,-9(ix)
   12C6 CE 00              5000 	adc	a,#0x00
   12C8 47                 5001 	ld	b,a
                           5002 ;	genAssign (pointer)
                           5003 ;	isBitvar = 0
   12C9 7A                 5004 	ld	a,d
   12CA 02                 5005 	ld	(bc),a
                           5006 ;main.c:665: curs += 1;
                           5007 ;	genPlus
                           5008 ;	AOP_STK for _input_box_curs_1_1
                           5009 ;	genPlusIncr
   12CB DD 34 FE           5010 	inc	-2(ix)
                           5011 ;main.c:666: sz += 1;
                           5012 ;	genPlus
                           5013 ;	AOP_STK for _input_box_sz_1_1
                           5014 ;	genPlusIncr
   12CE DD 34 FC           5015 	inc	-4(ix)
                           5016 ;main.c:667: redraw = 1;
                           5017 ;	genAssign
   12D1 1E 01              5018 	ld	e,#0x01
                           5019 ;main.c:668: if (( start + ( WN_8 - 3 ) ) < curs )
                           5020 ;	genCast
                           5021 ;	AOP_STK for _input_box_start_1_1
   12D3 DD 4E FD           5022 	ld	c,-3(ix)
   12D6 06 00              5023 	ld	b,#0x00
                           5024 ;	genPlus
                           5025 ;	AOP_STK for _input_box_sloc0_1_0
                           5026 ;	genPlusIncr
   12D8 79                 5027 	ld	a,c
   12D9 C6 13              5028 	add	a,#0x13
   12DB DD 77 F8           5029 	ld	-8(ix),a
   12DE 78                 5030 	ld	a,b
   12DF CE 00              5031 	adc	a,#0x00
   12E1 DD 77 F9           5032 	ld	-7(ix),a
                           5033 ;	genCast
                           5034 ;	AOP_STK for _input_box_curs_1_1
   12E4 DD 4E FE           5035 	ld	c,-2(ix)
   12E7 06 00              5036 	ld	b,#0x00
                           5037 ;	genCmpLt
                           5038 ;	AOP_STK for _input_box_sloc0_1_0
   12E9 DD 7E F8           5039 	ld	a,-8(ix)
   12EC 91                 5040 	sub	a,c
   12ED DD 7E F9           5041 	ld	a,-7(ix)
   12F0 98                 5042 	sbc	a,b
   12F1 F2r5Es13           5043 	jp	P,00125$
                           5044 ;main.c:670: start += 1;
                           5045 ;	genPlus
                           5046 ;	AOP_STK for _input_box_start_1_1
                           5047 ;	genPlusIncr
   12F4 DD 34 FD           5048 	inc	-3(ix)
                           5049 ;	genGoto
   12F7 C3r5Es13           5050 	jp	00125$
                           5051 ;main.c:675: for ( i = sz; i > curs; i-- )
                           5052 ;	genLabel
   12FA                    5053 00190$:
                           5054 ;	genAssign
                           5055 ;	AOP_STK for _input_box_sz_1_1
   12FA DD 5E FC           5056 	ld	e,-4(ix)
                           5057 ;	genLabel
   12FD                    5058 00158$:
                           5059 ;	genCmpGt
                           5060 ;	AOP_STK for _input_box_curs_1_1
   12FD DD 7E FE           5061 	ld	a,-2(ix)
   1300 93                 5062 	sub	a,e
   1301 30 28              5063 	jr	NC,00161$
                           5064 ;main.c:677: str[i] = str[i-1];
                           5065 ;	genPlus
                           5066 ;	AOP_STK for _input_box_sloc1_1_0
                           5067 ;	AOP_STK for _input_box_sloc0_1_0
   1303 DD 7E F6           5068 	ld	a,-10(ix)
   1306 83                 5069 	add	a,e
   1307 DD 77 F8           5070 	ld	-8(ix),a
   130A DD 7E F7           5071 	ld	a,-9(ix)
   130D CE 00              5072 	adc	a,#0x00
   130F DD 77 F9           5073 	ld	-7(ix),a
                           5074 ;	genCast
   1312 4B                 5075 	ld	c,e
   1313 06 00              5076 	ld	b,#0x00
                           5077 ;	genMinus
   1315 0B                 5078 	dec	bc
                           5079 ;	genPlus
                           5080 ;	AOP_STK for _input_box_sloc1_1_0
   1316 DD 7E F6           5081 	ld	a,-10(ix)
   1319 81                 5082 	add	a,c
   131A 4F                 5083 	ld	c,a
   131B DD 7E F7           5084 	ld	a,-9(ix)
   131E 88                 5085 	adc	a,b
   131F 47                 5086 	ld	b,a
                           5087 ;	genPointerGet
   1320 0A                 5088 	ld	a,(bc)
                           5089 ;	genAssign (pointer)
                           5090 ;	AOP_STK for _input_box_sloc0_1_0
                           5091 ;	isBitvar = 0
   1321 DD 6E F8           5092 	ld	l,-8(ix)
   1324 DD 66 F9           5093 	ld	h,-7(ix)
   1327 77                 5094 	ld	(hl),a
                           5095 ;main.c:675: for ( i = sz; i > curs; i-- )
                           5096 ;	genMinus
   1328 1D                 5097 	dec	e
                           5098 ;	genGoto
   1329 18 D2              5099 	jr	00158$
                           5100 ;	genLabel
   132B                    5101 00161$:
                           5102 ;main.c:679: str[curs] = key;
                           5103 ;	genPlus
                           5104 ;	AOP_STK for _input_box_sloc1_1_0
                           5105 ;	AOP_STK for _input_box_curs_1_1
   132B DD 7E F6           5106 	ld	a,-10(ix)
   132E DD 86 FE           5107 	add	a,-2(ix)
   1331 4F                 5108 	ld	c,a
   1332 DD 7E F7           5109 	ld	a,-9(ix)
   1335 CE 00              5110 	adc	a,#0x00
   1337 47                 5111 	ld	b,a
                           5112 ;	genAssign (pointer)
                           5113 ;	isBitvar = 0
   1338 7A                 5114 	ld	a,d
   1339 02                 5115 	ld	(bc),a
                           5116 ;main.c:680: sz += 1;
                           5117 ;	genPlus
                           5118 ;	AOP_STK for _input_box_sz_1_1
                           5119 ;	genPlusIncr
   133A DD 34 FC           5120 	inc	-4(ix)
                           5121 ;main.c:681: curs += 1;
                           5122 ;	genPlus
                           5123 ;	AOP_STK for _input_box_curs_1_1
                           5124 ;	genPlusIncr
   133D DD 34 FE           5125 	inc	-2(ix)
                           5126 ;main.c:682: if (( start + ( WN_8 - 3 ) ) < curs )
                           5127 ;	genCast
                           5128 ;	AOP_STK for _input_box_start_1_1
   1340 DD 4E FD           5129 	ld	c,-3(ix)
   1343 06 00              5130 	ld	b,#0x00
                           5131 ;	genPlus
                           5132 ;	genPlusIncr
   1345 79                 5133 	ld	a,c
   1346 C6 13              5134 	add	a,#0x13
   1348 5F                 5135 	ld	e,a
   1349 78                 5136 	ld	a,b
   134A CE 00              5137 	adc	a,#0x00
   134C 57                 5138 	ld	d,a
                           5139 ;	genCast
                           5140 ;	AOP_STK for _input_box_curs_1_1
   134D DD 4E FE           5141 	ld	c,-2(ix)
   1350 06 00              5142 	ld	b,#0x00
                           5143 ;	genCmpLt
   1352 7B                 5144 	ld	a,e
   1353 91                 5145 	sub	a,c
   1354 7A                 5146 	ld	a,d
   1355 98                 5147 	sbc	a,b
   1356 F2r5Cs13           5148 	jp	P,00122$
                           5149 ;main.c:684: start += 1;
                           5150 ;	genPlus
                           5151 ;	AOP_STK for _input_box_start_1_1
                           5152 ;	genPlusIncr
   1359 DD 34 FD           5153 	inc	-3(ix)
                           5154 ;	genLabel
   135C                    5155 00122$:
                           5156 ;main.c:686: redraw = 1;
                           5157 ;	genAssign
   135C 1E 01              5158 	ld	e,#0x01
                           5159 ;	genLabel
   135E                    5160 00125$:
                           5161 ;main.c:688: str[sz] = 0;
                           5162 ;	genPlus
                           5163 ;	AOP_STK for _input_box_sloc1_1_0
                           5164 ;	AOP_STK for _input_box_sz_1_1
   135E DD 7E F6           5165 	ld	a,-10(ix)
   1361 DD 86 FC           5166 	add	a,-4(ix)
   1364 4F                 5167 	ld	c,a
   1365 DD 7E F7           5168 	ld	a,-9(ix)
   1368 CE 00              5169 	adc	a,#0x00
   136A 47                 5170 	ld	b,a
                           5171 ;	genAssign (pointer)
                           5172 ;	isBitvar = 0
   136B 3E 00              5173 	ld	a,#0x00
   136D 02                 5174 	ld	(bc),a
                           5175 ;	genGoto
   136E 18 1C              5176 	jr	00144$
                           5177 ;	genLabel
   1370                    5178 00132$:
                           5179 ;main.c:690: else if ( key == 0x81 )
                           5180 ;	genCmpEq
                           5181 ; genCmpEq: left 1, right 1, result 0
   1370 7A                 5182 	ld	a,d
   1371 D6 81              5183 	sub	a,#0x81
   1373 28 02              5184 	jr	Z,00213$
   1375 18 06              5185 	jr	00129$
   1377                    5186 00213$:
                           5187 ;main.c:692: result = -1;
                           5188 ;	genAssign
   1377 01 FF FF           5189 	ld	bc,#0xFFFFFFFF
                           5190 ;main.c:693: break;
                           5191 ;	genGoto
   137A C3rDDs13           5192 	jp	00197$
                           5193 ;	genLabel
   137D                    5194 00129$:
                           5195 ;main.c:695: else if ( key == 0x0d )
                           5196 ;	genCmpEq
                           5197 ; genCmpEq: left 1, right 1, result 0
   137D 7A                 5198 	ld	a,d
   137E D6 0D              5199 	sub	a,#0x0D
   1380 28 02              5200 	jr	Z,00215$
   1382 18 08              5201 	jr	00144$
   1384                    5202 00215$:
                           5203 ;main.c:697: result = sz;
                           5204 ;	genCast
                           5205 ;	AOP_STK for _input_box_sz_1_1
   1384 DD 4E FC           5206 	ld	c,-4(ix)
   1387 06 00              5207 	ld	b,#0x00
                           5208 ;main.c:698: break;
                           5209 ;	genGoto
   1389 C3rDDs13           5210 	jp	00197$
                           5211 ;	genLabel
   138C                    5212 00144$:
                           5213 ;main.c:700: if ( redraw )
                           5214 ;	genIfx
   138C AF                 5215 	xor	a,a
   138D B3                 5216 	or	a,e
   138E 28 1C              5217 	jr	Z,00146$
                           5218 ;main.c:702: print_pad_8( str + start, ( 32 - WN_8 ) / 2 + 1, top + 4, WN_8 - 3 );
                           5219 ;	genPlus
                           5220 ;	AOP_STK for _input_box_sloc1_1_0
                           5221 ;	AOP_STK for _input_box_start_1_1
   1390 DD 7E F6           5222 	ld	a,-10(ix)
   1393 DD 86 FD           5223 	add	a,-3(ix)
   1396 5F                 5224 	ld	e,a
   1397 DD 7E F7           5225 	ld	a,-9(ix)
   139A CE 00              5226 	adc	a,#0x00
   139C 57                 5227 	ld	d,a
                           5228 ;	genIpush
                           5229 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   139D 21 0B 13           5230 	ld	hl,#0x130B
   13A0 E5                 5231 	push	hl
                           5232 ;	genIpush
   13A1 3E 06              5233 	ld	a,#0x06
   13A3 F5                 5234 	push	af
   13A4 33                 5235 	inc	sp
                           5236 ;	genIpush
   13A5 D5                 5237 	push	de
                           5238 ;	genCall
   13A6 CDr64s05           5239 	call	_print_pad_8
   13A9 F1                 5240 	pop	af
   13AA F1                 5241 	pop	af
   13AB 33                 5242 	inc	sp
                           5243 ;	genLabel
   13AC                    5244 00146$:
                           5245 ;main.c:704: set_attr( 0417, ( 32 - WN_8 ) / 2 + 1 + prev_curs - prev_start, top + 4, 1 );
                           5246 ;	genPlus
                           5247 ;	AOP_STK for _input_box_prev_curs_2_3
                           5248 ;	genPlusIncr
   13AC DD 7E FB           5249 	ld	a,-5(ix)
   13AF C6 06              5250 	add	a,#0x06
                           5251 ;	genMinus
                           5252 ;	AOP_STK for _input_box_prev_start_2_3
   13B1 5F                 5253 	ld	e,a
   13B2 DD 96 FA           5254 	sub	a,-6(ix)
   13B5 5F                 5255 	ld	e,a
                           5256 ;	genIpush
                           5257 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13B6 21 0B 01           5258 	ld	hl,#0x010B
   13B9 E5                 5259 	push	hl
                           5260 ;	genIpush
                           5261 ;	genIpush
                           5262 ;	genCall
   13BA 53                 5263 	ld	d,e
   13BB 1E 0F              5264 	ld	e,#0x0F
   13BD D5                 5265 	push	de
   13BE CDr00s00           5266 	call	_set_attr
   13C1 F1                 5267 	pop	af
   13C2 F1                 5268 	pop	af
                           5269 ;main.c:705: set_attr( 0272, ( 32 - WN_8 ) / 2 + 1 + curs - start, top + 4, 1 );
                           5270 ;	genPlus
                           5271 ;	AOP_STK for _input_box_curs_1_1
                           5272 ;	genPlusIncr
   13C3 DD 7E FE           5273 	ld	a,-2(ix)
   13C6 C6 06              5274 	add	a,#0x06
                           5275 ;	genMinus
                           5276 ;	AOP_STK for _input_box_start_1_1
   13C8 5F                 5277 	ld	e,a
   13C9 DD 96 FD           5278 	sub	a,-3(ix)
   13CC 5F                 5279 	ld	e,a
                           5280 ;	genIpush
                           5281 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   13CD 21 0B 01           5282 	ld	hl,#0x010B
   13D0 E5                 5283 	push	hl
                           5284 ;	genIpush
                           5285 ;	genIpush
                           5286 ;	genCall
   13D1 53                 5287 	ld	d,e
   13D2 1E BA              5288 	ld	e,#0xBA
   13D4 D5                 5289 	push	de
   13D5 CDr00s00           5290 	call	_set_attr
   13D8 F1                 5291 	pop	af
   13D9 F1                 5292 	pop	af
                           5293 ;	genGoto
   13DA C3r88s11           5294 	jp	00148$
                           5295 ;main.c:707: for ( i = 0; i < 6; i++ )
                           5296 ;	genLabel
   13DD                    5297 00197$:
                           5298 ;	genAssign
   13DD 1E 00              5299 	ld	e,#0x00
                           5300 ;	genLabel
   13DF                    5301 00162$:
                           5302 ;	genCmpLt
                           5303 ;main.c:709: print_pad_8( "", ( 32 - WN_8 ) / 2, top + i, WN_8 );
                           5304 ;	genPlus
                           5305 ;	genPlusIncr
   13DF 7B                 5306 	ld	a,e
   13E0 FE 06              5307 	cp	a,#0x06
   13E2 30 31              5308 	jr	NC,00165$
   13E4 C6 07              5309 	add	a,#0x07
   13E6 57                 5310 	ld	d,a
                           5311 ;	genIpush
                           5312 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   13E7 C5                 5313 	push	bc
   13E8 D5                 5314 	push	de
   13E9 3E 16              5315 	ld	a,#0x16
   13EB F5                 5316 	push	af
   13EC 33                 5317 	inc	sp
                           5318 ;	genIpush
   13ED D5                 5319 	push	de
   13EE 33                 5320 	inc	sp
                           5321 ;	genIpush
   13EF 3E 05              5322 	ld	a,#0x05
   13F1 F5                 5323 	push	af
   13F2 33                 5324 	inc	sp
                           5325 ;	genIpush
   13F3 21r1Cs14           5326 	ld	hl,#__str_14
   13F6 E5                 5327 	push	hl
                           5328 ;	genCall
   13F7 CDr64s05           5329 	call	_print_pad_8
   13FA F1                 5330 	pop	af
   13FB F1                 5331 	pop	af
   13FC 33                 5332 	inc	sp
   13FD D1                 5333 	pop	de
   13FE C1                 5334 	pop	bc
                           5335 ;main.c:710: set_attr( 007, ( 32 - WN_8 ) / 2, top + i, WN_8 );
                           5336 ;	genIpush
                           5337 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 1 deSending: 0
   13FF C5                 5338 	push	bc
   1400 D5                 5339 	push	de
   1401 3E 16              5340 	ld	a,#0x16
   1403 F5                 5341 	push	af
   1404 33                 5342 	inc	sp
                           5343 ;	genIpush
   1405 D5                 5344 	push	de
   1406 33                 5345 	inc	sp
                           5346 ;	genIpush
   1407 21 07 05           5347 	ld	hl,#0x0507
   140A E5                 5348 	push	hl
                           5349 ;	genCall
   140B CDr00s00           5350 	call	_set_attr
   140E F1                 5351 	pop	af
   140F F1                 5352 	pop	af
   1410 D1                 5353 	pop	de
   1411 C1                 5354 	pop	bc
                           5355 ;main.c:707: for ( i = 0; i < 6; i++ )
                           5356 ;	genPlus
                           5357 ;	genPlusIncr
   1412 1C                 5358 	inc	e
                           5359 ;	genGoto
   1413 18 CA              5360 	jr	00162$
                           5361 ;	genLabel
   1415                    5362 00165$:
                           5363 ;main.c:712: return result;
                           5364 ;	genRet
                           5365 ; Dump of IC_LEFT: type AOP_REG size 2
                           5366 ;	 reg = bc
   1415 69                 5367 	ld	l,c
   1416 60                 5368 	ld	h,b
                           5369 ;	genLabel
                           5370 ;	genEndFunction
   1417 DD F9              5371 	ld	sp,ix
   1419 DD E1              5372 	pop	ix
   141B C9                 5373 	ret
   141C                    5374 _input_box_end::
   141C                    5375 __str_14:
   141C 00                 5376 	.db 0x00
   141D                    5377 __str_15:
   141D 2D 3D 20           5378 	.ascii "-= "
   1420 00                 5379 	.db 0x00
   1421                    5380 __str_16:
   1421 20 3D 2D           5381 	.ascii " =-"
   1424 00                 5382 	.db 0x00
                           5383 ;main.c:717: void calc_sel()
                           5384 ;	genLabel
                           5385 ;	genFunction
                           5386 ;	---------------------------------
                           5387 ; Function calc_sel
                           5388 ; ---------------------------------
   1425                    5389 _calc_sel_start::
   1425                    5390 _calc_sel:
                           5391 ;main.c:719: if ( files_sel >= files_size ) files_sel = files_size - 1;
                           5392 ;	genCmpLt
   1425 FD 21r04s38        5393 	ld	iy,#_files_sel
   1429 FD 7E 00           5394 	ld	a,0(iy)
   142C FD 21r00s38        5395 	ld	iy,#_files_size
   1430 FD 96 00           5396 	sub	a,0(iy)
   1433 FD 21r04s38        5397 	ld	iy,#_files_sel
   1437 FD 7E 01           5398 	ld	a,1(iy)
   143A FD 21r00s38        5399 	ld	iy,#_files_size
   143E FD 9E 01           5400 	sbc	a,1(iy)
   1441 FAr56s14           5401 	jp	M,00104$
                           5402 ;	genMinus
                           5403 ;	Shift into pair idx 0
   1444 21r04s38           5404 	ld	hl,#_files_sel
   1447 FD 7E 00           5405 	ld	a,0(iy)
   144A C6 FF              5406 	add	a,#0xFF
   144C 77                 5407 	ld	(hl),a
   144D FD 7E 01           5408 	ld	a,1(iy)
   1450 CE FF              5409 	adc	a,#0xFF
   1452 23                 5410 	inc	hl
   1453 77                 5411 	ld	(hl),a
                           5412 ;	genGoto
   1454 18 13              5413 	jr	00106$
                           5414 ;	genLabel
   1456                    5415 00104$:
                           5416 ;main.c:720: else if ( files_sel < 0 ) files_sel = 0;
                           5417 ;	genCmpLt
   1456 FD 21r04s38        5418 	ld	iy,#_files_sel
   145A FD 7E 01           5419 	ld	a,1(iy)
   145D CB 7F              5420 	bit	7,a
   145F 28 08              5421 	jr	Z,00106$
                           5422 ;	genAssign
   1461 FD 36 00 00        5423 	ld	0(iy),#0x00
   1465 FD 36 01 00        5424 	ld	1(iy),#0x00
                           5425 ;main.c:722: while ( files_sel < files_table_start )
                           5426 ;	genLabel
   1469                    5427 00106$:
                           5428 ;	genCmpLt
   1469 FD 21r04s38        5429 	ld	iy,#_files_sel
   146D FD 7E 00           5430 	ld	a,0(iy)
   1470 FD 21r02s38        5431 	ld	iy,#_files_table_start
   1474 FD 96 00           5432 	sub	a,0(iy)
   1477 FD 21r04s38        5433 	ld	iy,#_files_sel
   147B FD 7E 01           5434 	ld	a,1(iy)
   147E FD 21r02s38        5435 	ld	iy,#_files_table_start
   1482 FD 9E 01           5436 	sbc	a,1(iy)
   1485 F2r99s14           5437 	jp	P,00109$
                           5438 ;main.c:724: files_table_start -= FILES_PER_ROW;
                           5439 ;	genMinus
                           5440 ;	Shift into pair idx 0
   1488 21r02s38           5441 	ld	hl,#_files_table_start
   148B 7E                 5442 	ld	a,(hl)
   148C C6 F0              5443 	add	a,#0xF0
   148E 77                 5444 	ld	(hl),a
   148F 23                 5445 	inc	hl
   1490 7E                 5446 	ld	a,(hl)
   1491 CE FF              5447 	adc	a,#0xFF
   1493 77                 5448 	ld	(hl),a
                           5449 ;main.c:725: show_table();
                           5450 ;	genCall
                           5451 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1494 CDrA8s06           5452 	call	_show_table
                           5453 ;	genGoto
   1497 18 D0              5454 	jr	00106$
                           5455 ;main.c:728: while ( files_sel >= files_table_start + FILES_PER_ROW * 2 )
                           5456 ;	genLabel
   1499                    5457 00109$:
                           5458 ;	genPlus
                           5459 ;	genPlusIncr
   1499 FD 21r02s38        5460 	ld	iy,#_files_table_start
   149D FD 7E 00           5461 	ld	a,0(iy)
   14A0 C6 20              5462 	add	a,#0x20
   14A2 4F                 5463 	ld	c,a
   14A3 FD 7E 01           5464 	ld	a,1(iy)
   14A6 CE 00              5465 	adc	a,#0x00
   14A8 47                 5466 	ld	b,a
                           5467 ;	genCmpLt
   14A9 FD 21r04s38        5468 	ld	iy,#_files_sel
   14AD FD 7E 00           5469 	ld	a,0(iy)
   14B0 91                 5470 	sub	a,c
   14B1 FD 7E 01           5471 	ld	a,1(iy)
   14B4 98                 5472 	sbc	a,b
   14B5 FArD3s14           5473 	jp	M,00111$
                           5474 ;main.c:730: files_table_start += FILES_PER_ROW;
                           5475 ;	genPlus
                           5476 ;	genPlusIncr
                           5477 ;	Shift into pair idx 0
   14B8 21r02s38           5478 	ld	hl,#_files_table_start
   14BB 7E                 5479 	ld	a,(hl)
   14BC C6 10              5480 	add	a,#0x10
   14BE 23                 5481 	inc	hl
   14BF 2B                 5482 	dec	hl
                           5483 ;	Addition result is in same register as operand of next addition.
   14C0 C5                 5484 	push	bc
   14C1 4F                 5485 	ld	c, a
   14C2 23                 5486 	inc	hl
   14C3 7E                 5487 	ld	a, (hl)
   14C4 47                 5488 	ld	b, a
   14C5 79                 5489 	ld	a, c
   14C6 2B                 5490 	dec	hl
   14C7 77                 5491 	ld	(hl), a
   14C8 78                 5492 	ld	a, b
   14C9 C1                 5493 	pop	bc
   14CA CE 00              5494 	adc	a,#0x00
   14CC 23                 5495 	inc	hl
   14CD 77                 5496 	ld	(hl),a
                           5497 ;main.c:731: show_table();
                           5498 ;	genCall
                           5499 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   14CE CDrA8s06           5500 	call	_show_table
                           5501 ;	genGoto
   14D1 18 C6              5502 	jr	00109$
                           5503 ;	genLabel
   14D3                    5504 00111$:
                           5505 ;main.c:734: selx = (( files_sel - files_table_start ) / FILES_PER_ROW ) * 16 + 1;
                           5506 ;	genMinus
                           5507 ;	Shift into pair idx 0
   14D3 21r02s38           5508 	ld	hl,#_files_table_start
   14D6 FD 21r04s38        5509 	ld	iy,#_files_sel
   14DA FD 7E 00           5510 	ld	a,0(iy)
   14DD 96                 5511 	sub	a,(hl)
   14DE 4F                 5512 	ld	c,a
   14DF FD 7E 01           5513 	ld	a,1(iy)
   14E2 23                 5514 	inc	hl
   14E3 9E                 5515 	sbc	a,(hl)
   14E4 47                 5516 	ld	b,a
                           5517 ;	genIpush
                           5518 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   14E5 C5                 5519 	push	bc
   14E6 21 10 00           5520 	ld	hl,#0x0010
   14E9 E5                 5521 	push	hl
                           5522 ;	genIpush
   14EA C5                 5523 	push	bc
                           5524 ;	genCall
   14EB CDr00s00           5525 	call	__divsint_rrx_s
   14EE 54                 5526 	ld	d,h
   14EF 5D                 5527 	ld	e,l
   14F0 F1                 5528 	pop	af
   14F1 F1                 5529 	pop	af
   14F2 C1                 5530 	pop	bc
                           5531 ;	genCast
                           5532 ;	genLeftShift
   14F3 7B                 5533 	ld	a,e
   14F4 07                 5534 	rlca
   14F5 07                 5535 	rlca
   14F6 07                 5536 	rlca
   14F7 07                 5537 	rlca
   14F8 E6 F0              5538 	and	a,#0xF0
   14FA 5F                 5539 	ld	e,a
                           5540 ;	genPlus
                           5541 ;	genPlusIncr
                           5542 ;	Shift into pair idx 0
   14FB 21r06s38           5543 	ld	hl,#_selx
   14FE 7B                 5544 	ld	a,e
   14FF C6 01              5545 	add	a,#0x01
   1501 77                 5546 	ld	(hl),a
                           5547 ;main.c:735: sely = (( files_sel - files_table_start ) % FILES_PER_ROW ) + 3;
                           5548 ;	genIpush
                           5549 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1502 21 10 00           5550 	ld	hl,#0x0010
   1505 E5                 5551 	push	hl
                           5552 ;	genIpush
   1506 C5                 5553 	push	bc
                           5554 ;	genCall
   1507 CDr00s00           5555 	call	__modsint_rrx_s
   150A 44                 5556 	ld	b,h
   150B 4D                 5557 	ld	c,l
   150C F1                 5558 	pop	af
   150D F1                 5559 	pop	af
                           5560 ;	genCast
                           5561 ;	genPlus
                           5562 ;	genPlusIncr
                           5563 ;	Shift into pair idx 0
   150E 21r07s38           5564 	ld	hl,#_sely
   1511 79                 5565 	ld	a,c
   1512 C6 03              5566 	add	a,#0x03
   1514 77                 5567 	ld	(hl),a
                           5568 ;	genLabel
                           5569 ;	genEndFunction
   1515 C9                 5570 	ret
   1516                    5571 _calc_sel_end::
                           5572 ;main.c:739: void hide_sel()
                           5573 ;	genLabel
                           5574 ;	genFunction
                           5575 ;	---------------------------------
                           5576 ; Function hide_sel
                           5577 ; ---------------------------------
   1516                    5578 _hide_sel_start::
   1516                    5579 _hide_sel:
                           5580 ;main.c:741: set_attr( 007, selx, sely, 14 );
                           5581 ;	genIpush
                           5582 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1516 3E 0E              5583 	ld	a,#0x0E
   1518 F5                 5584 	push	af
   1519 33                 5585 	inc	sp
                           5586 ;	genIpush
   151A 3Ar07s38           5587 	ld	a,(_sely)
   151D F5                 5588 	push	af
   151E 33                 5589 	inc	sp
                           5590 ;	genIpush
   151F 3Ar06s38           5591 	ld	a,(_selx)
   1522 F5                 5592 	push	af
   1523 33                 5593 	inc	sp
                           5594 ;	genIpush
   1524 3E 07              5595 	ld	a,#0x07
   1526 F5                 5596 	push	af
   1527 33                 5597 	inc	sp
                           5598 ;	genCall
   1528 CDr00s00           5599 	call	_set_attr
   152B F1                 5600 	pop	af
   152C F1                 5601 	pop	af
                           5602 ;	genLabel
                           5603 ;	genEndFunction
   152D C9                 5604 	ret
   152E                    5605 _hide_sel_end::
                           5606 ;main.c:744: void show_sel()
                           5607 ;	genLabel
                           5608 ;	genFunction
                           5609 ;	---------------------------------
                           5610 ; Function show_sel
                           5611 ; ---------------------------------
   152E                    5612 _show_sel_start::
   152E                    5613 _show_sel:
                           5614 ;main.c:746: if ( files_size <= 0 ) return;
                           5615 ;	genCmpGt
   152E 3E 00              5616 	ld	a,#0x00
   1530 FD 21r00s38        5617 	ld	iy,#_files_size
   1534 FD 96 00           5618 	sub	a,0(iy)
   1537 3E 00              5619 	ld	a,#0x00
   1539 FD 9E 01           5620 	sbc	a,1(iy)
   153C FAr40s15           5621 	jp	M,00102$
                           5622 ;	genRet
   153F C9                 5623 	ret
                           5624 ;	genLabel
   1540                    5625 00102$:
                           5626 ;main.c:747: calc_sel();
                           5627 ;	genCall
                           5628 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1540 CDr25s14           5629 	call	_calc_sel
                           5630 ;main.c:748: set_attr( 071, selx, sely, 14 );
                           5631 ;	genIpush
                           5632 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1543 3E 0E              5633 	ld	a,#0x0E
   1545 F5                 5634 	push	af
   1546 33                 5635 	inc	sp
                           5636 ;	genIpush
   1547 3Ar07s38           5637 	ld	a,(_sely)
   154A F5                 5638 	push	af
   154B 33                 5639 	inc	sp
                           5640 ;	genIpush
   154C 3Ar06s38           5641 	ld	a,(_selx)
   154F F5                 5642 	push	af
   1550 33                 5643 	inc	sp
                           5644 ;	genIpush
   1551 3E 39              5645 	ld	a,#0x39
   1553 F5                 5646 	push	af
   1554 33                 5647 	inc	sp
                           5648 ;	genCall
   1555 CDr00s00           5649 	call	_set_attr
   1558 F1                 5650 	pop	af
   1559 F1                 5651 	pop	af
                           5652 ;	genLabel
                           5653 ;	genEndFunction
   155A C9                 5654 	ret
   155B                    5655 _show_sel_end::
                           5656 ;main.c:751: void display_fn( char *fn, int col, int row, int max_sz )
                           5657 ;	genLabel
                           5658 ;	genFunction
                           5659 ;	---------------------------------
                           5660 ; Function display_fn
                           5661 ; ---------------------------------
   155B                    5662 _display_fn_start::
   155B                    5663 _display_fn:
   155B DD E5              5664 	push	ix
   155D DD 21 00 00        5665 	ld	ix,#0
   1561 DD 39              5666 	add	ix,sp
   1563 21 FE FF           5667 	ld	hl,#-2
   1566 39                 5668 	add	hl,sp
   1567 F9                 5669 	ld	sp,hl
                           5670 ;main.c:753: if ( strlen( fn ) == 0 )
                           5671 ;	genIpush
                           5672 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           5673 ;	AOP_STK for 
   1568 DD 6E 04           5674 	ld	l,4(ix)
   156B DD 66 05           5675 	ld	h,5(ix)
   156E E5                 5676 	push	hl
                           5677 ;	genCall
   156F CDr00s00           5678 	call	_strlen
   1572 44                 5679 	ld	b,h
   1573 4D                 5680 	ld	c,l
   1574 F1                 5681 	pop	af
                           5682 ;	genIfx
   1575 79                 5683 	ld	a,c
   1576 B0                 5684 	or	a,b
   1577 20 21              5685 	jr	NZ,00108$
                           5686 ;main.c:755: print_pad_8( fn, col, row, max_sz );
                           5687 ;	genCast
                           5688 ;	AOP_STK for 
   1579 DD 4E 0A           5689 	ld	c,10(ix)
                           5690 ;	genCast
                           5691 ;	AOP_STK for 
   157C DD 46 08           5692 	ld	b,8(ix)
                           5693 ;	genCast
                           5694 ;	AOP_STK for 
   157F DD 5E 06           5695 	ld	e,6(ix)
                           5696 ;	genIpush
                           5697 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1582 79                 5698 	ld	a,c
   1583 F5                 5699 	push	af
   1584 33                 5700 	inc	sp
                           5701 ;	genIpush
   1585 C5                 5702 	push	bc
   1586 33                 5703 	inc	sp
                           5704 ;	genIpush
   1587 7B                 5705 	ld	a,e
   1588 F5                 5706 	push	af
   1589 33                 5707 	inc	sp
                           5708 ;	genIpush
                           5709 ;	AOP_STK for 
   158A DD 6E 04           5710 	ld	l,4(ix)
   158D DD 66 05           5711 	ld	h,5(ix)
   1590 E5                 5712 	push	hl
                           5713 ;	genCall
   1591 CDr64s05           5714 	call	_print_pad_8
   1594 F1                 5715 	pop	af
   1595 F1                 5716 	pop	af
   1596 33                 5717 	inc	sp
                           5718 ;	genGoto
   1597 C3r10s16           5719 	jp	00110$
                           5720 ;	genLabel
   159A                    5721 00108$:
                           5722 ;main.c:759: char *p = fn + strlen( fn ) - 1;
                           5723 ;	genIpush
                           5724 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           5725 ;	AOP_STK for 
   159A DD 6E 04           5726 	ld	l,4(ix)
   159D DD 66 05           5727 	ld	h,5(ix)
   15A0 E5                 5728 	push	hl
                           5729 ;	genCall
   15A1 CDr00s00           5730 	call	_strlen
   15A4 44                 5731 	ld	b,h
   15A5 4D                 5732 	ld	c,l
   15A6 F1                 5733 	pop	af
                           5734 ;	genPlus
                           5735 ;	AOP_STK for 
   15A7 DD 7E 04           5736 	ld	a,4(ix)
   15AA 81                 5737 	add	a,c
   15AB 4F                 5738 	ld	c,a
   15AC DD 7E 05           5739 	ld	a,5(ix)
   15AF 88                 5740 	adc	a,b
   15B0 47                 5741 	ld	b,a
                           5742 ;	genMinus
                           5743 ;	AOP_STK for _display_fn_p_2_3
   15B1 79                 5744 	ld	a,c
   15B2 C6 FF              5745 	add	a,#0xFF
   15B4 DD 77 FE           5746 	ld	-2(ix),a
   15B7 78                 5747 	ld	a,b
   15B8 CE FF              5748 	adc	a,#0xFF
   15BA DD 77 FF           5749 	ld	-1(ix),a
                           5750 ;main.c:760: while ( p != fn && *p != '/' ) p--;
                           5751 ;	genAssign
                           5752 ;	AOP_STK for _display_fn_p_2_3
   15BD DD 4E FE           5753 	ld	c,-2(ix)
   15C0 DD 46 FF           5754 	ld	b,-1(ix)
                           5755 ;	genLabel
   15C3                    5756 00102$:
                           5757 ;	genCmpEq
                           5758 ;	AOP_STK for 
                           5759 ; genCmpEq: left 2, right 2, result 0
   15C3 79                 5760 	ld	a,c
   15C4 DD 96 04           5761 	sub	4(ix)
   15C7 20 06              5762 	jr	NZ,00118$
   15C9 78                 5763 	ld	a,b
   15CA DD 96 05           5764 	sub	5(ix)
   15CD 28 09              5765 	jr	Z,00117$
   15CF                    5766 00118$:
                           5767 ;	genPointerGet
   15CF 0A                 5768 	ld	a,(bc)
                           5769 ;	genCmpEq
                           5770 ; genCmpEq: left 1, right 1, result 0
   15D0 5F                 5771 	ld	e,a
   15D1 D6 2F              5772 	sub	a,#0x2F
   15D3 28 03              5773 	jr	Z,00117$
                           5774 ;	genMinus
   15D5 0B                 5775 	dec	bc
                           5776 ;	genGoto
   15D6 18 EB              5777 	jr	00102$
                           5778 ;	genLabel
   15D8                    5779 00117$:
                           5780 ;	genAssign
                           5781 ;	AOP_STK for _display_fn_p_2_3
   15D8 DD 71 FE           5782 	ld	-2(ix),c
   15DB DD 70 FF           5783 	ld	-1(ix),b
                           5784 ;main.c:761: if ( *p == '/' ) p++;
                           5785 ;	genPointerGet
   15DE 0A                 5786 	ld	a,(bc)
                           5787 ;	genCmpEq
                           5788 ; genCmpEq: left 1, right 1, result 0
   15DF 5F                 5789 	ld	e,a
   15E0 D6 2F              5790 	sub	a,#0x2F
   15E2 28 02              5791 	jr	Z,00121$
   15E4 18 0C              5792 	jr	00106$
   15E6                    5793 00121$:
                           5794 ;	genPlus
                           5795 ;	AOP_STK for _display_fn_p_2_3
                           5796 ;	genPlusIncr
   15E6 79                 5797 	ld	a,c
   15E7 C6 01              5798 	add	a,#0x01
   15E9 DD 77 FE           5799 	ld	-2(ix),a
   15EC 78                 5800 	ld	a,b
   15ED CE 00              5801 	adc	a,#0x00
   15EF DD 77 FF           5802 	ld	-1(ix),a
                           5803 ;	genLabel
   15F2                    5804 00106$:
                           5805 ;main.c:762: print_pad_8( p, col, row, max_sz );
                           5806 ;	genCast
                           5807 ;	AOP_STK for 
   15F2 DD 5E 0A           5808 	ld	e,10(ix)
                           5809 ;	genCast
                           5810 ;	AOP_STK for 
   15F5 DD 56 08           5811 	ld	d,8(ix)
                           5812 ;	genCast
                           5813 ;	AOP_STK for 
   15F8 DD 4E 06           5814 	ld	c,6(ix)
                           5815 ;	genIpush
                           5816 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   15FB 7B                 5817 	ld	a,e
   15FC F5                 5818 	push	af
   15FD 33                 5819 	inc	sp
                           5820 ;	genIpush
   15FE D5                 5821 	push	de
   15FF 33                 5822 	inc	sp
                           5823 ;	genIpush
   1600 79                 5824 	ld	a,c
   1601 F5                 5825 	push	af
   1602 33                 5826 	inc	sp
                           5827 ;	genIpush
                           5828 ;	AOP_STK for _display_fn_p_2_3
   1603 DD 6E FE           5829 	ld	l,-2(ix)
   1606 DD 66 FF           5830 	ld	h,-1(ix)
   1609 E5                 5831 	push	hl
                           5832 ;	genCall
   160A CDr64s05           5833 	call	_print_pad_8
   160D F1                 5834 	pop	af
   160E F1                 5835 	pop	af
   160F 33                 5836 	inc	sp
                           5837 ;	genLabel
   1610                    5838 00110$:
                           5839 ;	genEndFunction
   1610 DD F9              5840 	ld	sp,ix
   1612 DD E1              5841 	pop	ix
   1614 C9                 5842 	ret
   1615                    5843 _display_fn_end::
                           5844 ;main.c:766: void get_dsk_name( byte dsk, char *buf, word size )
                           5845 ;	genLabel
                           5846 ;	genFunction
                           5847 ;	---------------------------------
                           5848 ; Function get_dsk_name
                           5849 ; ---------------------------------
   1615                    5850 _get_dsk_name_start::
   1615                    5851 _get_dsk_name:
   1615 DD E5              5852 	push	ix
   1617 DD 21 00 00        5853 	ld	ix,#0
   161B DD 39              5854 	add	ix,sp
                           5855 ;main.c:768: pport_send( PP_CMD_FCTL( PP_FCTL_DSK_GET ), 1, &dsk );
                           5856 ;	genAddrOf
   161D 21 04 00           5857 	ld	hl,#0x0004
   1620 39                 5858 	add	hl,sp
   1621 4D                 5859 	ld	c,l
   1622 44                 5860 	ld	b,h
                           5861 ;	genIpush
                           5862 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1623 C5                 5863 	push	bc
                           5864 ;	genIpush
   1624 21 01 00           5865 	ld	hl,#0x0001
   1627 E5                 5866 	push	hl
                           5867 ;	genIpush
   1628 21 13 78           5868 	ld	hl,#0x7813
   162B E5                 5869 	push	hl
                           5870 ;	genCall
   162C CDrB9s03           5871 	call	_pport_send
   162F F1                 5872 	pop	af
   1630 F1                 5873 	pop	af
   1631 F1                 5874 	pop	af
                           5875 ;main.c:769: pport_receive( buf, size );
                           5876 ;	genAssign
                           5877 ;	AOP_STK for 
   1632 DD 4E 05           5878 	ld	c,5(ix)
   1635 DD 46 06           5879 	ld	b,6(ix)
                           5880 ;	genIpush
                           5881 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           5882 ;	AOP_STK for 
   1638 DD 6E 07           5883 	ld	l,7(ix)
   163B DD 66 08           5884 	ld	h,8(ix)
   163E E5                 5885 	push	hl
                           5886 ;	genIpush
   163F C5                 5887 	push	bc
                           5888 ;	genCall
   1640 CDr4Fs04           5889 	call	_pport_receive
   1643 F1                 5890 	pop	af
   1644 F1                 5891 	pop	af
                           5892 ;main.c:776: if ( pport_result != PP_W_ACK )
                           5893 ;	genCmpEq
                           5894 ; genCmpEq: left 2, right 2, result 0
   1645 FD 21r63s38        5895 	ld	iy,#_pport_result
   1649 FD 7E 00           5896 	ld	a,0(iy)
   164C B7                 5897 	or	a,a
   164D 20 07              5898 	jr	NZ,00111$
   164F FD 7E 01           5899 	ld	a,1(iy)
   1652 D6 73              5900 	sub	a,#0x73
   1654 28 12              5901 	jr	Z,00105$
   1656                    5902 00111$:
                           5903 ;main.c:778: strcpy( buf, "err" );
                           5904 ;	genIpush
                           5905 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1656 21r8Es16           5906 	ld	hl,#__str_17
   1659 E5                 5907 	push	hl
                           5908 ;	genIpush
                           5909 ;	AOP_STK for 
   165A DD 6E 05           5910 	ld	l,5(ix)
   165D DD 66 06           5911 	ld	h,6(ix)
   1660 E5                 5912 	push	hl
                           5913 ;	genCall
   1661 CDr00s00           5914 	call	_strcpy
   1664 F1                 5915 	pop	af
   1665 F1                 5916 	pop	af
                           5917 ;	genGoto
   1666 18 23              5918 	jr	00107$
                           5919 ;	genLabel
   1668                    5920 00105$:
                           5921 ;main.c:780: else if ( buf[0] == 0 )
                           5922 ;	genAssign
                           5923 ;	AOP_STK for 
   1668 DD 4E 05           5924 	ld	c,5(ix)
   166B DD 46 06           5925 	ld	b,6(ix)
                           5926 ;	genPointerGet
   166E 0A                 5927 	ld	a,(bc)
                           5928 ;	genIfx
   166F B7                 5929 	or	a,a
   1670 20 0C              5930 	jr	NZ,00102$
                           5931 ;main.c:782: strcpy( buf, "----" );
                           5932 ;	genIpush
                           5933 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1672 21r92s16           5934 	ld	hl,#__str_18
   1675 E5                 5935 	push	hl
                           5936 ;	genIpush
   1676 C5                 5937 	push	bc
                           5938 ;	genCall
   1677 CDr00s00           5939 	call	_strcpy
   167A F1                 5940 	pop	af
   167B F1                 5941 	pop	af
                           5942 ;	genGoto
   167C 18 0D              5943 	jr	00107$
                           5944 ;	genLabel
   167E                    5945 00102$:
                           5946 ;main.c:786: buf[pport_pktsize] = 0;
                           5947 ;	genPlus
                           5948 ;	Shift into pair idx 0
   167E 21r67s38           5949 	ld	hl,#_pport_pktsize
   1681 79                 5950 	ld	a,c
   1682 86                 5951 	add	a,(hl)
   1683 4F                 5952 	ld	c,a
   1684 78                 5953 	ld	a,b
   1685 23                 5954 	inc	hl
   1686 8E                 5955 	adc	a,(hl)
   1687 47                 5956 	ld	b,a
                           5957 ;	genAssign (pointer)
                           5958 ;	isBitvar = 0
   1688 3E 00              5959 	ld	a,#0x00
   168A 02                 5960 	ld	(bc),a
                           5961 ;	genLabel
   168B                    5962 00107$:
                           5963 ;	genEndFunction
   168B DD E1              5964 	pop	ix
   168D C9                 5965 	ret
   168E                    5966 _get_dsk_name_end::
   168E                    5967 __str_17:
   168E 65 72 72           5968 	.ascii "err"
   1691 00                 5969 	.db 0x00
   1692                    5970 __str_18:
   1692 2D 2D 2D 2D        5971 	.ascii "----"
   1696 00                 5972 	.db 0x00
                           5973 ;main.c:790: word get_flags()
                           5974 ;	genLabel
                           5975 ;	genFunction
                           5976 ;	---------------------------------
                           5977 ; Function get_flags
                           5978 ; ---------------------------------
   1697                    5979 _get_flags_start::
   1697                    5980 _get_flags:
   1697 DD E5              5981 	push	ix
   1699 DD 21 00 00        5982 	ld	ix,#0
   169D DD 39              5983 	add	ix,sp
   169F 21 FE FF           5984 	ld	hl,#-2
   16A2 39                 5985 	add	hl,sp
   16A3 F9                 5986 	ld	sp,hl
                           5987 ;main.c:793: pport_send( PP_CMD_FCTL( PP_FCTL_CFG_GFLAGS ), 0, 0 );
                           5988 ;	genIpush
                           5989 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   16A4 21 00 00           5990 	ld	hl,#0x0000
   16A7 E5                 5991 	push	hl
                           5992 ;	genIpush
   16A8 21 00 00           5993 	ld	hl,#0x0000
   16AB E5                 5994 	push	hl
                           5995 ;	genIpush
   16AC 21 21 78           5996 	ld	hl,#0x7821
   16AF E5                 5997 	push	hl
                           5998 ;	genCall
   16B0 CDrB9s03           5999 	call	_pport_send
   16B3 F1                 6000 	pop	af
   16B4 F1                 6001 	pop	af
   16B5 F1                 6002 	pop	af
                           6003 ;main.c:794: pport_receive( &flags, sizeof( flags ) );
                           6004 ;	genAddrOf
   16B6 21 00 00           6005 	ld	hl,#0x0000
   16B9 39                 6006 	add	hl,sp
   16BA 4D                 6007 	ld	c,l
   16BB 44                 6008 	ld	b,h
                           6009 ;	genIpush
                           6010 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   16BC 21 02 00           6011 	ld	hl,#0x0002
   16BF E5                 6012 	push	hl
                           6013 ;	genIpush
   16C0 C5                 6014 	push	bc
                           6015 ;	genCall
   16C1 CDr4Fs04           6016 	call	_pport_receive
   16C4 F1                 6017 	pop	af
   16C5 F1                 6018 	pop	af
                           6019 ;main.c:799: if ( pport_result != PP_W_ACK )
                           6020 ;	genCmpEq
                           6021 ; genCmpEq: left 2, right 2, result 0
   16C6 FD 21r63s38        6022 	ld	iy,#_pport_result
   16CA FD 7E 00           6023 	ld	a,0(iy)
   16CD B7                 6024 	or	a,a
   16CE 20 07              6025 	jr	NZ,00106$
   16D0 FD 7E 01           6026 	ld	a,1(iy)
   16D3 D6 73              6027 	sub	a,#0x73
   16D5 28 08              6028 	jr	Z,00102$
   16D7                    6029 00106$:
                           6030 ;main.c:801: flags = 0;
                           6031 ;	genAssign
                           6032 ;	AOP_STK for _get_flags_flags_1_1
   16D7 DD 36 FE 00        6033 	ld	-2(ix),#0x00
   16DB DD 36 FF 00        6034 	ld	-1(ix),#0x00
                           6035 ;	genLabel
   16DF                    6036 00102$:
                           6037 ;main.c:803: return flags;
                           6038 ;	genRet
                           6039 ;	AOP_STK for _get_flags_flags_1_1
                           6040 ; Dump of IC_LEFT: type AOP_STK size 2
                           6041 ;	 aop_stk -2
   16DF DD 6E FE           6042 	ld	l,-2(ix)
   16E2 DD 66 FF           6043 	ld	h,-1(ix)
                           6044 ;	genLabel
                           6045 ;	genEndFunction
   16E5 DD F9              6046 	ld	sp,ix
   16E7 DD E1              6047 	pop	ix
   16E9 C9                 6048 	ret
   16EA                    6049 _get_flags_end::
                           6050 ;main.c:806: void update_disks( byte dsk )
                           6051 ;	genLabel
                           6052 ;	genFunction
                           6053 ;	---------------------------------
                           6054 ; Function update_disks
                           6055 ; ---------------------------------
   16EA                    6056 _update_disks_start::
   16EA                    6057 _update_disks:
   16EA DD E5              6058 	push	ix
   16EC DD 21 00 00        6059 	ld	ix,#0
   16F0 DD 39              6060 	add	ix,sp
   16F2 21 B3 FF           6061 	ld	hl,#-77
   16F5 39                 6062 	add	hl,sp
   16F6 F9                 6063 	ld	sp,hl
                           6064 ;main.c:810: char dsk_head[4] = { "A:" };
                           6065 ;	genAddrOf
   16F7 21 08 00           6066 	ld	hl,#0x0008
   16FA 39                 6067 	add	hl,sp
   16FB 4D                 6068 	ld	c,l
   16FC 44                 6069 	ld	b,h
                           6070 ;	genAssign (pointer)
                           6071 ;	isBitvar = 0
   16FD 3E 41              6072 	ld	a,#0x41
   16FF 02                 6073 	ld	(bc),a
                           6074 ;	genPlus
                           6075 ;	genPlusIncr
   1700 59                 6076 	ld	e,c
   1701 50                 6077 	ld	d,b
   1702 13                 6078 	inc	de
                           6079 ;	genAssign (pointer)
                           6080 ;	isBitvar = 0
   1703 3E 3A              6081 	ld	a,#0x3A
   1705 12                 6082 	ld	(de),a
                           6083 ;	genPlus
                           6084 ;	genPlusIncr
   1706 59                 6085 	ld	e,c
   1707 50                 6086 	ld	d,b
   1708 13                 6087 	inc	de
   1709 13                 6088 	inc	de
                           6089 ;	genAssign (pointer)
                           6090 ;	isBitvar = 0
   170A 3E 00              6091 	ld	a,#0x00
   170C 12                 6092 	ld	(de),a
                           6093 ;main.c:811: if ( dsk > 3 )
                           6094 ;	genCmpGt
                           6095 ;	AOP_STK for 
   170D 3E 03              6096 	ld	a,#0x03
   170F DD 96 04           6097 	sub	a,4(ix)
   1712 D2rEDs17           6098 	jp	NC,00108$
                           6099 ;main.c:815: word flags = get_flags();
                           6100 ;	genCall
                           6101 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1715 C5                 6102 	push	bc
   1716 CDr97s16           6103 	call	_get_flags
   1719 54                 6104 	ld	d,h
   171A 5D                 6105 	ld	e,l
   171B C1                 6106 	pop	bc
                           6107 ;	genAssign
                           6108 ;	AOP_STK for _update_disks_flags_2_2
   171C DD 73 B8           6109 	ld	-72(ix),e
   171F DD 72 B9           6110 	ld	-71(ix),d
                           6111 ;main.c:816: for ( i = 0; i < 4; i++ )
                           6112 ;	genAssign
                           6113 ;	AOP_STK for _update_disks_i_2_2
   1722 DD 36 BA 00        6114 	ld	-70(ix),#0x00
                           6115 ;	genLabel
   1726                    6116 00110$:
                           6117 ;	genCmpLt
                           6118 ;	AOP_STK for _update_disks_i_2_2
   1726 DD 7E BA           6119 	ld	a,-70(ix)
   1729 D6 04              6120 	sub	a,#0x04
   172B D2rA8s18           6121 	jp	NC,00114$
                           6122 ;main.c:818: dsk_name[0] = 0;
                           6123 ;	genAddrOf
   172E 21 0C 00           6124 	ld	hl,#0x000C
   1731 39                 6125 	add	hl,sp
                           6126 ;	genAssign (pointer)
                           6127 ;	isBitvar = 0
   1732 55                 6128 	ld	d,l
   1733 5C                 6129 	ld	e,h
   1734 36 00              6130 	ld	(hl),#0x00
                           6131 ;main.c:819: get_dsk_name( i, dsk_name, 0x40 );
                           6132 ;	genIpush
                           6133 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1736 C5                 6134 	push	bc
   1737 21 40 00           6135 	ld	hl,#0x0040
   173A E5                 6136 	push	hl
                           6137 ;	genIpush
   173B 6A                 6138 	ld	l,d
   173C 63                 6139 	ld	h,e
   173D E5                 6140 	push	hl
                           6141 ;	genIpush
                           6142 ;	AOP_STK for _update_disks_i_2_2
   173E DD 7E BA           6143 	ld	a,-70(ix)
   1741 F5                 6144 	push	af
   1742 33                 6145 	inc	sp
                           6146 ;	genCall
   1743 CDr15s16           6147 	call	_get_dsk_name
   1746 F1                 6148 	pop	af
   1747 F1                 6149 	pop	af
   1748 33                 6150 	inc	sp
   1749 C1                 6151 	pop	bc
                           6152 ;main.c:820: dsk_head[0] = 'A' + i;
                           6153 ;	genPlus
                           6154 ;	AOP_STK for _update_disks_i_2_2
                           6155 ;	genPlusIncr
   174A DD 7E BA           6156 	ld	a,-70(ix)
   174D C6 41              6157 	add	a,#0x41
                           6158 ;	genAssign (pointer)
                           6159 ;	isBitvar = 0
   174F 02                 6160 	ld	(bc),a
                           6161 ;main.c:821: text_out_pos_8( dsk_head, 0, 20 + i, 0, 0xff );
                           6162 ;	genPlus
                           6163 ;	AOP_STK for _update_disks_i_2_2
                           6164 ;	AOP_STK for _update_disks_sloc0_1_0
                           6165 ;	genPlusIncr
   1750 DD 7E BA           6166 	ld	a,-70(ix)
   1753 C6 14              6167 	add	a,#0x14
   1755 DD 77 B5           6168 	ld	-75(ix),a
                           6169 ;	genIpush
                           6170 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1758 C5                 6171 	push	bc
   1759 21 00 FF           6172 	ld	hl,#0xFF00
   175C E5                 6173 	push	hl
                           6174 ;	genIpush
                           6175 ;	AOP_STK for _update_disks_sloc0_1_0
   175D DD 7E B5           6176 	ld	a,-75(ix)
   1760 F5                 6177 	push	af
   1761 33                 6178 	inc	sp
                           6179 ;	genIpush
   1762 3E 00              6180 	ld	a,#0x00
   1764 F5                 6181 	push	af
   1765 33                 6182 	inc	sp
                           6183 ;	genIpush
   1766 C5                 6184 	push	bc
                           6185 ;	genCall
   1767 CDr00s00           6186 	call	_text_out_pos_8
   176A F1                 6187 	pop	af
   176B F1                 6188 	pop	af
   176C F1                 6189 	pop	af
   176D C1                 6190 	pop	bc
                           6191 ;main.c:822: display_fn( dsk_name, 2, 20 + i, 25 );
                           6192 ;	genCast
                           6193 ;	AOP_STK for _update_disks_i_2_2
   176E DD 56 BA           6194 	ld	d,-70(ix)
   1771 1E 00              6195 	ld	e,#0x00
                           6196 ;	genPlus
                           6197 ;	AOP_STK for _update_disks_sloc1_1_0
                           6198 ;	genPlusIncr
   1773 7A                 6199 	ld	a,d
   1774 C6 14              6200 	add	a,#0x14
   1776 DD 77 B3           6201 	ld	-77(ix),a
   1779 7B                 6202 	ld	a,e
   177A CE 00              6203 	adc	a,#0x00
   177C DD 77 B4           6204 	ld	-76(ix),a
                           6205 ;	genAddrOf
   177F 21 0C 00           6206 	ld	hl,#0x000C
   1782 39                 6207 	add	hl,sp
   1783 5D                 6208 	ld	e,l
   1784 54                 6209 	ld	d,h
                           6210 ;	genIpush
                           6211 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1785 C5                 6212 	push	bc
   1786 21 19 00           6213 	ld	hl,#0x0019
   1789 E5                 6214 	push	hl
                           6215 ;	genIpush
                           6216 ;	AOP_STK for _update_disks_sloc1_1_0
   178A DD 6E B3           6217 	ld	l,-77(ix)
   178D DD 66 B4           6218 	ld	h,-76(ix)
   1790 E5                 6219 	push	hl
                           6220 ;	genIpush
   1791 21 02 00           6221 	ld	hl,#0x0002
   1794 E5                 6222 	push	hl
                           6223 ;	genIpush
   1795 D5                 6224 	push	de
                           6225 ;	genCall
   1796 CDr5Bs15           6226 	call	_display_fn
   1799 F1                 6227 	pop	af
   179A F1                 6228 	pop	af
   179B F1                 6229 	pop	af
   179C F1                 6230 	pop	af
   179D C1                 6231 	pop	bc
                           6232 ;main.c:823: if ( flags & ( 1 << i ) )
                           6233 ;	genLeftShift
                           6234 ;	AOP_STK for _update_disks_i_2_2
   179E DD 7E BA           6235 	ld	a,-70(ix)
   17A1 3C                 6236 	inc	a
   17A2 F5                 6237 	push	af
   17A3 11 01 00           6238 	ld	de,#0x0001
   17A6 F1                 6239 	pop	af
   17A7 18 04              6240 	jr	00123$
   17A9                    6241 00122$:
   17A9 CB 23              6242 	sla	e
   17AB CB 12              6243 	rl	d
   17AD                    6244 00123$:
   17AD 3D                 6245 	dec	a
   17AE 20 F9              6246 	jr	NZ,00122$
                           6247 ;	genAnd
                           6248 ;	AOP_STK for _update_disks_flags_2_2
   17B0 7B                 6249 	ld	a,e
   17B1 DD A6 B8           6250 	and	a,-72(ix)
   17B4 5F                 6251 	ld	e,a
   17B5 7A                 6252 	ld	a,d
   17B6 DD A6 B9           6253 	and	a,-71(ix)
                           6254 ;	genIfx
   17B9 57                 6255 	ld	d,a
   17BA B3                 6256 	or	a,e
   17BB 28 16              6257 	jr	Z,00102$
                           6258 ;main.c:825: set_attr( 0102, 0, 20 + i, 1 );
                           6259 ;	genIpush
                           6260 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17BD C5                 6261 	push	bc
   17BE 3E 01              6262 	ld	a,#0x01
   17C0 F5                 6263 	push	af
   17C1 33                 6264 	inc	sp
                           6265 ;	genIpush
                           6266 ;	AOP_STK for _update_disks_sloc0_1_0
   17C2 DD 7E B5           6267 	ld	a,-75(ix)
   17C5 F5                 6268 	push	af
   17C6 33                 6269 	inc	sp
                           6270 ;	genIpush
   17C7 21 42 00           6271 	ld	hl,#0x0042
   17CA E5                 6272 	push	hl
                           6273 ;	genCall
   17CB CDr00s00           6274 	call	_set_attr
   17CE F1                 6275 	pop	af
   17CF F1                 6276 	pop	af
   17D0 C1                 6277 	pop	bc
                           6278 ;	genGoto
   17D1 18 14              6279 	jr	00112$
                           6280 ;	genLabel
   17D3                    6281 00102$:
                           6282 ;main.c:829: set_attr( 0104, 0, 20 + i, 1 );
                           6283 ;	genIpush
                           6284 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17D3 C5                 6285 	push	bc
   17D4 3E 01              6286 	ld	a,#0x01
   17D6 F5                 6287 	push	af
   17D7 33                 6288 	inc	sp
                           6289 ;	genIpush
                           6290 ;	AOP_STK for _update_disks_sloc0_1_0
   17D8 DD 7E B5           6291 	ld	a,-75(ix)
   17DB F5                 6292 	push	af
   17DC 33                 6293 	inc	sp
                           6294 ;	genIpush
   17DD 21 44 00           6295 	ld	hl,#0x0044
   17E0 E5                 6296 	push	hl
                           6297 ;	genCall
   17E1 CDr00s00           6298 	call	_set_attr
   17E4 F1                 6299 	pop	af
   17E5 F1                 6300 	pop	af
   17E6 C1                 6301 	pop	bc
                           6302 ;	genLabel
   17E7                    6303 00112$:
                           6304 ;main.c:816: for ( i = 0; i < 4; i++ )
                           6305 ;	genPlus
                           6306 ;	AOP_STK for _update_disks_i_2_2
                           6307 ;	genPlusIncr
   17E7 DD 34 BA           6308 	inc	-70(ix)
                           6309 ;	genGoto
   17EA C3r26s17           6310 	jp	00110$
                           6311 ;	genLabel
   17ED                    6312 00108$:
                           6313 ;main.c:835: word flags = get_flags();
                           6314 ;	genCall
                           6315 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   17ED C5                 6316 	push	bc
   17EE CDr97s16           6317 	call	_get_flags
   17F1 54                 6318 	ld	d,h
   17F2 5D                 6319 	ld	e,l
   17F3 C1                 6320 	pop	bc
                           6321 ;	genAssign
                           6322 ;	AOP_STK for _update_disks_flags_2_6
   17F4 DD 73 B6           6323 	ld	-74(ix),e
   17F7 DD 72 B7           6324 	ld	-73(ix),d
                           6325 ;main.c:836: dsk_name[0] = 0;
                           6326 ;	genAddrOf
   17FA 21 0C 00           6327 	ld	hl,#0x000C
   17FD 39                 6328 	add	hl,sp
   17FE 5D                 6329 	ld	e,l
   17FF 54                 6330 	ld	d,h
                           6331 ;	genAssign (pointer)
                           6332 ;	isBitvar = 0
   1800 3E 00              6333 	ld	a,#0x00
   1802 12                 6334 	ld	(de),a
                           6335 ;main.c:837: get_dsk_name( dsk, dsk_name, 0x40 );
                           6336 ;	genIpush
                           6337 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1803 C5                 6338 	push	bc
   1804 21 40 00           6339 	ld	hl,#0x0040
   1807 E5                 6340 	push	hl
                           6341 ;	genIpush
   1808 D5                 6342 	push	de
                           6343 ;	genIpush
                           6344 ;	AOP_STK for 
   1809 DD 7E 04           6345 	ld	a,4(ix)
   180C F5                 6346 	push	af
   180D 33                 6347 	inc	sp
                           6348 ;	genCall
   180E CDr15s16           6349 	call	_get_dsk_name
   1811 F1                 6350 	pop	af
   1812 F1                 6351 	pop	af
   1813 33                 6352 	inc	sp
   1814 C1                 6353 	pop	bc
                           6354 ;main.c:838: dsk_head[0] = 'A' + dsk;
                           6355 ;	genPlus
                           6356 ;	AOP_STK for 
                           6357 ;	genPlusIncr
   1815 DD 7E 04           6358 	ld	a,4(ix)
   1818 C6 41              6359 	add	a,#0x41
                           6360 ;	genAssign (pointer)
                           6361 ;	isBitvar = 0
   181A 02                 6362 	ld	(bc),a
                           6363 ;main.c:839: text_out_pos_8( dsk_head, 0, 20 + dsk, 0, 0xff );
                           6364 ;	genPlus
                           6365 ;	AOP_STK for 
                           6366 ;	genPlusIncr
   181B DD 7E 04           6367 	ld	a,4(ix)
   181E C6 14              6368 	add	a,#0x14
   1820 5F                 6369 	ld	e,a
                           6370 ;	genIpush
                           6371 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   1821 D5                 6372 	push	de
   1822 21 00 FF           6373 	ld	hl,#0xFF00
   1825 E5                 6374 	push	hl
                           6375 ;	genIpush
   1826 7B                 6376 	ld	a,e
   1827 F5                 6377 	push	af
   1828 33                 6378 	inc	sp
                           6379 ;	genIpush
   1829 3E 00              6380 	ld	a,#0x00
   182B F5                 6381 	push	af
   182C 33                 6382 	inc	sp
                           6383 ;	genIpush
   182D C5                 6384 	push	bc
                           6385 ;	genCall
   182E CDr00s00           6386 	call	_text_out_pos_8
   1831 F1                 6387 	pop	af
   1832 F1                 6388 	pop	af
   1833 F1                 6389 	pop	af
   1834 D1                 6390 	pop	de
                           6391 ;main.c:840: display_fn( dsk_name, 2, 20 + dsk, 25 );
                           6392 ;	genCast
                           6393 ;	AOP_STK for 
   1835 DD 4E 04           6394 	ld	c,4(ix)
   1838 06 00              6395 	ld	b,#0x00
                           6396 ;	genPlus
                           6397 ;	AOP_STK for _update_disks_sloc1_1_0
                           6398 ;	genPlusIncr
   183A 79                 6399 	ld	a,c
   183B C6 14              6400 	add	a,#0x14
   183D DD 77 B3           6401 	ld	-77(ix),a
   1840 78                 6402 	ld	a,b
   1841 CE 00              6403 	adc	a,#0x00
   1843 DD 77 B4           6404 	ld	-76(ix),a
                           6405 ;	genAddrOf
   1846 21 0C 00           6406 	ld	hl,#0x000C
   1849 39                 6407 	add	hl,sp
   184A 55                 6408 	ld	d,l
   184B 4C                 6409 	ld	c,h
                           6410 ;	genIpush
                           6411 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   184C D5                 6412 	push	de
   184D 21 19 00           6413 	ld	hl,#0x0019
   1850 E5                 6414 	push	hl
                           6415 ;	genIpush
                           6416 ;	AOP_STK for _update_disks_sloc1_1_0
   1851 DD 6E B3           6417 	ld	l,-77(ix)
   1854 DD 66 B4           6418 	ld	h,-76(ix)
   1857 E5                 6419 	push	hl
                           6420 ;	genIpush
   1858 21 02 00           6421 	ld	hl,#0x0002
   185B E5                 6422 	push	hl
                           6423 ;	genIpush
   185C 6A                 6424 	ld	l,d
   185D 61                 6425 	ld	h,c
   185E E5                 6426 	push	hl
                           6427 ;	genCall
   185F CDr5Bs15           6428 	call	_display_fn
   1862 F1                 6429 	pop	af
   1863 F1                 6430 	pop	af
   1864 F1                 6431 	pop	af
   1865 F1                 6432 	pop	af
   1866 D1                 6433 	pop	de
                           6434 ;main.c:841: if ( flags & ( 1 << dsk ) )
                           6435 ;	genLeftShift
                           6436 ;	AOP_STK for 
   1867 DD 7E 04           6437 	ld	a,4(ix)
   186A 3C                 6438 	inc	a
   186B F5                 6439 	push	af
   186C 01 01 00           6440 	ld	bc,#0x0001
   186F F1                 6441 	pop	af
   1870 18 04              6442 	jr	00125$
   1872                    6443 00124$:
   1872 CB 21              6444 	sla	c
   1874 CB 10              6445 	rl	b
   1876                    6446 00125$:
   1876 3D                 6447 	dec	a
   1877 20 F9              6448 	jr	NZ,00124$
                           6449 ;	genAnd
                           6450 ;	AOP_STK for _update_disks_flags_2_6
   1879 79                 6451 	ld	a,c
   187A DD A6 B6           6452 	and	a,-74(ix)
   187D 4F                 6453 	ld	c,a
   187E 78                 6454 	ld	a,b
   187F DD A6 B7           6455 	and	a,-73(ix)
                           6456 ;	genIfx
   1882 47                 6457 	ld	b,a
   1883 B1                 6458 	or	a,c
   1884 28 12              6459 	jr	Z,00105$
                           6460 ;main.c:843: set_attr( 0102, 0, 20 + dsk, 1 );
                           6461 ;	genIpush
                           6462 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1886 3E 01              6463 	ld	a,#0x01
   1888 F5                 6464 	push	af
   1889 33                 6465 	inc	sp
                           6466 ;	genIpush
   188A 7B                 6467 	ld	a,e
   188B F5                 6468 	push	af
   188C 33                 6469 	inc	sp
                           6470 ;	genIpush
   188D 21 42 00           6471 	ld	hl,#0x0042
   1890 E5                 6472 	push	hl
                           6473 ;	genCall
   1891 CDr00s00           6474 	call	_set_attr
   1894 F1                 6475 	pop	af
   1895 F1                 6476 	pop	af
                           6477 ;	genGoto
   1896 18 10              6478 	jr	00114$
                           6479 ;	genLabel
   1898                    6480 00105$:
                           6481 ;main.c:847: set_attr( 0104, 0, 20 + dsk, 1 );
                           6482 ;	genIpush
                           6483 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1898 3E 01              6484 	ld	a,#0x01
   189A F5                 6485 	push	af
   189B 33                 6486 	inc	sp
                           6487 ;	genIpush
   189C 7B                 6488 	ld	a,e
   189D F5                 6489 	push	af
   189E 33                 6490 	inc	sp
                           6491 ;	genIpush
   189F 21 44 00           6492 	ld	hl,#0x0044
   18A2 E5                 6493 	push	hl
                           6494 ;	genCall
   18A3 CDr00s00           6495 	call	_set_attr
   18A6 F1                 6496 	pop	af
   18A7 F1                 6497 	pop	af
                           6498 ;	genLabel
   18A8                    6499 00114$:
                           6500 ;	genEndFunction
   18A8 DD F9              6501 	ld	sp,ix
   18AA DD E1              6502 	pop	ix
   18AC C9                 6503 	ret
   18AD                    6504 _update_disks_end::
                           6505 ;main.c:852: void update_rom()
                           6506 ;	genLabel
                           6507 ;	genFunction
                           6508 ;	---------------------------------
                           6509 ; Function update_rom
                           6510 ; ---------------------------------
   18AD                    6511 _update_rom_start::
   18AD                    6512 _update_rom:
                           6513 ;main.c:854: word flags = get_flags();
                           6514 ;	genCall
                           6515 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18AD CDr97s16           6516 	call	_get_flags
   18B0 44                 6517 	ld	b,h
   18B1 4D                 6518 	ld	c,l
                           6519 ;	genAssign
                           6520 ;	(registers are the same)
                           6521 ;main.c:855: text_out_pos_8( flags & CFG_FLG_STROM1 ? "ROM1" : "ROM0", 28, 23, 0, 0xff );
                           6522 ;	genAnd
   18B2 79                 6523 	ld	a,c
   18B3 E6 20              6524 	and	a,#0x20
   18B5 28 07              6525 	jr	Z,00103$
                           6526 ;	genAddrOf
   18B7 21rD3s18           6527 	ld	hl,#__str_20
   18BA 4D                 6528 	ld	c,l
   18BB 44                 6529 	ld	b,h
                           6530 ;	genGoto
   18BC 18 05              6531 	jr	00104$
                           6532 ;	genLabel
   18BE                    6533 00103$:
                           6534 ;	genAddrOf
   18BE 21rD8s18           6535 	ld	hl,#__str_21
   18C1 4D                 6536 	ld	c,l
   18C2 44                 6537 	ld	b,h
                           6538 ;	genLabel
   18C3                    6539 00104$:
                           6540 ;	genIpush
                           6541 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18C3 21 00 FF           6542 	ld	hl,#0xFF00
   18C6 E5                 6543 	push	hl
                           6544 ;	genIpush
   18C7 21 1C 17           6545 	ld	hl,#0x171C
   18CA E5                 6546 	push	hl
                           6547 ;	genIpush
   18CB C5                 6548 	push	bc
                           6549 ;	genCall
   18CC CDr00s00           6550 	call	_text_out_pos_8
   18CF F1                 6551 	pop	af
   18D0 F1                 6552 	pop	af
   18D1 F1                 6553 	pop	af
                           6554 ;	genLabel
                           6555 ;	genEndFunction
   18D2 C9                 6556 	ret
   18D3                    6557 _update_rom_end::
   18D3                    6558 __str_20:
   18D3 52 4F 4D 31        6559 	.ascii "ROM1"
   18D7 00                 6560 	.db 0x00
   18D8                    6561 __str_21:
   18D8 52 4F 4D 30        6562 	.ascii "ROM0"
   18DC 00                 6563 	.db 0x00
                           6564 ;main.c:858: void init_screen()
                           6565 ;	genLabel
                           6566 ;	genFunction
                           6567 ;	---------------------------------
                           6568 ; Function init_screen
                           6569 ; ---------------------------------
   18DD                    6570 _init_screen_start::
   18DD                    6571 _init_screen:
                           6572 ;main.c:860: clrscr();
                           6573 ;	genCall
                           6574 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18DD CDrC3s0D           6575 	call	_clrscr
                           6576 ;main.c:862: set_attr( 0104, 0, 0, 32 );
                           6577 ;	genIpush
                           6578 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18E0 21 00 20           6579 	ld	hl,#0x2000
   18E3 E5                 6580 	push	hl
                           6581 ;	genIpush
   18E4 21 44 00           6582 	ld	hl,#0x0044
   18E7 E5                 6583 	push	hl
                           6584 ;	genCall
   18E8 CDr00s00           6585 	call	_set_attr
   18EB F1                 6586 	pop	af
   18EC F1                 6587 	pop	af
                           6588 ;main.c:863: text_out_pos_8( "-=Syd's Speccy2007 boot-loader=-", 0, 0, 0, 0xff );
                           6589 ;	genIpush
                           6590 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   18ED 21 00 FF           6591 	ld	hl,#0xFF00
   18F0 E5                 6592 	push	hl
                           6593 ;	genIpush
   18F1 21 00 00           6594 	ld	hl,#0x0000
   18F4 E5                 6595 	push	hl
                           6596 ;	genIpush
   18F5 21r38s19           6597 	ld	hl,#__str_22
   18F8 E5                 6598 	push	hl
                           6599 ;	genCall
   18F9 CDr00s00           6600 	call	_text_out_pos_8
   18FC F1                 6601 	pop	af
   18FD F1                 6602 	pop	af
   18FE F1                 6603 	pop	af
                           6604 ;main.c:898: __endasm;
                           6605 ;	genInline
                           6606 	
   18FF 21 40 42           6607 		ld hl, #0x4240
   1902 E5                 6608 		push hl
   1903 D1                 6609 		pop de
   1904 3E FF              6610 		ld a, #0xff
   1906 77                 6611 		ld( hl ), a
   1907 13                 6612 		inc de
   1908 01 1F 00           6613 		ld bc, #0x1f
   190B ED B0              6614 		ldir
   190D 21 40 44           6615 		ld hl, #0x4440
   1910 E5                 6616 		push hl
   1911 D1                 6617 		pop de
   1912 3E FF              6618 		ld a, #0xff
   1914 77                 6619 		ld( hl ), a
   1915 13                 6620 		inc de
   1916 01 1F 00           6621 		ld bc, #0x1f
   1919 ED B0              6622 		ldir
   191B 21 60 52           6623 		ld hl, #0x5260
   191E E5                 6624 		push hl
   191F D1                 6625 		pop de
   1920 3E FF              6626 		ld a, #0xff
   1922 77                 6627 		ld( hl ), a
   1923 13                 6628 		inc de
   1924 01 1F 00           6629 		ld bc, #0x1f
   1927 ED B0              6630 		ldir
   1929 21 60 54           6631 		ld hl, #0x5460
   192C E5                 6632 		push hl
   192D D1                 6633 		pop de
   192E 3E FF              6634 		ld a, #0xff
   1930 77                 6635 		ld( hl ), a
   1931 13                 6636 		inc de
   1932 01 1F 00           6637 		ld bc, #0x1f
   1935 ED B0              6638 		ldir
                           6639 		
                           6640 ;	genLabel
                           6641 ;	genEndFunction
   1937 C9                 6642 	ret
   1938                    6643 _init_screen_end::
   1938                    6644 __str_22:
   1938 2D 3D 53 79 64 27  6645 	.ascii "-=Syd's Speccy2007 boot-loader=-"
        73 20 53 70 65 63
        63 79 32 30 30 37
        20 62 6F 6F 74 2D
        6C 6F 61 64 65 72
        3D 2D
   1958 00                 6646 	.db 0x00
                           6647 ;main.c:901: void main()
                           6648 ;	genLabel
                           6649 ;	genFunction
                           6650 ;	---------------------------------
                           6651 ; Function main
                           6652 ; ---------------------------------
   1959                    6653 _main_start::
   1959                    6654 _main:
   1959 DD E5              6655 	push	ix
   195B DD 21 00 00        6656 	ld	ix,#0
   195F DD 39              6657 	add	ix,sp
   1961 21 A2 FD           6658 	ld	hl,#-606
   1964 39                 6659 	add	hl,sp
   1965 F9                 6660 	ld	sp,hl
                           6661 ;main.c:904: strcpy( tap_path, "boot.tap" );
                           6662 ;	genAddrOf
   1966 21 0E 02           6663 	ld	hl,#0x020E
   1969 39                 6664 	add	hl,sp
   196A 4D                 6665 	ld	c,l
   196B 44                 6666 	ld	b,h
                           6667 ;	genIpush
                           6668 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   196C 21rF4s25           6669 	ld	hl,#__str_23
   196F E5                 6670 	push	hl
                           6671 ;	genIpush
   1970 C5                 6672 	push	bc
                           6673 ;	genCall
   1971 CDr00s00           6674 	call	_strcpy
   1974 F1                 6675 	pop	af
   1975 F1                 6676 	pop	af
                           6677 ;main.c:906: init_screen();
                           6678 ;	genCall
                           6679 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1976 CDrDDs18           6680 	call	_init_screen
                           6681 ;main.c:908: pport_open();
                           6682 ;	genCall
                           6683 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1979 CDr07s05           6684 	call	_pport_open
                           6685 ;main.c:910: strcpy( path, "" );
                           6686 ;	genIpush
                           6687 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   197C 21rFDs25           6688 	ld	hl,#__str_24
   197F E5                 6689 	push	hl
                           6690 ;	genIpush
   1980 21r22s38           6691 	ld	hl,#_path
   1983 E5                 6692 	push	hl
                           6693 ;	genCall
   1984 CDr00s00           6694 	call	_strcpy
   1987 F1                 6695 	pop	af
   1988 F1                 6696 	pop	af
                           6697 ;main.c:911: read_dir();
                           6698 ;	genCall
                           6699 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1989 CDrDEs0B           6700 	call	_read_dir
                           6701 ;main.c:913: show_table();
                           6702 ;	genCall
                           6703 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   198C CDrA8s06           6704 	call	_show_table
                           6705 ;main.c:914: show_sel();
                           6706 ;	genCall
                           6707 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   198F CDr2Es15           6708 	call	_show_sel
                           6709 ;main.c:915: update_disks( 4 );
                           6710 ;	genIpush
                           6711 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1992 3E 04              6712 	ld	a,#0x04
   1994 F5                 6713 	push	af
   1995 33                 6714 	inc	sp
                           6715 ;	genCall
   1996 CDrEAs16           6716 	call	_update_disks
   1999 33                 6717 	inc	sp
                           6718 ;main.c:918: while ( true )
                           6719 ;	genAddrOf
                           6720 ;	AOP_EXSTK for _main_sloc2_1_0
   199A 21 37 00           6721 	ld	hl,#0x0037
   199D 39                 6722 	add	hl,sp
   199E FD 21 06 00        6723 	ld	iy,#6
   19A2 FD 39              6724 	add	iy,sp
   19A4 FD 75 00           6725 	ld	0(iy),l
   19A7 FD 74 01           6726 	ld	1(iy),h
                           6727 ;	genPlus
                           6728 ;	AOP_EXSTK for _main_sloc2_1_0
                           6729 ;	AOP_EXSTK for _main_sloc1_1_0
                           6730 ;	genPlusIncr
                           6731 ;	Shift into pair idx 0
   19AA 21 08 00           6732 	ld	hl,#8
   19AD 39                 6733 	add	hl,sp
   19AE FD 7E 00           6734 	ld	a,0(iy)
   19B1 C6 02              6735 	add	a,#0x02
   19B3 77                 6736 	ld	(hl),a
   19B4 FD 7E 01           6737 	ld	a,1(iy)
   19B7 CE 00              6738 	adc	a,#0x00
   19B9 23                 6739 	inc	hl
   19BA 77                 6740 	ld	(hl),a
                           6741 ;	genAddrOf
                           6742 ;	AOP_EXSTK for _main_sloc0_1_0
   19BB 21 17 00           6743 	ld	hl,#0x0017
   19BE 39                 6744 	add	hl,sp
   19BF FD 21 0A 00        6745 	ld	iy,#10
   19C3 FD 39              6746 	add	iy,sp
   19C5 FD 75 00           6747 	ld	0(iy),l
   19C8 FD 74 01           6748 	ld	1(iy),h
                           6749 ;	genLabel
   19CB                    6750 00217$:
                           6751 ;main.c:920: byte key = getkey();
                           6752 ;	genCall
                           6753 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   19CB CDrF2s01           6754 	call	_getkey
   19CE 5D                 6755 	ld	e,l
                           6756 ;	genAssign
                           6757 ;	AOP_STK for _main_key_2_2
   19CF DD 73 AF           6758 	ld	-81(ix),e
                           6759 ;main.c:922: byte *name = files[ files_sel ].name;
                           6760 ;	genMult
   19D2 ED 5Br04s38        6761 	ld	de,(_files_sel)
   19D6 6B                 6762 	ld	l,e
   19D7 62                 6763 	ld	h,d
   19D8 29                 6764 	add	hl,hl
   19D9 19                 6765 	add	hl,de
   19DA 29                 6766 	add	hl,hl
   19DB 19                 6767 	add	hl,de
   19DC 29                 6768 	add	hl,hl
   19DD 55                 6769 	ld	d,l
   19DE 5C                 6770 	ld	e,h
                           6771 ;	genPlus
   19DF 3Er00              6772 	ld	a,#<_files
   19E1 82                 6773 	add	a,d
   19E2 57                 6774 	ld	d,a
   19E3 3Es00              6775 	ld	a,#>_files
   19E5 8B                 6776 	adc	a,e
   19E6 5F                 6777 	ld	e,a
                           6778 ;	genPlus
                           6779 ;	AOP_STK for _main_name_2_2
                           6780 ;	genPlusIncr
   19E7 7A                 6781 	ld	a,d
   19E8 C6 01              6782 	add	a,#0x01
   19EA DD 77 AD           6783 	ld	-83(ix),a
   19ED 7B                 6784 	ld	a,e
   19EE CE 00              6785 	adc	a,#0x00
   19F0 DD 77 AE           6786 	ld	-82(ix),a
                           6787 ;main.c:925: if ( key >= 0x08 && key <= 0x0b && files_size > 0 )
                           6788 ;	genCmpLt
                           6789 ;	AOP_STK for _main_key_2_2
   19F3 DD 7E AF           6790 	ld	a,-81(ix)
   19F6 D6 08              6791 	sub	a,#0x08
   19F8 DAr7Cs1A           6792 	jp	C,00212$
                           6793 ;	genCmpGt
                           6794 ;	AOP_STK for _main_key_2_2
   19FB 3E 0B              6795 	ld	a,#0x0B
   19FD DD 96 AF           6796 	sub	a,-81(ix)
   1A00 DAr7Cs1A           6797 	jp	C,00212$
                           6798 ;	genCmpGt
   1A03 3E 00              6799 	ld	a,#0x00
   1A05 FD 21r00s38        6800 	ld	iy,#_files_size
   1A09 FD 96 00           6801 	sub	a,0(iy)
   1A0C 3E 00              6802 	ld	a,#0x00
   1A0E FD 9E 01           6803 	sbc	a,1(iy)
   1A11 F2r7Cs1A           6804 	jp	P,00212$
                           6805 ;main.c:929: hide_sel();
                           6806 ;	genCall
                           6807 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A14 CDr16s15           6808 	call	_hide_sel
                           6809 ;main.c:931: if ( key == 0x08 ) files_sel -= FILES_PER_ROW;
                           6810 ;	genCmpEq
                           6811 ;	AOP_STK for _main_key_2_2
                           6812 ; genCmpEq: left 1, right 1, result 0
   1A17 DD 7E AF           6813 	ld	a,-81(ix)
   1A1A D6 08              6814 	sub	a,#0x08
   1A1C 28 02              6815 	jr	Z,00286$
   1A1E 18 0E              6816 	jr	00110$
   1A20                    6817 00286$:
                           6818 ;	genMinus
                           6819 ;	Shift into pair idx 0
   1A20 21r04s38           6820 	ld	hl,#_files_sel
   1A23 7E                 6821 	ld	a,(hl)
   1A24 C6 F0              6822 	add	a,#0xF0
   1A26 77                 6823 	ld	(hl),a
   1A27 23                 6824 	inc	hl
   1A28 7E                 6825 	ld	a,(hl)
   1A29 CE FF              6826 	adc	a,#0xFF
   1A2B 77                 6827 	ld	(hl),a
                           6828 ;	genGoto
   1A2C 18 48              6829 	jr	00111$
                           6830 ;	genLabel
   1A2E                    6831 00110$:
                           6832 ;main.c:932: else if ( key == 0x09 ) files_sel += FILES_PER_ROW;
                           6833 ;	genCmpEq
                           6834 ;	AOP_STK for _main_key_2_2
                           6835 ; genCmpEq: left 1, right 1, result 0
   1A2E DD 7E AF           6836 	ld	a,-81(ix)
   1A31 D6 09              6837 	sub	a,#0x09
   1A33 28 02              6838 	jr	Z,00288$
   1A35 18 18              6839 	jr	00107$
   1A37                    6840 00288$:
                           6841 ;	genPlus
                           6842 ;	genPlusIncr
                           6843 ;	Shift into pair idx 0
   1A37 21r04s38           6844 	ld	hl,#_files_sel
   1A3A 7E                 6845 	ld	a,(hl)
   1A3B C6 10              6846 	add	a,#0x10
   1A3D 23                 6847 	inc	hl
   1A3E 2B                 6848 	dec	hl
                           6849 ;	Addition result is in same register as operand of next addition.
   1A3F C5                 6850 	push	bc
   1A40 4F                 6851 	ld	c, a
   1A41 23                 6852 	inc	hl
   1A42 7E                 6853 	ld	a, (hl)
   1A43 47                 6854 	ld	b, a
   1A44 79                 6855 	ld	a, c
   1A45 2B                 6856 	dec	hl
   1A46 77                 6857 	ld	(hl), a
   1A47 78                 6858 	ld	a, b
   1A48 C1                 6859 	pop	bc
   1A49 CE 00              6860 	adc	a,#0x00
   1A4B 23                 6861 	inc	hl
   1A4C 77                 6862 	ld	(hl),a
                           6863 ;	genGoto
   1A4D 18 27              6864 	jr	00111$
                           6865 ;	genLabel
   1A4F                    6866 00107$:
                           6867 ;main.c:933: else if ( key == 0x0a ) files_sel++;
                           6868 ;	genCmpEq
                           6869 ;	AOP_STK for _main_key_2_2
                           6870 ; genCmpEq: left 1, right 1, result 0
   1A4F DD 7E AF           6871 	ld	a,-81(ix)
   1A52 D6 0A              6872 	sub	a,#0x0A
   1A54 28 02              6873 	jr	Z,00290$
   1A56 18 0E              6874 	jr	00104$
   1A58                    6875 00290$:
                           6876 ;	genPlus
                           6877 ;	genPlusIncr
   1A58 FD 21r04s38        6878 	ld	iy,#_files_sel
   1A5C FD 34 00           6879 	inc	0(iy)
   1A5F 20 03              6880 	jr	NZ,00291$
   1A61 FD 34 01           6881 	inc	1(iy)
   1A64                    6882 00291$:
                           6883 ;	genGoto
   1A64 18 10              6884 	jr	00111$
                           6885 ;	genLabel
   1A66                    6886 00104$:
                           6887 ;main.c:934: else if ( key == 0x0b ) files_sel--;
                           6888 ;	genCmpEq
                           6889 ;	AOP_STK for _main_key_2_2
                           6890 ; genCmpEq: left 1, right 1, result 0
   1A66 DD 7E AF           6891 	ld	a,-81(ix)
   1A69 D6 0B              6892 	sub	a,#0x0B
   1A6B 28 02              6893 	jr	Z,00293$
   1A6D 18 07              6894 	jr	00111$
   1A6F                    6895 00293$:
                           6896 ;	genMinus
   1A6F 2Ar04s38           6897 	ld	hl,(_files_sel)
   1A72 2B                 6898 	dec	hl
   1A73 22r04s38           6899 	ld	(_files_sel),hl
                           6900 ;	genLabel
   1A76                    6901 00111$:
                           6902 ;main.c:936: show_sel();
                           6903 ;	genCall
                           6904 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1A76 CDr2Es15           6905 	call	_show_sel
                           6906 ;	genGoto
   1A79 C3rCBs19           6907 	jp	00217$
                           6908 ;	genLabel
   1A7C                    6909 00212$:
                           6910 ;main.c:939: else if ( key == 0x0d )
                           6911 ;	genCmpEq
                           6912 ;	AOP_STK for _main_key_2_2
                           6913 ; genCmpEq: left 1, right 1, result 0
   1A7C DD 7E AF           6914 	ld	a,-81(ix)
   1A7F D6 0D              6915 	sub	a,#0x0D
   1A81 28 03              6916 	jr	Z,00295$
   1A83 C3r34s1F           6917 	jp	00209$
   1A86                    6918 00295$:
                           6919 ;main.c:941: if (( files[ files_sel ].attr & AM_DIR ) )
                           6920 ;	genMult
   1A86 ED 5Br04s38        6921 	ld	de,(_files_sel)
   1A8A 6B                 6922 	ld	l,e
   1A8B 62                 6923 	ld	h,d
   1A8C 29                 6924 	add	hl,hl
   1A8D 19                 6925 	add	hl,de
   1A8E 29                 6926 	add	hl,hl
   1A8F 19                 6927 	add	hl,de
   1A90 29                 6928 	add	hl,hl
   1A91 5D                 6929 	ld	e,l
   1A92 54                 6930 	ld	d,h
                           6931 ;	genPlus
   1A93 21r00s00           6932 	ld	hl,#_files
   1A96 19                 6933 	add	hl,de
   1A97 5D                 6934 	ld	e,l
   1A98 54                 6935 	ld	d,h
                           6936 ;	genPointerGet
   1A99 1A                 6937 	ld	a,(de)
                           6938 ;	genAnd
   1A9A 5F                 6939 	ld	e,a
   1A9B E6 10              6940 	and	a,#0x10
   1A9D CAr93s1C           6941 	jp	Z,00152$
                           6942 ;main.c:943: hide_sel();
                           6943 ;	genCall
                           6944 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AA0 CDr16s15           6945 	call	_hide_sel
                           6946 ;main.c:945: if ( strcmp( name, ".." ) == 0 )
                           6947 ;	genIpush
                           6948 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1AA3 21rFEs25           6949 	ld	hl,#__str_25
   1AA6 E5                 6950 	push	hl
                           6951 ;	genIpush
                           6952 ;	AOP_STK for _main_name_2_2
   1AA7 DD 6E AD           6953 	ld	l,-83(ix)
   1AAA DD 66 AE           6954 	ld	h,-82(ix)
   1AAD E5                 6955 	push	hl
                           6956 ;	genCall
   1AAE CDr00s00           6957 	call	_strcmp
   1AB1 54                 6958 	ld	d,h
   1AB2 5D                 6959 	ld	e,l
   1AB3 F1                 6960 	pop	af
   1AB4 F1                 6961 	pop	af
                           6962 ;	genIfx
   1AB5 7B                 6963 	ld	a,e
   1AB6 B2                 6964 	or	a,d
   1AB7 C2rFFs1B           6965 	jp	NZ,00129$
                           6966 ;main.c:947: byte i = strlen( path );
                           6967 ;	genIpush
                           6968 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1ABA 21r22s38           6969 	ld	hl,#_path
   1ABD E5                 6970 	push	hl
                           6971 ;	genCall
   1ABE CDr00s00           6972 	call	_strlen
   1AC1 54                 6973 	ld	d,h
   1AC2 5D                 6974 	ld	e,l
   1AC3 F1                 6975 	pop	af
                           6976 ;	genCast
                           6977 ;	AOP_STK for _main_i_5_6
   1AC4 DD 73 AC           6978 	ld	-84(ix),e
                           6979 ;main.c:949: if ( i != 0 )
                           6980 ;	genIfx
                           6981 ;	AOP_STK for _main_i_5_6
   1AC7 AF                 6982 	xor	a,a
   1AC8 DD B6 AC           6983 	or	a,-84(ix)
   1ACB CAr8Ds1C           6984 	jp	Z,00130$
                           6985 ;main.c:951: i--;
                           6986 ;	genMinus
                           6987 ;	AOP_STK for _main_i_5_6
   1ACE DD 35 AC           6988 	dec	-84(ix)
                           6989 ;main.c:952: path[i] = 0;
                           6990 ;	genPlus
                           6991 ;	AOP_STK for _main_i_5_6
   1AD1 3Er22              6992 	ld	a,#<_path
   1AD3 DD 86 AC           6993 	add	a,-84(ix)
   1AD6 57                 6994 	ld	d,a
   1AD7 3Es38              6995 	ld	a,#>_path
   1AD9 CE 00              6996 	adc	a,#0x00
   1ADB 5F                 6997 	ld	e,a
                           6998 ;	genAssign (pointer)
                           6999 ;	isBitvar = 0
   1ADC 6A                 7000 	ld	l,d
   1ADD 63                 7001 	ld	h,e
   1ADE 36 00              7002 	ld	(hl),#0x00
                           7003 ;main.c:954: while ( i != 0 && path[i - 1] != '/' ) i--;
                           7004 ;	genLabel
   1AE0                    7005 00113$:
                           7006 ;	genIfx
                           7007 ;	AOP_STK for _main_i_5_6
   1AE0 AF                 7008 	xor	a,a
   1AE1 DD B6 AC           7009 	or	a,-84(ix)
   1AE4 28 1B              7010 	jr	Z,00115$
                           7011 ;	genMinus
                           7012 ;	AOP_STK for _main_i_5_6
   1AE6 DD 7E AC           7013 	ld	a,-84(ix)
   1AE9 C6 FF              7014 	add	a,#0xFF
                           7015 ;	genPlus
   1AEB 5F                 7016 	ld	e, a
   1AEC C6r22              7017 	add	a,#<_path
   1AEE 57                 7018 	ld	d,a
   1AEF 3Es38              7019 	ld	a,#>_path
   1AF1 CE 00              7020 	adc	a,#0x00
   1AF3 4F                 7021 	ld	c,a
                           7022 ;	genPointerGet
   1AF4 6A                 7023 	ld	l,d
   1AF5 61                 7024 	ld	h,c
   1AF6 56                 7025 	ld	d,(hl)
                           7026 ;	genCmpEq
                           7027 ; genCmpEq: left 1, right 1, result 0
   1AF7 7A                 7028 	ld	a,d
   1AF8 D6 2F              7029 	sub	a,#0x2F
   1AFA 28 05              7030 	jr	Z,00115$
                           7031 ;	genAssign
                           7032 ;	(registers are the same)
                           7033 ;	genAssign
                           7034 ;	AOP_STK for _main_i_5_6
   1AFC DD 73 AC           7035 	ld	-84(ix),e
                           7036 ;	genGoto
   1AFF 18 DF              7037 	jr	00113$
                           7038 ;	genLabel
   1B01                    7039 00115$:
                           7040 ;main.c:955: strcpy( dir_name, &path[i] );
                           7041 ;	genPlus
                           7042 ;	AOP_STK for _main_i_5_6
   1B01 3Er22              7043 	ld	a,#<_path
   1B03 DD 86 AC           7044 	add	a,-84(ix)
   1B06 4F                 7045 	ld	c,a
   1B07 3Es38              7046 	ld	a,#>_path
   1B09 CE 00              7047 	adc	a,#0x00
   1B0B 47                 7048 	ld	b,a
                           7049 ;	genAddrOf
   1B0C 21 FD 01           7050 	ld	hl,#0x01FD
   1B0F 39                 7051 	add	hl,sp
   1B10 5D                 7052 	ld	e,l
   1B11 54                 7053 	ld	d,h
                           7054 ;	genIpush
                           7055 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1B12 C5                 7056 	push	bc
                           7057 ;	genIpush
   1B13 D5                 7058 	push	de
                           7059 ;	genCall
   1B14 CDr00s00           7060 	call	_strcpy
   1B17 F1                 7061 	pop	af
   1B18 F1                 7062 	pop	af
                           7063 ;main.c:957: path[i] = 0;
                           7064 ;	genPlus
                           7065 ;	AOP_STK for _main_i_5_6
   1B19 3Er22              7066 	ld	a,#<_path
   1B1B DD 86 AC           7067 	add	a,-84(ix)
   1B1E 4F                 7068 	ld	c,a
   1B1F 3Es38              7069 	ld	a,#>_path
   1B21 CE 00              7070 	adc	a,#0x00
   1B23 47                 7071 	ld	b,a
                           7072 ;	genAssign (pointer)
                           7073 ;	isBitvar = 0
   1B24 3E 00              7074 	ld	a,#0x00
   1B26 02                 7075 	ld	(bc),a
                           7076 ;main.c:958: read_dir();
                           7077 ;	genCall
                           7078 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1B27 CDrDEs0B           7079 	call	_read_dir
                           7080 ;main.c:960: for ( files_sel = 0; files_sel < files_size; files_sel++ )
                           7081 ;	genAssign
   1B2A FD 21r04s38        7082 	ld	iy,#_files_sel
   1B2E FD 36 00 00        7083 	ld	0(iy),#0x00
   1B32 FD 36 01 00        7084 	ld	1(iy),#0x00
                           7085 ;	genLabel
   1B36                    7086 00118$:
                           7087 ;	genCmpLt
   1B36 FD 21r04s38        7088 	ld	iy,#_files_sel
   1B3A FD 7E 00           7089 	ld	a,0(iy)
   1B3D FD 21r00s38        7090 	ld	iy,#_files_size
   1B41 FD 96 00           7091 	sub	a,0(iy)
   1B44 FD 21r04s38        7092 	ld	iy,#_files_sel
   1B48 FD 7E 01           7093 	ld	a,1(iy)
   1B4B FD 21r00s38        7094 	ld	iy,#_files_size
   1B4F FD 9E 01           7095 	sbc	a,1(iy)
   1B52 F2r8Bs1B           7096 	jp	P,00121$
                           7097 ;main.c:961: if ( strcmp( files[files_sel].name, dir_name ) == 0 )
                           7098 ;	genAddrOf
   1B55 21 FD 01           7099 	ld	hl,#0x01FD
   1B58 39                 7100 	add	hl,sp
   1B59 4D                 7101 	ld	c,l
   1B5A 44                 7102 	ld	b,h
                           7103 ;	genMult
   1B5B ED 5Br04s38        7104 	ld	de,(_files_sel)
   1B5F 6B                 7105 	ld	l,e
   1B60 62                 7106 	ld	h,d
   1B61 29                 7107 	add	hl,hl
   1B62 19                 7108 	add	hl,de
   1B63 29                 7109 	add	hl,hl
   1B64 19                 7110 	add	hl,de
   1B65 29                 7111 	add	hl,hl
   1B66 5D                 7112 	ld	e,l
   1B67 54                 7113 	ld	d,h
                           7114 ;	genPlus
   1B68 21r00s00           7115 	ld	hl,#_files
   1B6B 19                 7116 	add	hl,de
   1B6C 5D                 7117 	ld	e,l
   1B6D 54                 7118 	ld	d,h
                           7119 ;	genPlus
                           7120 ;	genPlusIncr
   1B6E 13                 7121 	inc	de
                           7122 ;	genIpush
                           7123 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1B6F C5                 7124 	push	bc
                           7125 ;	genIpush
   1B70 D5                 7126 	push	de
                           7127 ;	genCall
   1B71 CDr00s00           7128 	call	_strcmp
   1B74 44                 7129 	ld	b,h
   1B75 4D                 7130 	ld	c,l
   1B76 F1                 7131 	pop	af
   1B77 F1                 7132 	pop	af
                           7133 ;	genIfx
   1B78 79                 7134 	ld	a,c
   1B79 B0                 7135 	or	a,b
   1B7A 28 0F              7136 	jr	Z,00121$
                           7137 ;main.c:960: for ( files_sel = 0; files_sel < files_size; files_sel++ )
                           7138 ;	genPlus
                           7139 ;	genPlusIncr
   1B7C FD 21r04s38        7140 	ld	iy,#_files_sel
   1B80 FD 34 00           7141 	inc	0(iy)
   1B83 20 03              7142 	jr	NZ,00298$
   1B85 FD 34 01           7143 	inc	1(iy)
   1B88                    7144 00298$:
                           7145 ;	genGoto
   1B88 C3r36s1B           7146 	jp	00118$
                           7147 ;	genLabel
   1B8B                    7148 00121$:
                           7149 ;main.c:963: if (( files_table_start + FILES_PER_ROW * 2 - 1 ) < files_sel )
                           7150 ;	genPlus
                           7151 ;	genPlusIncr
   1B8B FD 21r02s38        7152 	ld	iy,#_files_table_start
   1B8F FD 7E 00           7153 	ld	a,0(iy)
   1B92 C6 1F              7154 	add	a,#0x1F
   1B94 4F                 7155 	ld	c,a
   1B95 FD 7E 01           7156 	ld	a,1(iy)
   1B98 CE 00              7157 	adc	a,#0x00
   1B9A 47                 7158 	ld	b,a
                           7159 ;	genCmpLt
   1B9B 79                 7160 	ld	a,c
   1B9C FD 21r04s38        7161 	ld	iy,#_files_sel
   1BA0 FD 96 00           7162 	sub	a,0(iy)
   1BA3 78                 7163 	ld	a,b
   1BA4 FD 9E 01           7164 	sbc	a,1(iy)
   1BA7 F2rB7s1B           7165 	jp	P,00123$
                           7166 ;main.c:965: files_table_start = files_sel;
                           7167 ;	genAssign
   1BAA 2Ar04s38           7168 	ld	hl,(_files_sel)
   1BAD FD 21r02s38        7169 	ld	iy,#_files_table_start
   1BB1 FD 75 00           7170 	ld	0(iy),l
   1BB4 FD 74 01           7171 	ld	1(iy),h
                           7172 ;	genLabel
   1BB7                    7173 00123$:
                           7174 ;main.c:968: sely = (( files_sel - files_table_start ) % FILES_PER_ROW ) + 3;
                           7175 ;	genMinus
                           7176 ;	Shift into pair idx 0
   1BB7 21r02s38           7177 	ld	hl,#_files_table_start
   1BBA FD 21r04s38        7178 	ld	iy,#_files_sel
   1BBE FD 7E 00           7179 	ld	a,0(iy)
   1BC1 96                 7180 	sub	a,(hl)
   1BC2 4F                 7181 	ld	c,a
   1BC3 FD 7E 01           7182 	ld	a,1(iy)
   1BC6 23                 7183 	inc	hl
   1BC7 9E                 7184 	sbc	a,(hl)
   1BC8 47                 7185 	ld	b,a
                           7186 ;	genIpush
                           7187 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1BC9 C5                 7188 	push	bc
   1BCA 21 10 00           7189 	ld	hl,#0x0010
   1BCD E5                 7190 	push	hl
                           7191 ;	genIpush
   1BCE C5                 7192 	push	bc
                           7193 ;	genCall
   1BCF CDr00s00           7194 	call	__modsint_rrx_s
   1BD2 54                 7195 	ld	d,h
   1BD3 5D                 7196 	ld	e,l
   1BD4 F1                 7197 	pop	af
   1BD5 F1                 7198 	pop	af
   1BD6 C1                 7199 	pop	bc
                           7200 ;	genCast
                           7201 ;	genPlus
                           7202 ;	genPlusIncr
                           7203 ;	Shift into pair idx 0
   1BD7 21r07s38           7204 	ld	hl,#_sely
   1BDA 7B                 7205 	ld	a,e
   1BDB C6 03              7206 	add	a,#0x03
   1BDD 77                 7207 	ld	(hl),a
                           7208 ;main.c:969: selx = (( files_sel - files_table_start ) / FILES_PER_ROW ) * 16 + 1;
                           7209 ;	genIpush
                           7210 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1BDE 21 10 00           7211 	ld	hl,#0x0010
   1BE1 E5                 7212 	push	hl
                           7213 ;	genIpush
   1BE2 C5                 7214 	push	bc
                           7215 ;	genCall
   1BE3 CDr00s00           7216 	call	__divsint_rrx_s
   1BE6 44                 7217 	ld	b,h
   1BE7 4D                 7218 	ld	c,l
   1BE8 F1                 7219 	pop	af
   1BE9 F1                 7220 	pop	af
                           7221 ;	genCast
                           7222 ;	genLeftShift
   1BEA 79                 7223 	ld	a,c
   1BEB 07                 7224 	rlca
   1BEC 07                 7225 	rlca
   1BED 07                 7226 	rlca
   1BEE 07                 7227 	rlca
   1BEF E6 F0              7228 	and	a,#0xF0
   1BF1 4F                 7229 	ld	c,a
                           7230 ;	genPlus
                           7231 ;	genPlusIncr
                           7232 ;	Shift into pair idx 0
   1BF2 21r06s38           7233 	ld	hl,#_selx
   1BF5 79                 7234 	ld	a,c
   1BF6 C6 01              7235 	add	a,#0x01
   1BF8 77                 7236 	ld	(hl),a
                           7237 ;main.c:971: show_table();
                           7238 ;	genCall
                           7239 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1BF9 CDrA8s06           7240 	call	_show_table
                           7241 ;	genGoto
   1BFC C3r8Ds1C           7242 	jp	00130$
                           7243 ;	genLabel
   1BFF                    7244 00129$:
                           7245 ;main.c:974: else if ( strlen( path ) + strlen( name ) + 1 < PATH_SIZE )
                           7246 ;	genIpush
                           7247 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1BFF 21r22s38           7248 	ld	hl,#_path
   1C02 E5                 7249 	push	hl
                           7250 ;	genCall
   1C03 CDr00s00           7251 	call	_strlen
   1C06 44                 7252 	ld	b,h
   1C07 4D                 7253 	ld	c,l
   1C08 F1                 7254 	pop	af
                           7255 ;	genIpush
                           7256 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1C09 C5                 7257 	push	bc
                           7258 ;	AOP_STK for _main_name_2_2
   1C0A DD 6E AD           7259 	ld	l,-83(ix)
   1C0D DD 66 AE           7260 	ld	h,-82(ix)
   1C10 E5                 7261 	push	hl
                           7262 ;	genCall
   1C11 CDr00s00           7263 	call	_strlen
   1C14 54                 7264 	ld	d,h
   1C15 5D                 7265 	ld	e,l
   1C16 F1                 7266 	pop	af
   1C17 C1                 7267 	pop	bc
                           7268 ;	genPlus
   1C18 79                 7269 	ld	a,c
   1C19 83                 7270 	add	a,e
   1C1A 4F                 7271 	ld	c,a
   1C1B 78                 7272 	ld	a,b
   1C1C 8A                 7273 	adc	a,d
   1C1D 47                 7274 	ld	b,a
                           7275 ;	genPlus
                           7276 ;	genPlusIncr
   1C1E 03                 7277 	inc	bc
                           7278 ;	genCmpLt
   1C1F 79                 7279 	ld	a,c
   1C20 D6 40              7280 	sub	a,#0x40
   1C22 78                 7281 	ld	a,b
   1C23 DE 00              7282 	sbc	a,#0x00
   1C25 F2r8Ds1C           7283 	jp	P,00130$
                           7284 ;main.c:976: strcat( path, name );
                           7285 ;	genIpush
                           7286 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           7287 ;	AOP_STK for _main_name_2_2
   1C28 DD 6E AD           7288 	ld	l,-83(ix)
   1C2B DD 66 AE           7289 	ld	h,-82(ix)
   1C2E E5                 7290 	push	hl
                           7291 ;	genIpush
   1C2F 21r22s38           7292 	ld	hl,#_path
   1C32 E5                 7293 	push	hl
                           7294 ;	genCall
   1C33 CDr00s00           7295 	call	_strcat
   1C36 F1                 7296 	pop	af
   1C37 F1                 7297 	pop	af
                           7298 ;main.c:977: strcat( path, "/" );
                           7299 ;	genIpush
                           7300 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1C38 21r01s26           7301 	ld	hl,#__str_26
   1C3B E5                 7302 	push	hl
                           7303 ;	genIpush
   1C3C 21r22s38           7304 	ld	hl,#_path
   1C3F E5                 7305 	push	hl
                           7306 ;	genCall
   1C40 CDr00s00           7307 	call	_strcat
   1C43 F1                 7308 	pop	af
   1C44 F1                 7309 	pop	af
                           7310 ;main.c:978: read_dir();
                           7311 ;	genCall
                           7312 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1C45 CDrDEs0B           7313 	call	_read_dir
                           7314 ;main.c:979: sely = (( files_sel - files_table_start ) % FILES_PER_ROW ) + 3;
                           7315 ;	genMinus
                           7316 ;	Shift into pair idx 0
   1C48 21r02s38           7317 	ld	hl,#_files_table_start
   1C4B FD 21r04s38        7318 	ld	iy,#_files_sel
   1C4F FD 7E 00           7319 	ld	a,0(iy)
   1C52 96                 7320 	sub	a,(hl)
   1C53 4F                 7321 	ld	c,a
   1C54 FD 7E 01           7322 	ld	a,1(iy)
   1C57 23                 7323 	inc	hl
   1C58 9E                 7324 	sbc	a,(hl)
   1C59 47                 7325 	ld	b,a
                           7326 ;	genIpush
                           7327 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1C5A C5                 7328 	push	bc
   1C5B 21 10 00           7329 	ld	hl,#0x0010
   1C5E E5                 7330 	push	hl
                           7331 ;	genIpush
   1C5F C5                 7332 	push	bc
                           7333 ;	genCall
   1C60 CDr00s00           7334 	call	__modsint_rrx_s
   1C63 54                 7335 	ld	d,h
   1C64 5D                 7336 	ld	e,l
   1C65 F1                 7337 	pop	af
   1C66 F1                 7338 	pop	af
   1C67 C1                 7339 	pop	bc
                           7340 ;	genCast
                           7341 ;	genPlus
                           7342 ;	genPlusIncr
                           7343 ;	Shift into pair idx 0
   1C68 21r07s38           7344 	ld	hl,#_sely
   1C6B 7B                 7345 	ld	a,e
   1C6C C6 03              7346 	add	a,#0x03
   1C6E 77                 7347 	ld	(hl),a
                           7348 ;main.c:980: selx = (( files_sel - files_table_start ) / FILES_PER_ROW ) * 16 + 1;
                           7349 ;	genIpush
                           7350 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1C6F 21 10 00           7351 	ld	hl,#0x0010
   1C72 E5                 7352 	push	hl
                           7353 ;	genIpush
   1C73 C5                 7354 	push	bc
                           7355 ;	genCall
   1C74 CDr00s00           7356 	call	__divsint_rrx_s
   1C77 44                 7357 	ld	b,h
   1C78 4D                 7358 	ld	c,l
   1C79 F1                 7359 	pop	af
   1C7A F1                 7360 	pop	af
                           7361 ;	genCast
                           7362 ;	genLeftShift
   1C7B 79                 7363 	ld	a,c
   1C7C 07                 7364 	rlca
   1C7D 07                 7365 	rlca
   1C7E 07                 7366 	rlca
   1C7F 07                 7367 	rlca
   1C80 E6 F0              7368 	and	a,#0xF0
   1C82 4F                 7369 	ld	c,a
                           7370 ;	genPlus
                           7371 ;	genPlusIncr
                           7372 ;	Shift into pair idx 0
   1C83 21r06s38           7373 	ld	hl,#_selx
   1C86 79                 7374 	ld	a,c
   1C87 C6 01              7375 	add	a,#0x01
   1C89 77                 7376 	ld	(hl),a
                           7377 ;main.c:982: show_table();
                           7378 ;	genCall
                           7379 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1C8A CDrA8s06           7380 	call	_show_table
                           7381 ;	genLabel
   1C8D                    7382 00130$:
                           7383 ;main.c:985: show_sel();
                           7384 ;	genCall
                           7385 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1C8D CDr2Es15           7386 	call	_show_sel
                           7387 ;	genGoto
   1C90 C3rCBs19           7388 	jp	00217$
                           7389 ;	genLabel
   1C93                    7390 00152$:
                           7391 ;main.c:991: sdata[0] = FA_OPEN_EXISTING | FA_READ;
                           7392 ;	genAddrOf
   1C93 21 AD 01           7393 	ld	hl,#0x01AD
   1C96 39                 7394 	add	hl,sp
   1C97 4D                 7395 	ld	c,l
   1C98 44                 7396 	ld	b,h
                           7397 ;	genAssign (pointer)
                           7398 ;	isBitvar = 0
   1C99 3E 01              7399 	ld	a,#0x01
   1C9B 02                 7400 	ld	(bc),a
                           7401 ;main.c:992: strcpy( &sdata[1], path );
                           7402 ;	genPlus
                           7403 ;	genPlusIncr
   1C9C 59                 7404 	ld	e,c
   1C9D 50                 7405 	ld	d,b
   1C9E 13                 7406 	inc	de
                           7407 ;	genIpush
                           7408 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1C9F C5                 7409 	push	bc
   1CA0 21r22s38           7410 	ld	hl,#_path
   1CA3 E5                 7411 	push	hl
                           7412 ;	genIpush
   1CA4 D5                 7413 	push	de
                           7414 ;	genCall
   1CA5 CDr00s00           7415 	call	_strcpy
   1CA8 F1                 7416 	pop	af
   1CA9 F1                 7417 	pop	af
   1CAA C1                 7418 	pop	bc
                           7419 ;main.c:993: strcat( &sdata[1], name );
                           7420 ;	genPlus
                           7421 ;	genPlusIncr
   1CAB 59                 7422 	ld	e,c
   1CAC 50                 7423 	ld	d,b
   1CAD 13                 7424 	inc	de
                           7425 ;	genIpush
                           7426 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1CAE C5                 7427 	push	bc
                           7428 ;	AOP_STK for _main_name_2_2
   1CAF DD 6E AD           7429 	ld	l,-83(ix)
   1CB2 DD 66 AE           7430 	ld	h,-82(ix)
   1CB5 E5                 7431 	push	hl
                           7432 ;	genIpush
   1CB6 D5                 7433 	push	de
                           7434 ;	genCall
   1CB7 CDr00s00           7435 	call	_strcat
   1CBA F1                 7436 	pop	af
   1CBB F1                 7437 	pop	af
   1CBC C1                 7438 	pop	bc
                           7439 ;main.c:995: strcpy( ext, name + strlen( name ) - 3 );
                           7440 ;	genIpush
                           7441 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1CBD C5                 7442 	push	bc
                           7443 ;	AOP_STK for _main_name_2_2
   1CBE DD 6E AD           7444 	ld	l,-83(ix)
   1CC1 DD 66 AE           7445 	ld	h,-82(ix)
   1CC4 E5                 7446 	push	hl
                           7447 ;	genCall
   1CC5 CDr00s00           7448 	call	_strlen
   1CC8 54                 7449 	ld	d,h
   1CC9 5D                 7450 	ld	e,l
   1CCA F1                 7451 	pop	af
   1CCB C1                 7452 	pop	bc
                           7453 ;	genPlus
                           7454 ;	AOP_STK for _main_name_2_2
   1CCC DD 7E AD           7455 	ld	a,-83(ix)
   1CCF 83                 7456 	add	a,e
   1CD0 5F                 7457 	ld	e,a
   1CD1 DD 7E AE           7458 	ld	a,-82(ix)
   1CD4 8A                 7459 	adc	a,d
   1CD5 57                 7460 	ld	d,a
                           7461 ;	genMinus
                           7462 ;	AOP_EXSTK for _main_sloc3_1_0
                           7463 ;	Shift into pair idx 0
   1CD6 21 04 00           7464 	ld	hl,#4
   1CD9 39                 7465 	add	hl,sp
   1CDA 7B                 7466 	ld	a,e
   1CDB C6 FD              7467 	add	a,#0xFD
   1CDD 77                 7468 	ld	(hl),a
   1CDE 7A                 7469 	ld	a,d
   1CDF CE FF              7470 	adc	a,#0xFF
   1CE1 23                 7471 	inc	hl
   1CE2 77                 7472 	ld	(hl),a
                           7473 ;	genAddrOf
   1CE3 21 9D 01           7474 	ld	hl,#0x019D
   1CE6 39                 7475 	add	hl,sp
   1CE7 5D                 7476 	ld	e,l
   1CE8 54                 7477 	ld	d,h
                           7478 ;	genIpush
                           7479 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1CE9 C5                 7480 	push	bc
                           7481 ;	AOP_EXSTK for _main_sloc3_1_0
   1CEA FD 21 06 00        7482 	ld	iy,#6
   1CEE FD 39              7483 	add	iy,sp
   1CF0 FD 6E 00           7484 	ld	l,0(iy)
   1CF3 FD 66 01           7485 	ld	h,1(iy)
   1CF6 E5                 7486 	push	hl
                           7487 ;	genIpush
   1CF7 D5                 7488 	push	de
                           7489 ;	genCall
   1CF8 CDr00s00           7490 	call	_strcpy
   1CFB F1                 7491 	pop	af
   1CFC F1                 7492 	pop	af
   1CFD C1                 7493 	pop	bc
                           7494 ;main.c:997: if ( strcmp( ext, "tap" ) == 0 || strcmp( ext, "tzx" ) == 0 )
                           7495 ;	genAddrOf
   1CFE 21 9D 01           7496 	ld	hl,#0x019D
   1D01 39                 7497 	add	hl,sp
   1D02 5D                 7498 	ld	e,l
   1D03 54                 7499 	ld	d,h
                           7500 ;	genIpush
                           7501 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1D04 C5                 7502 	push	bc
   1D05 21r03s26           7503 	ld	hl,#__str_27
   1D08 E5                 7504 	push	hl
                           7505 ;	genIpush
   1D09 D5                 7506 	push	de
                           7507 ;	genCall
   1D0A CDr00s00           7508 	call	_strcmp
   1D0D 54                 7509 	ld	d,h
   1D0E 5D                 7510 	ld	e,l
   1D0F F1                 7511 	pop	af
   1D10 F1                 7512 	pop	af
   1D11 C1                 7513 	pop	bc
                           7514 ;	genIfx
   1D12 7B                 7515 	ld	a,e
   1D13 B2                 7516 	or	a,d
   1D14 28 18              7517 	jr	Z,00147$
                           7518 ;	genAddrOf
   1D16 21 9D 01           7519 	ld	hl,#0x019D
   1D19 39                 7520 	add	hl,sp
   1D1A 5D                 7521 	ld	e,l
   1D1B 54                 7522 	ld	d,h
                           7523 ;	genIpush
                           7524 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1D1C C5                 7525 	push	bc
   1D1D 21r07s26           7526 	ld	hl,#__str_28
   1D20 E5                 7527 	push	hl
                           7528 ;	genIpush
   1D21 D5                 7529 	push	de
                           7530 ;	genCall
   1D22 CDr00s00           7531 	call	_strcmp
   1D25 54                 7532 	ld	d,h
   1D26 5D                 7533 	ld	e,l
   1D27 F1                 7534 	pop	af
   1D28 F1                 7535 	pop	af
   1D29 C1                 7536 	pop	bc
                           7537 ;	genIfx
   1D2A 7B                 7538 	ld	a,e
   1D2B B2                 7539 	or	a,d
   1D2C 20 42              7540 	jr	NZ,00148$
                           7541 ;	genLabel
   1D2E                    7542 00147$:
                           7543 ;main.c:999: tap_path[0] = sdata[0];
                           7544 ;	genAddrOf
                           7545 ;	AOP_EXSTK for _main_sloc3_1_0
   1D2E 21 0E 02           7546 	ld	hl,#0x020E
   1D31 39                 7547 	add	hl,sp
   1D32 FD 21 04 00        7548 	ld	iy,#4
   1D36 FD 39              7549 	add	iy,sp
   1D38 FD 75 00           7550 	ld	0(iy),l
   1D3B FD 74 01           7551 	ld	1(iy),h
                           7552 ;	genPointerGet
   1D3E 0A                 7553 	ld	a,(bc)
                           7554 ;	genAssign (pointer)
                           7555 ;	AOP_EXSTK for _main_sloc3_1_0
                           7556 ;	isBitvar = 0
   1D3F FD 6E 00           7557 	ld	l,0(iy)
   1D42 FD 66 01           7558 	ld	h,1(iy)
   1D45 77                 7559 	ld	(hl),a
                           7560 ;main.c:1000: strcpy( &tap_path[1], &sdata[1] );
                           7561 ;	genPlus
                           7562 ;	AOP_EXSTK for _main_sloc4_1_0
                           7563 ;	genPlusIncr
                           7564 ;	Shift into pair idx 0
   1D46 21 02 00           7565 	ld	hl,#2
   1D49 39                 7566 	add	hl,sp
   1D4A 79                 7567 	ld	a,c
   1D4B C6 01              7568 	add	a,#0x01
   1D4D 77                 7569 	ld	(hl),a
   1D4E 78                 7570 	ld	a,b
   1D4F CE 00              7571 	adc	a,#0x00
   1D51 23                 7572 	inc	hl
   1D52 77                 7573 	ld	(hl),a
                           7574 ;	genPlus
                           7575 ;	AOP_EXSTK for _main_sloc3_1_0
                           7576 ;	genPlusIncr
   1D53 FD 5E 00           7577 	ld	e,0(iy)
   1D56 FD 56 01           7578 	ld	d,1(iy)
   1D59 13                 7579 	inc	de
                           7580 ;	genIpush
                           7581 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           7582 ;	AOP_EXSTK for _main_sloc4_1_0
   1D5A FD 21 02 00        7583 	ld	iy,#2
   1D5E FD 39              7584 	add	iy,sp
   1D60 FD 6E 00           7585 	ld	l,0(iy)
   1D63 FD 66 01           7586 	ld	h,1(iy)
   1D66 E5                 7587 	push	hl
                           7588 ;	genIpush
   1D67 D5                 7589 	push	de
                           7590 ;	genCall
   1D68 CDr00s00           7591 	call	_strcpy
   1D6B F1                 7592 	pop	af
   1D6C F1                 7593 	pop	af
                           7594 ;main.c:1001: break;
                           7595 ;	genGoto
   1D6D C3rC1s25           7596 	jp	00218$
                           7597 ;	genLabel
   1D70                    7598 00148$:
                           7599 ;main.c:1003: else if ( strcmp( ext, "scr" ) == 0 )
                           7600 ;	genAddrOf
   1D70 21 9D 01           7601 	ld	hl,#0x019D
   1D73 39                 7602 	add	hl,sp
   1D74 5D                 7603 	ld	e,l
   1D75 54                 7604 	ld	d,h
                           7605 ;	genIpush
                           7606 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1D76 C5                 7607 	push	bc
   1D77 21r0Bs26           7608 	ld	hl,#__str_29
   1D7A E5                 7609 	push	hl
                           7610 ;	genIpush
   1D7B D5                 7611 	push	de
                           7612 ;	genCall
   1D7C CDr00s00           7613 	call	_strcmp
   1D7F 54                 7614 	ld	d,h
   1D80 5D                 7615 	ld	e,l
   1D81 F1                 7616 	pop	af
   1D82 F1                 7617 	pop	af
   1D83 C1                 7618 	pop	bc
                           7619 ;	genIfx
   1D84 7B                 7620 	ld	a,e
   1D85 B2                 7621 	or	a,d
   1D86 C2r29s1E           7622 	jp	NZ,00145$
                           7623 ;main.c:1005: pport_send( PP_CMD_FCTL( PP_FCTL_OPEN ), 0x40, sdata );
                           7624 ;	genIpush
                           7625 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1D89 C5                 7626 	push	bc
                           7627 ;	genIpush
   1D8A 21 40 00           7628 	ld	hl,#0x0040
   1D8D E5                 7629 	push	hl
                           7630 ;	genIpush
   1D8E 21 02 78           7631 	ld	hl,#0x7802
   1D91 E5                 7632 	push	hl
                           7633 ;	genCall
   1D92 CDrB9s03           7634 	call	_pport_send
   1D95 F1                 7635 	pop	af
   1D96 F1                 7636 	pop	af
   1D97 F1                 7637 	pop	af
                           7638 ;main.c:1006: pport_receive( 0, 0 );
                           7639 ;	genIpush
                           7640 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1D98 21 00 00           7641 	ld	hl,#0x0000
   1D9B E5                 7642 	push	hl
                           7643 ;	genIpush
   1D9C 21 00 00           7644 	ld	hl,#0x0000
   1D9F E5                 7645 	push	hl
                           7646 ;	genCall
   1DA0 CDr4Fs04           7647 	call	_pport_receive
   1DA3 F1                 7648 	pop	af
   1DA4 F1                 7649 	pop	af
                           7650 ;main.c:1008: size = 0;
                           7651 ;	genAssign
                           7652 ;	AOP_EXSTK for _main_size_4_10
   1DA5 AF                 7653 	xor	a,a
   1DA6 FD 21 99 01        7654 	ld	iy,#409
   1DAA FD 39              7655 	add	iy,sp
   1DAC FD 77 00           7656 	ld	0(iy),a
   1DAF FD 77 01           7657 	ld	1(iy),a
   1DB2 FD 77 02           7658 	ld	2(iy),a
   1DB5 FD 77 03           7659 	ld	3(iy),a
                           7660 ;main.c:1009: pport_send( PP_CMD_FCTL( PP_FCTL_SEEK ), 4, &size );
                           7661 ;	genAddrOf
   1DB8 21 99 01           7662 	ld	hl,#0x0199
   1DBB 39                 7663 	add	hl,sp
   1DBC 5D                 7664 	ld	e,l
   1DBD 54                 7665 	ld	d,h
                           7666 ;	genIpush
                           7667 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1DBE D5                 7668 	push	de
                           7669 ;	genIpush
   1DBF 21 04 00           7670 	ld	hl,#0x0004
   1DC2 E5                 7671 	push	hl
                           7672 ;	genIpush
   1DC3 21 06 78           7673 	ld	hl,#0x7806
   1DC6 E5                 7674 	push	hl
                           7675 ;	genCall
   1DC7 CDrB9s03           7676 	call	_pport_send
   1DCA F1                 7677 	pop	af
   1DCB F1                 7678 	pop	af
   1DCC F1                 7679 	pop	af
                           7680 ;main.c:1010: pport_receive( 0, 0 );
                           7681 ;	genIpush
                           7682 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1DCD 21 00 00           7683 	ld	hl,#0x0000
   1DD0 E5                 7684 	push	hl
                           7685 ;	genIpush
   1DD1 21 00 00           7686 	ld	hl,#0x0000
   1DD4 E5                 7687 	push	hl
                           7688 ;	genCall
   1DD5 CDr4Fs04           7689 	call	_pport_receive
   1DD8 F1                 7690 	pop	af
   1DD9 F1                 7691 	pop	af
                           7692 ;main.c:1012: size = SCR_SIZE;
                           7693 ;	genAssign
                           7694 ;	AOP_EXSTK for _main_size_4_10
   1DDA FD 21 99 01        7695 	ld	iy,#409
   1DDE FD 39              7696 	add	iy,sp
   1DE0 FD 36 00 00        7697 	ld	0(iy),#0x00
   1DE4 FD 36 01 1B        7698 	ld	1(iy),#0x1B
   1DE8 FD 36 02 00        7699 	ld	2(iy),#0x00
   1DEC FD 36 03 00        7700 	ld	3(iy),#0x00
                           7701 ;main.c:1013: pport_send( PP_CMD_FCTL( PP_FCTL_READ ), 4, &size );
                           7702 ;	genAddrOf
   1DF0 21 99 01           7703 	ld	hl,#0x0199
   1DF3 39                 7704 	add	hl,sp
   1DF4 5D                 7705 	ld	e,l
   1DF5 54                 7706 	ld	d,h
                           7707 ;	genIpush
                           7708 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1DF6 D5                 7709 	push	de
                           7710 ;	genIpush
   1DF7 21 04 00           7711 	ld	hl,#0x0004
   1DFA E5                 7712 	push	hl
                           7713 ;	genIpush
   1DFB 21 04 78           7714 	ld	hl,#0x7804
   1DFE E5                 7715 	push	hl
                           7716 ;	genCall
   1DFF CDrB9s03           7717 	call	_pport_send
   1E02 F1                 7718 	pop	af
   1E03 F1                 7719 	pop	af
   1E04 F1                 7720 	pop	af
                           7721 ;main.c:1015: pport_receive( (void*)0x4000, SCR_SIZE );
                           7722 ;	genIpush
                           7723 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1E05 21 00 1B           7724 	ld	hl,#0x1B00
   1E08 E5                 7725 	push	hl
                           7726 ;	genIpush
   1E09 21 00 40           7727 	ld	hl,#0x4000
   1E0C E5                 7728 	push	hl
                           7729 ;	genCall
   1E0D CDr4Fs04           7730 	call	_pport_receive
   1E10 F1                 7731 	pop	af
   1E11 F1                 7732 	pop	af
                           7733 ;main.c:1017: getkey();
                           7734 ;	genCall
                           7735 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1E12 CDrF2s01           7736 	call	_getkey
                           7737 ;main.c:1019: init_screen();
                           7738 ;	genCall
                           7739 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1E15 CDrDDs18           7740 	call	_init_screen
                           7741 ;main.c:1020: show_table();
                           7742 ;	genCall
                           7743 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1E18 CDrA8s06           7744 	call	_show_table
                           7745 ;main.c:1021: show_sel();
                           7746 ;	genCall
                           7747 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1E1B CDr2Es15           7748 	call	_show_sel
                           7749 ;main.c:1022: update_disks( 4 );
                           7750 ;	genIpush
                           7751 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1E1E 3E 04              7752 	ld	a,#0x04
   1E20 F5                 7753 	push	af
   1E21 33                 7754 	inc	sp
                           7755 ;	genCall
   1E22 CDrEAs16           7756 	call	_update_disks
   1E25 33                 7757 	inc	sp
                           7758 ;	genGoto
   1E26 C3rCBs19           7759 	jp	00217$
                           7760 ;	genLabel
   1E29                    7761 00145$:
                           7762 ;main.c:1024: else if ( strcmp( ext, "sna" ) == 0 )
                           7763 ;	genAddrOf
   1E29 21 9D 01           7764 	ld	hl,#0x019D
   1E2C 39                 7765 	add	hl,sp
   1E2D 5D                 7766 	ld	e,l
   1E2E 54                 7767 	ld	d,h
                           7768 ;	genIpush
                           7769 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1E2F C5                 7770 	push	bc
   1E30 21r0Fs26           7771 	ld	hl,#__str_30
   1E33 E5                 7772 	push	hl
                           7773 ;	genIpush
   1E34 D5                 7774 	push	de
                           7775 ;	genCall
   1E35 CDr00s00           7776 	call	_strcmp
   1E38 54                 7777 	ld	d,h
   1E39 5D                 7778 	ld	e,l
   1E3A F1                 7779 	pop	af
   1E3B F1                 7780 	pop	af
   1E3C C1                 7781 	pop	bc
                           7782 ;	genIfx
   1E3D 7B                 7783 	ld	a,e
   1E3E B2                 7784 	or	a,d
   1E3F C2rA1s1E           7785 	jp	NZ,00142$
                           7786 ;main.c:1026: byte i = 0xff;
                           7787 ;	genAssign
   1E42 1E FF              7788 	ld	e,#0xFF
                           7789 ;main.c:1028: pport_send( PP_CMD_FCTL( PP_FCTL_OPEN ), 0x40, sdata );
                           7790 ;	genIpush
                           7791 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   1E44 D5                 7792 	push	de
   1E45 C5                 7793 	push	bc
                           7794 ;	genIpush
   1E46 21 40 00           7795 	ld	hl,#0x0040
   1E49 E5                 7796 	push	hl
                           7797 ;	genIpush
   1E4A 21 02 78           7798 	ld	hl,#0x7802
   1E4D E5                 7799 	push	hl
                           7800 ;	genCall
   1E4E CDrB9s03           7801 	call	_pport_send
   1E51 F1                 7802 	pop	af
   1E52 F1                 7803 	pop	af
   1E53 F1                 7804 	pop	af
   1E54 D1                 7805 	pop	de
                           7806 ;main.c:1029: pport_receive( 0, 0 );
                           7807 ;	genIpush
                           7808 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   1E55 D5                 7809 	push	de
   1E56 21 00 00           7810 	ld	hl,#0x0000
   1E59 E5                 7811 	push	hl
                           7812 ;	genIpush
   1E5A 21 00 00           7813 	ld	hl,#0x0000
   1E5D E5                 7814 	push	hl
                           7815 ;	genCall
   1E5E CDr4Fs04           7816 	call	_pport_receive
   1E61 F1                 7817 	pop	af
   1E62 F1                 7818 	pop	af
   1E63 D1                 7819 	pop	de
                           7820 ;main.c:1031: pport_send( PP_CMD_CTL( PP_CTL_PROM ), 0, 0 );
                           7821 ;	genIpush
                           7822 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   1E64 D5                 7823 	push	de
   1E65 21 00 00           7824 	ld	hl,#0x0000
   1E68 E5                 7825 	push	hl
                           7826 ;	genIpush
   1E69 21 00 00           7827 	ld	hl,#0x0000
   1E6C E5                 7828 	push	hl
                           7829 ;	genIpush
   1E6D 21 02 77           7830 	ld	hl,#0x7702
   1E70 E5                 7831 	push	hl
                           7832 ;	genCall
   1E71 CDrB9s03           7833 	call	_pport_send
   1E74 F1                 7834 	pop	af
   1E75 F1                 7835 	pop	af
   1E76 F1                 7836 	pop	af
   1E77 D1                 7837 	pop	de
                           7838 ;main.c:1032: pport_receive( 0, 0 );
                           7839 ;	genIpush
                           7840 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   1E78 D5                 7841 	push	de
   1E79 21 00 00           7842 	ld	hl,#0x0000
   1E7C E5                 7843 	push	hl
                           7844 ;	genIpush
   1E7D 21 00 00           7845 	ld	hl,#0x0000
   1E80 E5                 7846 	push	hl
                           7847 ;	genCall
   1E81 CDr4Fs04           7848 	call	_pport_receive
   1E84 F1                 7849 	pop	af
   1E85 F1                 7850 	pop	af
   1E86 D1                 7851 	pop	de
                           7852 ;main.c:1034: while (( KPORT | 0xe0 ) != 0xff ) while ( i-- != 0 );
                           7853 ;	genLabel
   1E87                    7854 00134$:
                           7855 ;	genOr
                           7856 ;Z80 AOP_SFR for _KPORT banked:1 bc:1 de:1
   1E87 3E 00              7857 	ld	a,#>_KPORT
   1E89 DB FE              7858 	in	a,(#<_KPORT)
   1E8B F6 E0              7859 	or	a,#0xE0
                           7860 ;	genCmpEq
                           7861 ; genCmpEq: left 1, right 1, result 0
   1E8D 4F                 7862 	ld	c,a
   1E8E 3C                 7863 	inc	a
   1E8F 28 0A              7864 	jr	Z,00136$
                           7865 ;	genAssign
   1E91 4B                 7866 	ld	c,e
                           7867 ;	genLabel
   1E92                    7868 00131$:
                           7869 ;	genAssign
   1E92 41                 7870 	ld	b,c
                           7871 ;	genMinus
   1E93 0D                 7872 	dec	c
                           7873 ;	genAssign
   1E94 59                 7874 	ld	e,c
                           7875 ;	genIfx
   1E95 AF                 7876 	xor	a,a
   1E96 B0                 7877 	or	a,b
   1E97 28 EE              7878 	jr	Z,00134$
                           7879 ;	genGoto
   1E99 18 F7              7880 	jr	00131$
                           7881 ;	genLabel
   1E9B                    7882 00136$:
                           7883 ;main.c:1037: __endasm;
                           7884 ;	genInline
   1E9B C3 70 38           7885 		jp 0x3870;
                           7886 		    
                           7887 ;	genGoto
   1E9E C3rCBs19           7888 	jp	00217$
                           7889 ;	genLabel
   1EA1                    7890 00142$:
                           7891 ;main.c:1039: else if ( strcmp( ext, "trd" ) == 0 || strcmp( ext, "fdi" ) == 0 || strcmp( ext, "scl" ) == 0 )
                           7892 ;	genAddrOf
   1EA1 21 9D 01           7893 	ld	hl,#0x019D
   1EA4 39                 7894 	add	hl,sp
   1EA5 4D                 7895 	ld	c,l
   1EA6 44                 7896 	ld	b,h
                           7897 ;	genIpush
                           7898 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1EA7 21r13s26           7899 	ld	hl,#__str_31
   1EAA E5                 7900 	push	hl
                           7901 ;	genIpush
   1EAB C5                 7902 	push	bc
                           7903 ;	genCall
   1EAC CDr00s00           7904 	call	_strcmp
   1EAF 44                 7905 	ld	b,h
   1EB0 4D                 7906 	ld	c,l
   1EB1 F1                 7907 	pop	af
   1EB2 F1                 7908 	pop	af
                           7909 ;	genIfx
   1EB3 79                 7910 	ld	a,c
   1EB4 B0                 7911 	or	a,b
   1EB5 28 2D              7912 	jr	Z,00137$
                           7913 ;	genAddrOf
   1EB7 21 9D 01           7914 	ld	hl,#0x019D
   1EBA 39                 7915 	add	hl,sp
   1EBB 4D                 7916 	ld	c,l
   1EBC 44                 7917 	ld	b,h
                           7918 ;	genIpush
                           7919 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1EBD 21r17s26           7920 	ld	hl,#__str_32
   1EC0 E5                 7921 	push	hl
                           7922 ;	genIpush
   1EC1 C5                 7923 	push	bc
                           7924 ;	genCall
   1EC2 CDr00s00           7925 	call	_strcmp
   1EC5 44                 7926 	ld	b,h
   1EC6 4D                 7927 	ld	c,l
   1EC7 F1                 7928 	pop	af
   1EC8 F1                 7929 	pop	af
                           7930 ;	genIfx
   1EC9 79                 7931 	ld	a,c
   1ECA B0                 7932 	or	a,b
   1ECB 28 17              7933 	jr	Z,00137$
                           7934 ;	genAddrOf
   1ECD 21 9D 01           7935 	ld	hl,#0x019D
   1ED0 39                 7936 	add	hl,sp
   1ED1 4D                 7937 	ld	c,l
   1ED2 44                 7938 	ld	b,h
                           7939 ;	genIpush
                           7940 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1ED3 21r1Bs26           7941 	ld	hl,#__str_33
   1ED6 E5                 7942 	push	hl
                           7943 ;	genIpush
   1ED7 C5                 7944 	push	bc
                           7945 ;	genCall
   1ED8 CDr00s00           7946 	call	_strcmp
   1EDB 44                 7947 	ld	b,h
   1EDC 4D                 7948 	ld	c,l
   1EDD F1                 7949 	pop	af
   1EDE F1                 7950 	pop	af
                           7951 ;	genIfx
   1EDF 79                 7952 	ld	a,c
   1EE0 B0                 7953 	or	a,b
   1EE1 C2rCBs19           7954 	jp	NZ,00217$
                           7955 ;	genLabel
   1EE4                    7956 00137$:
                           7957 ;main.c:1042: ddata[0] = 0; // disk 'a';
                           7958 ;	genAddrOf
   1EE4 21 49 01           7959 	ld	hl,#0x0149
   1EE7 39                 7960 	add	hl,sp
   1EE8 4D                 7961 	ld	c,l
   1EE9 44                 7962 	ld	b,h
                           7963 ;	genAssign (pointer)
                           7964 ;	isBitvar = 0
   1EEA 3E 00              7965 	ld	a,#0x00
   1EEC 02                 7966 	ld	(bc),a
                           7967 ;main.c:1043: strcpy( ddata + 1, path );
                           7968 ;	genPlus
                           7969 ;	genPlusIncr
   1EED 59                 7970 	ld	e,c
   1EEE 50                 7971 	ld	d,b
   1EEF 13                 7972 	inc	de
                           7973 ;	genIpush
                           7974 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1EF0 C5                 7975 	push	bc
   1EF1 21r22s38           7976 	ld	hl,#_path
   1EF4 E5                 7977 	push	hl
                           7978 ;	genIpush
   1EF5 D5                 7979 	push	de
                           7980 ;	genCall
   1EF6 CDr00s00           7981 	call	_strcpy
   1EF9 F1                 7982 	pop	af
   1EFA F1                 7983 	pop	af
   1EFB C1                 7984 	pop	bc
                           7985 ;main.c:1044: strcat( ddata + 1, name );
                           7986 ;	genPlus
                           7987 ;	genPlusIncr
   1EFC 59                 7988 	ld	e,c
   1EFD 50                 7989 	ld	d,b
   1EFE 13                 7990 	inc	de
                           7991 ;	genIpush
                           7992 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1EFF C5                 7993 	push	bc
                           7994 ;	AOP_STK for _main_name_2_2
   1F00 DD 6E AD           7995 	ld	l,-83(ix)
   1F03 DD 66 AE           7996 	ld	h,-82(ix)
   1F06 E5                 7997 	push	hl
                           7998 ;	genIpush
   1F07 D5                 7999 	push	de
                           8000 ;	genCall
   1F08 CDr00s00           8001 	call	_strcat
   1F0B F1                 8002 	pop	af
   1F0C F1                 8003 	pop	af
   1F0D C1                 8004 	pop	bc
                           8005 ;main.c:1045: pport_send( PP_CMD_FCTL( PP_FCTL_DSK_OPEN ), 0x40, ddata );
                           8006 ;	genIpush
                           8007 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1F0E C5                 8008 	push	bc
                           8009 ;	genIpush
   1F0F 21 40 00           8010 	ld	hl,#0x0040
   1F12 E5                 8011 	push	hl
                           8012 ;	genIpush
   1F13 21 10 78           8013 	ld	hl,#0x7810
   1F16 E5                 8014 	push	hl
                           8015 ;	genCall
   1F17 CDrB9s03           8016 	call	_pport_send
   1F1A F1                 8017 	pop	af
   1F1B F1                 8018 	pop	af
   1F1C F1                 8019 	pop	af
                           8020 ;main.c:1046: pport_receive( 0, 0 );
                           8021 ;	genIpush
                           8022 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1F1D 21 00 00           8023 	ld	hl,#0x0000
   1F20 E5                 8024 	push	hl
                           8025 ;	genIpush
   1F21 21 00 00           8026 	ld	hl,#0x0000
   1F24 E5                 8027 	push	hl
                           8028 ;	genCall
   1F25 CDr4Fs04           8029 	call	_pport_receive
   1F28 F1                 8030 	pop	af
   1F29 F1                 8031 	pop	af
                           8032 ;main.c:1052: __endasm;
                           8033 ;	genInline
                           8034 	
   1F2A 01 00 00           8035 		                   ld bc, #0x0000
   1F2D C5                 8036 		                   push bc
   1F2E C3 2D 3D           8037 		                   jp 0x3d2d;
                           8038 		                   
                           8039 ;	genGoto
   1F31 C3rCBs19           8040 	jp	00217$
                           8041 ;	genLabel
   1F34                    8042 00209$:
                           8043 ;main.c:1057: else if ( key >= 0x81 && key <= 0x84 )
                           8044 ;	genCmpLt
                           8045 ;	AOP_STK for _main_key_2_2
   1F34 DD 7E AF           8046 	ld	a,-81(ix)
   1F37 D6 81              8047 	sub	a,#0x81
   1F39 38 45              8048 	jr	C,00205$
                           8049 ;	genCmpGt
                           8050 ;	AOP_STK for _main_key_2_2
   1F3B 3E 84              8051 	ld	a,#0x84
   1F3D DD 96 AF           8052 	sub	a,-81(ix)
   1F40 38 3E              8053 	jr	C,00205$
                           8054 ;main.c:1061: ddata = key - 0x81;
                           8055 ;	genMinus
                           8056 ;	AOP_STK for _main_key_2_2
                           8057 ;	AOP_EXSTK for _main_ddata_3_15
                           8058 ;	Shift into pair idx 0
   1F42 21 48 01           8059 	ld	hl,#328
   1F45 39                 8060 	add	hl,sp
   1F46 DD 7E AF           8061 	ld	a,-81(ix)
   1F49 C6 7F              8062 	add	a,#0x7F
   1F4B 77                 8063 	ld	(hl),a
                           8064 ;main.c:1062: pport_send( PP_CMD_FCTL( PP_FCTL_DSK_CLOSE ), 1, &ddata );
                           8065 ;	genAddrOf
   1F4C 21 48 01           8066 	ld	hl,#0x0148
   1F4F 39                 8067 	add	hl,sp
   1F50 4D                 8068 	ld	c,l
   1F51 44                 8069 	ld	b,h
                           8070 ;	genIpush
                           8071 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1F52 C5                 8072 	push	bc
                           8073 ;	genIpush
   1F53 21 01 00           8074 	ld	hl,#0x0001
   1F56 E5                 8075 	push	hl
                           8076 ;	genIpush
   1F57 21 11 78           8077 	ld	hl,#0x7811
   1F5A E5                 8078 	push	hl
                           8079 ;	genCall
   1F5B CDrB9s03           8080 	call	_pport_send
   1F5E F1                 8081 	pop	af
   1F5F F1                 8082 	pop	af
   1F60 F1                 8083 	pop	af
                           8084 ;main.c:1063: pport_receive( 0, 0 );
                           8085 ;	genIpush
                           8086 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1F61 21 00 00           8087 	ld	hl,#0x0000
   1F64 E5                 8088 	push	hl
                           8089 ;	genIpush
   1F65 21 00 00           8090 	ld	hl,#0x0000
   1F68 E5                 8091 	push	hl
                           8092 ;	genCall
   1F69 CDr4Fs04           8093 	call	_pport_receive
   1F6C F1                 8094 	pop	af
   1F6D F1                 8095 	pop	af
                           8096 ;main.c:1064: update_disks( ddata );
                           8097 ;	genIpush
                           8098 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           8099 ;	AOP_EXSTK for _main_ddata_3_15
   1F6E FD 21 48 01        8100 	ld	iy,#328
   1F72 FD 39              8101 	add	iy,sp
   1F74 FD 7E 00           8102 	ld	a,0(iy)
   1F77 F5                 8103 	push	af
   1F78 33                 8104 	inc	sp
                           8105 ;	genCall
   1F79 CDrEAs16           8106 	call	_update_disks
   1F7C 33                 8107 	inc	sp
                           8108 ;	genGoto
   1F7D C3rCBs19           8109 	jp	00217$
                           8110 ;	genLabel
   1F80                    8111 00205$:
                           8112 ;main.c:1066: else if ( key >= 'a' && key <= 'd' && files_size > 0 )
                           8113 ;	genCmpLt
                           8114 ;	AOP_STK for _main_key_2_2
   1F80 DD 7E AF           8115 	ld	a,-81(ix)
   1F83 D6 61              8116 	sub	a,#0x61
   1F85 DAr11s20           8117 	jp	C,00200$
                           8118 ;	genCmpGt
                           8119 ;	AOP_STK for _main_key_2_2
   1F88 3E 64              8120 	ld	a,#0x64
   1F8A DD 96 AF           8121 	sub	a,-81(ix)
   1F8D DAr11s20           8122 	jp	C,00200$
                           8123 ;	genCmpGt
   1F90 3E 00              8124 	ld	a,#0x00
   1F92 FD 21r00s38        8125 	ld	iy,#_files_size
   1F96 FD 96 00           8126 	sub	a,0(iy)
   1F99 3E 00              8127 	ld	a,#0x00
   1F9B FD 9E 01           8128 	sbc	a,1(iy)
   1F9E F2r11s20           8129 	jp	P,00200$
                           8130 ;main.c:1069: ddata[0] = key - 'a';
                           8131 ;	genAddrOf
   1FA1 21 F8 00           8132 	ld	hl,#0x00F8
   1FA4 39                 8133 	add	hl,sp
   1FA5 4D                 8134 	ld	c,l
   1FA6 44                 8135 	ld	b,h
                           8136 ;	genMinus
                           8137 ;	AOP_STK for _main_key_2_2
                           8138 ;	AOP_EXSTK for _main_sloc4_1_0
                           8139 ;	Shift into pair idx 0
   1FA7 21 02 00           8140 	ld	hl,#2
   1FAA 39                 8141 	add	hl,sp
   1FAB DD 7E AF           8142 	ld	a,-81(ix)
   1FAE C6 9F              8143 	add	a,#0x9F
   1FB0 77                 8144 	ld	(hl),a
                           8145 ;	genAssign (pointer)
                           8146 ;	AOP_EXSTK for _main_sloc4_1_0
                           8147 ;	isBitvar = 0
   1FB1 FD 21 02 00        8148 	ld	iy,#2
   1FB5 FD 39              8149 	add	iy,sp
   1FB7 FD 7E 00           8150 	ld	a,0(iy)
   1FBA 02                 8151 	ld	(bc),a
                           8152 ;main.c:1070: strcpy( ddata + 1, path );
                           8153 ;	genPlus
                           8154 ;	genPlusIncr
   1FBB 79                 8155 	ld	a,c
   1FBC C6 01              8156 	add	a,#0x01
   1FBE 57                 8157 	ld	d,a
   1FBF 78                 8158 	ld	a,b
   1FC0 CE 00              8159 	adc	a,#0x00
   1FC2 5F                 8160 	ld	e,a
                           8161 ;	genIpush
                           8162 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1FC3 C5                 8163 	push	bc
   1FC4 21r22s38           8164 	ld	hl,#_path
   1FC7 E5                 8165 	push	hl
                           8166 ;	genIpush
   1FC8 6A                 8167 	ld	l,d
   1FC9 63                 8168 	ld	h,e
   1FCA E5                 8169 	push	hl
                           8170 ;	genCall
   1FCB CDr00s00           8171 	call	_strcpy
   1FCE F1                 8172 	pop	af
   1FCF F1                 8173 	pop	af
   1FD0 C1                 8174 	pop	bc
                           8175 ;main.c:1071: strcat( ddata + 1, name );
                           8176 ;	genPlus
                           8177 ;	genPlusIncr
   1FD1 59                 8178 	ld	e,c
   1FD2 50                 8179 	ld	d,b
   1FD3 13                 8180 	inc	de
                           8181 ;	genIpush
                           8182 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   1FD4 C5                 8183 	push	bc
                           8184 ;	AOP_STK for _main_name_2_2
   1FD5 DD 6E AD           8185 	ld	l,-83(ix)
   1FD8 DD 66 AE           8186 	ld	h,-82(ix)
   1FDB E5                 8187 	push	hl
                           8188 ;	genIpush
   1FDC D5                 8189 	push	de
                           8190 ;	genCall
   1FDD CDr00s00           8191 	call	_strcat
   1FE0 F1                 8192 	pop	af
   1FE1 F1                 8193 	pop	af
   1FE2 C1                 8194 	pop	bc
                           8195 ;main.c:1072: pport_send( PP_CMD_FCTL( PP_FCTL_DSK_OPEN ), 0x40, ddata );
                           8196 ;	genIpush
                           8197 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1FE3 C5                 8198 	push	bc
                           8199 ;	genIpush
   1FE4 21 40 00           8200 	ld	hl,#0x0040
   1FE7 E5                 8201 	push	hl
                           8202 ;	genIpush
   1FE8 21 10 78           8203 	ld	hl,#0x7810
   1FEB E5                 8204 	push	hl
                           8205 ;	genCall
   1FEC CDrB9s03           8206 	call	_pport_send
   1FEF F1                 8207 	pop	af
   1FF0 F1                 8208 	pop	af
   1FF1 F1                 8209 	pop	af
                           8210 ;main.c:1073: pport_receive( 0, 0 );
                           8211 ;	genIpush
                           8212 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1FF2 21 00 00           8213 	ld	hl,#0x0000
   1FF5 E5                 8214 	push	hl
                           8215 ;	genIpush
   1FF6 21 00 00           8216 	ld	hl,#0x0000
   1FF9 E5                 8217 	push	hl
                           8218 ;	genCall
   1FFA CDr4Fs04           8219 	call	_pport_receive
   1FFD F1                 8220 	pop	af
   1FFE F1                 8221 	pop	af
                           8222 ;main.c:1074: update_disks( key - 'a' );
                           8223 ;	genIpush
                           8224 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           8225 ;	AOP_EXSTK for _main_sloc4_1_0
   1FFF FD 21 02 00        8226 	ld	iy,#2
   2003 FD 39              8227 	add	iy,sp
   2005 FD 7E 00           8228 	ld	a,0(iy)
   2008 F5                 8229 	push	af
   2009 33                 8230 	inc	sp
                           8231 ;	genCall
   200A CDrEAs16           8232 	call	_update_disks
   200D 33                 8233 	inc	sp
                           8234 ;	genGoto
   200E C3rCBs19           8235 	jp	00217$
                           8236 ;	genLabel
   2011                    8237 00200$:
                           8238 ;main.c:1076: else if ( key >= 'A' && key <= 'D' )
                           8239 ;	genCmpLt
                           8240 ;	AOP_STK for _main_key_2_2
   2011 DD 7E AF           8241 	ld	a,-81(ix)
   2014 D6 41              8242 	sub	a,#0x41
   2016 DArBFs20           8243 	jp	C,00196$
                           8244 ;	genCmpGt
                           8245 ;	AOP_STK for _main_key_2_2
   2019 3E 44              8246 	ld	a,#0x44
   201B DD 96 AF           8247 	sub	a,-81(ix)
   201E DArBFs20           8248 	jp	C,00196$
                           8249 ;main.c:1079: word flags = get_flags();
                           8250 ;	genCall
                           8251 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2021 CDr97s16           8252 	call	_get_flags
   2024 44                 8253 	ld	b,h
   2025 4D                 8254 	ld	c,l
                           8255 ;	genAssign
                           8256 ;	AOP_EXSTK for _main_flags_3_17
   2026 FD 21 F6 00        8257 	ld	iy,#246
   202A FD 39              8258 	add	iy,sp
   202C FD 71 00           8259 	ld	0(iy),c
   202F FD 70 01           8260 	ld	1(iy),b
                           8261 ;main.c:1081: ddata[0] = key - 'A';
                           8262 ;	genAddrOf
   2032 21 F4 00           8263 	ld	hl,#0x00F4
   2035 39                 8264 	add	hl,sp
   2036 5D                 8265 	ld	e,l
   2037 54                 8266 	ld	d,h
                           8267 ;	genMinus
                           8268 ;	AOP_STK for _main_key_2_2
                           8269 ;	AOP_EXSTK for _main_sloc4_1_0
                           8270 ;	Shift into pair idx 0
   2038 21 02 00           8271 	ld	hl,#2
   203B 39                 8272 	add	hl,sp
   203C DD 7E AF           8273 	ld	a,-81(ix)
   203F C6 BF              8274 	add	a,#0xBF
   2041 77                 8275 	ld	(hl),a
                           8276 ;	genAssign (pointer)
                           8277 ;	AOP_EXSTK for _main_sloc4_1_0
                           8278 ;	isBitvar = 0
   2042 FD 21 02 00        8279 	ld	iy,#2
   2046 FD 39              8280 	add	iy,sp
   2048 FD 7E 00           8281 	ld	a,0(iy)
   204B 12                 8282 	ld	(de),a
                           8283 ;main.c:1082: ddata[1] = flags & ( 1 << ddata[0] ) ? 0 : 1;
                           8284 ;	genPlus
                           8285 ;	AOP_EXSTK for _main_sloc5_1_0
                           8286 ;	genPlusIncr
                           8287 ;	Shift into pair idx 0
   204C 21 00 00           8288 	ld	hl,#0
   204F 39                 8289 	add	hl,sp
   2050 7B                 8290 	ld	a,e
   2051 C6 01              8291 	add	a,#0x01
   2053 77                 8292 	ld	(hl),a
   2054 7A                 8293 	ld	a,d
   2055 CE 00              8294 	adc	a,#0x00
   2057 23                 8295 	inc	hl
   2058 77                 8296 	ld	(hl),a
                           8297 ;	genLeftShift
                           8298 ;	AOP_EXSTK for _main_sloc4_1_0
   2059 FD 7E 00           8299 	ld	a,0(iy)
   205C 3C                 8300 	inc	a
   205D F5                 8301 	push	af
   205E 01 01 00           8302 	ld	bc,#0x0001
   2061 F1                 8303 	pop	af
   2062 18 04              8304 	jr	00301$
   2064                    8305 00300$:
   2064 CB 21              8306 	sla	c
   2066 CB 10              8307 	rl	b
   2068                    8308 00301$:
   2068 3D                 8309 	dec	a
   2069 20 F9              8310 	jr	NZ,00300$
                           8311 ;	genAnd
                           8312 ;	AOP_EXSTK for _main_flags_3_17
   206B 79                 8313 	ld	a,c
   206C FD 21 F6 00        8314 	ld	iy,#246
   2070 FD 39              8315 	add	iy,sp
   2072 FD A6 00           8316 	and	a,0(iy)
   2075 4F                 8317 	ld	c,a
   2076 78                 8318 	ld	a,b
   2077 FD A6 01           8319 	and	a,1(iy)
                           8320 ;	genIfx
   207A 47                 8321 	ld	b,a
   207B B1                 8322 	or	a,c
   207C 28 04              8323 	jr	Z,00221$
                           8324 ;	genAssign
   207E 0E 00              8325 	ld	c,#0x00
                           8326 ;	genGoto
   2080 18 02              8327 	jr	00222$
                           8328 ;	genLabel
   2082                    8329 00221$:
                           8330 ;	genAssign
   2082 0E 01              8331 	ld	c,#0x01
                           8332 ;	genLabel
   2084                    8333 00222$:
                           8334 ;	genAssign (pointer)
                           8335 ;	AOP_EXSTK for _main_sloc5_1_0
                           8336 ;	isBitvar = 0
   2084 FD 21 00 00        8337 	ld	iy,#0
   2088 FD 39              8338 	add	iy,sp
   208A FD 6E 00           8339 	ld	l,0(iy)
   208D FD 66 01           8340 	ld	h,1(iy)
   2090 71                 8341 	ld	(hl),c
                           8342 ;main.c:1083: pport_send( PP_CMD_FCTL( PP_FCTL_DSK_WP ), 2, ddata );
                           8343 ;	genIpush
                           8344 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2091 D5                 8345 	push	de
                           8346 ;	genIpush
   2092 21 02 00           8347 	ld	hl,#0x0002
   2095 E5                 8348 	push	hl
                           8349 ;	genIpush
   2096 21 12 78           8350 	ld	hl,#0x7812
   2099 E5                 8351 	push	hl
                           8352 ;	genCall
   209A CDrB9s03           8353 	call	_pport_send
   209D F1                 8354 	pop	af
   209E F1                 8355 	pop	af
   209F F1                 8356 	pop	af
                           8357 ;main.c:1084: pport_receive( 0, 0 );
                           8358 ;	genIpush
                           8359 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   20A0 21 00 00           8360 	ld	hl,#0x0000
   20A3 E5                 8361 	push	hl
                           8362 ;	genIpush
   20A4 21 00 00           8363 	ld	hl,#0x0000
   20A7 E5                 8364 	push	hl
                           8365 ;	genCall
   20A8 CDr4Fs04           8366 	call	_pport_receive
   20AB F1                 8367 	pop	af
   20AC F1                 8368 	pop	af
                           8369 ;main.c:1085: update_disks( key - 'A' );
                           8370 ;	genIpush
                           8371 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           8372 ;	AOP_EXSTK for _main_sloc4_1_0
   20AD FD 21 02 00        8373 	ld	iy,#2
   20B1 FD 39              8374 	add	iy,sp
   20B3 FD 7E 00           8375 	ld	a,0(iy)
   20B6 F5                 8376 	push	af
   20B7 33                 8377 	inc	sp
                           8378 ;	genCall
   20B8 CDrEAs16           8379 	call	_update_disks
   20BB 33                 8380 	inc	sp
                           8381 ;	genGoto
   20BC C3rCBs19           8382 	jp	00217$
                           8383 ;	genLabel
   20BF                    8384 00196$:
                           8385 ;main.c:1087: else if ( key == 0x85 && files_size > 0 )
                           8386 ;	genCmpEq
                           8387 ;	AOP_STK for _main_key_2_2
                           8388 ; genCmpEq: left 1, right 1, result 0
   20BF DD 7E AF           8389 	ld	a,-81(ix)
   20C2 D6 85              8390 	sub	a,#0x85
   20C4 28 03              8391 	jr	Z,00303$
   20C6 C3r0Ds22           8392 	jp	00192$
   20C9                    8393 00303$:
                           8394 ;	genCmpGt
   20C9 3E 00              8395 	ld	a,#0x00
   20CB FD 21r00s38        8396 	ld	iy,#_files_size
   20CF FD 96 00           8397 	sub	a,0(iy)
   20D2 3E 00              8398 	ld	a,#0x00
   20D4 FD 9E 01           8399 	sbc	a,1(iy)
   20D7 F2r0Ds22           8400 	jp	P,00192$
                           8401 ;main.c:1091: strcpy( prompt, "Delete \"" );
                           8402 ;	genAddrOf
   20DA 21 D9 00           8403 	ld	hl,#0x00D9
   20DD 39                 8404 	add	hl,sp
   20DE 4D                 8405 	ld	c,l
   20DF 44                 8406 	ld	b,h
                           8407 ;	genIpush
                           8408 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   20E0 21r1Fs26           8409 	ld	hl,#__str_34
   20E3 E5                 8410 	push	hl
                           8411 ;	genIpush
   20E4 C5                 8412 	push	bc
                           8413 ;	genCall
   20E5 CDr00s00           8414 	call	_strcpy
   20E8 F1                 8415 	pop	af
   20E9 F1                 8416 	pop	af
                           8417 ;main.c:1092: strcat( prompt, name );
                           8418 ;	genAddrOf
   20EA 21 D9 00           8419 	ld	hl,#0x00D9
   20ED 39                 8420 	add	hl,sp
   20EE 4D                 8421 	ld	c,l
   20EF 44                 8422 	ld	b,h
                           8423 ;	genIpush
                           8424 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           8425 ;	AOP_STK for _main_name_2_2
   20F0 DD 6E AD           8426 	ld	l,-83(ix)
   20F3 DD 66 AE           8427 	ld	h,-82(ix)
   20F6 E5                 8428 	push	hl
                           8429 ;	genIpush
   20F7 C5                 8430 	push	bc
                           8431 ;	genCall
   20F8 CDr00s00           8432 	call	_strcat
   20FB F1                 8433 	pop	af
   20FC F1                 8434 	pop	af
                           8435 ;main.c:1093: strcat( prompt, "\"?" );
                           8436 ;	genAddrOf
   20FD 21 D9 00           8437 	ld	hl,#0x00D9
   2100 39                 8438 	add	hl,sp
   2101 4D                 8439 	ld	c,l
   2102 44                 8440 	ld	b,h
                           8441 ;	genIpush
                           8442 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2103 21r28s26           8443 	ld	hl,#__str_35
   2106 E5                 8444 	push	hl
                           8445 ;	genIpush
   2107 C5                 8446 	push	bc
                           8447 ;	genCall
   2108 CDr00s00           8448 	call	_strcat
   210B F1                 8449 	pop	af
   210C F1                 8450 	pop	af
                           8451 ;main.c:1095: if ( yes_or_no( prompt ) )
                           8452 ;	genAddrOf
   210D 21 D9 00           8453 	ld	hl,#0x00D9
   2110 39                 8454 	add	hl,sp
   2111 4D                 8455 	ld	c,l
   2112 44                 8456 	ld	b,h
                           8457 ;	genIpush
                           8458 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2113 C5                 8459 	push	bc
                           8460 ;	genCall
   2114 CDrDFs0D           8461 	call	_yes_or_no
   2117 44                 8462 	ld	b,h
   2118 4D                 8463 	ld	c,l
   2119 F1                 8464 	pop	af
                           8465 ;	genIfx
   211A 79                 8466 	ld	a,c
   211B B0                 8467 	or	a,b
   211C CAr04s22           8468 	jp	Z,00160$
                           8469 ;main.c:1098: strcpy( ddata, path );
                           8470 ;	genAddrOf
   211F 21 89 00           8471 	ld	hl,#0x0089
   2122 39                 8472 	add	hl,sp
   2123 4D                 8473 	ld	c,l
   2124 44                 8474 	ld	b,h
                           8475 ;	genIpush
                           8476 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2125 21r22s38           8477 	ld	hl,#_path
   2128 E5                 8478 	push	hl
                           8479 ;	genIpush
   2129 C5                 8480 	push	bc
                           8481 ;	genCall
   212A CDr00s00           8482 	call	_strcpy
   212D F1                 8483 	pop	af
   212E F1                 8484 	pop	af
                           8485 ;main.c:1099: strcat( ddata, name );
                           8486 ;	genAddrOf
   212F 21 89 00           8487 	ld	hl,#0x0089
   2132 39                 8488 	add	hl,sp
   2133 4D                 8489 	ld	c,l
   2134 44                 8490 	ld	b,h
                           8491 ;	genIpush
                           8492 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           8493 ;	AOP_STK for _main_name_2_2
   2135 DD 6E AD           8494 	ld	l,-83(ix)
   2138 DD 66 AE           8495 	ld	h,-82(ix)
   213B E5                 8496 	push	hl
                           8497 ;	genIpush
   213C C5                 8498 	push	bc
                           8499 ;	genCall
   213D CDr00s00           8500 	call	_strcat
   2140 F1                 8501 	pop	af
   2141 F1                 8502 	pop	af
                           8503 ;main.c:1101: if ( strlen( ddata ) <= 0x40 )
                           8504 ;	genAddrOf
   2142 21 89 00           8505 	ld	hl,#0x0089
   2145 39                 8506 	add	hl,sp
   2146 4D                 8507 	ld	c,l
   2147 44                 8508 	ld	b,h
                           8509 ;	genIpush
                           8510 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2148 C5                 8511 	push	bc
                           8512 ;	genCall
   2149 CDr00s00           8513 	call	_strlen
   214C 44                 8514 	ld	b,h
   214D 4D                 8515 	ld	c,l
   214E F1                 8516 	pop	af
                           8517 ;	genCmpGt
   214F 3E 40              8518 	ld	a,#0x40
   2151 91                 8519 	sub	a,c
   2152 3E 00              8520 	ld	a,#0x00
   2154 98                 8521 	sbc	a,b
   2155 FAr04s22           8522 	jp	M,00160$
                           8523 ;main.c:1103: int old_sel = files_sel;
                           8524 ;	genAssign
   2158 ED 4Br04s38        8525 	ld	bc,(_files_sel)
                           8526 ;main.c:1104: int old_files_table_start = files_table_start;
                           8527 ;	genAssign
                           8528 ;	AOP_EXSTK for _main_old_files_table_start_5_20
   215C 2Ar02s38           8529 	ld	hl,(_files_table_start)
   215F FD 21 87 00        8530 	ld	iy,#135
   2163 FD 39              8531 	add	iy,sp
   2165 FD 75 00           8532 	ld	0(iy),l
   2168 FD 74 01           8533 	ld	1(iy),h
                           8534 ;main.c:1106: hide_sel();
                           8535 ;	genCall
                           8536 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   216B C5                 8537 	push	bc
   216C CDr16s15           8538 	call	_hide_sel
   216F C1                 8539 	pop	bc
                           8540 ;main.c:1108: pport_send( PP_CMD_FCTL( PP_FCTL_DEL ), 0x40, ddata );
                           8541 ;	genAddrOf
   2170 21 89 00           8542 	ld	hl,#0x0089
   2173 39                 8543 	add	hl,sp
   2174 5D                 8544 	ld	e,l
   2175 54                 8545 	ld	d,h
                           8546 ;	genIpush
                           8547 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   2176 C5                 8548 	push	bc
   2177 D5                 8549 	push	de
                           8550 ;	genIpush
   2178 21 40 00           8551 	ld	hl,#0x0040
   217B E5                 8552 	push	hl
                           8553 ;	genIpush
   217C 21 09 78           8554 	ld	hl,#0x7809
   217F E5                 8555 	push	hl
                           8556 ;	genCall
   2180 CDrB9s03           8557 	call	_pport_send
   2183 F1                 8558 	pop	af
   2184 F1                 8559 	pop	af
   2185 F1                 8560 	pop	af
   2186 C1                 8561 	pop	bc
                           8562 ;main.c:1109: pport_receive( 0, 0 );
                           8563 ;	genIpush
                           8564 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   2187 C5                 8565 	push	bc
   2188 21 00 00           8566 	ld	hl,#0x0000
   218B E5                 8567 	push	hl
                           8568 ;	genIpush
   218C 21 00 00           8569 	ld	hl,#0x0000
   218F E5                 8570 	push	hl
                           8571 ;	genCall
   2190 CDr4Fs04           8572 	call	_pport_receive
   2193 F1                 8573 	pop	af
   2194 F1                 8574 	pop	af
   2195 C1                 8575 	pop	bc
                           8576 ;main.c:1111: if (( byte ) pport_result == FR_DENIED )
                           8577 ;	genCast
   2196 FD 21r63s38        8578 	ld	iy,#_pport_result
   219A FD 5E 00           8579 	ld	e,0(iy)
                           8580 ;	genCmpEq
                           8581 ; genCmpEq: left 1, right 1, result 0
   219D 7B                 8582 	ld	a,e
   219E D6 07              8583 	sub	a,#0x07
   21A0 28 02              8584 	jr	Z,00305$
   21A2 18 31              8585 	jr	00155$
   21A4                    8586 00305$:
                           8587 ;main.c:1113: text_out_pos_8( "ACCESS DENIED", 9, 4, 0, 0xff );
                           8588 ;	genIpush
                           8589 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   21A4 21 00 FF           8590 	ld	hl,#0xFF00
   21A7 E5                 8591 	push	hl
                           8592 ;	genIpush
   21A8 21 09 04           8593 	ld	hl,#0x0409
   21AB E5                 8594 	push	hl
                           8595 ;	genIpush
   21AC 21r2Bs26           8596 	ld	hl,#__str_36
   21AF E5                 8597 	push	hl
                           8598 ;	genCall
   21B0 CDr00s00           8599 	call	_text_out_pos_8
   21B3 F1                 8600 	pop	af
   21B4 F1                 8601 	pop	af
   21B5 F1                 8602 	pop	af
                           8603 ;main.c:1114: set_attr( 0302, 9, 4, 13 );
                           8604 ;	genIpush
                           8605 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   21B6 21 04 0D           8606 	ld	hl,#0x0D04
   21B9 E5                 8607 	push	hl
                           8608 ;	genIpush
   21BA 21 C2 09           8609 	ld	hl,#0x09C2
   21BD E5                 8610 	push	hl
                           8611 ;	genCall
   21BE CDr00s00           8612 	call	_set_attr
   21C1 F1                 8613 	pop	af
   21C2 F1                 8614 	pop	af
                           8615 ;main.c:1116: getkey();
                           8616 ;	genCall
                           8617 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   21C3 CDrF2s01           8618 	call	_getkey
                           8619 ;main.c:1117: set_attr( 07, 9, 4, 13 );
                           8620 ;	genIpush
                           8621 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   21C6 21 04 0D           8622 	ld	hl,#0x0D04
   21C9 E5                 8623 	push	hl
                           8624 ;	genIpush
   21CA 21 07 09           8625 	ld	hl,#0x0907
   21CD E5                 8626 	push	hl
                           8627 ;	genCall
   21CE CDr00s00           8628 	call	_set_attr
   21D1 F1                 8629 	pop	af
   21D2 F1                 8630 	pop	af
                           8631 ;	genGoto
   21D3 18 2F              8632 	jr	00160$
                           8633 ;	genLabel
   21D5                    8634 00155$:
                           8635 ;main.c:1121: read_dir();
                           8636 ;	genCall
                           8637 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   21D5 C5                 8638 	push	bc
   21D6 CDrDEs0B           8639 	call	_read_dir
   21D9 C1                 8640 	pop	bc
                           8641 ;main.c:1123: files_sel = old_sel;
                           8642 ;	genAssign
   21DA FD 21r04s38        8643 	ld	iy,#_files_sel
   21DE FD 71 00           8644 	ld	0(iy),c
   21E1 FD 70 01           8645 	ld	1(iy),b
                           8646 ;main.c:1124: files_table_start = old_files_table_start;
                           8647 ;	genAssign
                           8648 ;	AOP_EXSTK for _main_old_files_table_start_5_20
   21E4 FD 21 87 00        8649 	ld	iy,#135
   21E8 FD 39              8650 	add	iy,sp
   21EA FD 7E 00           8651 	ld	a,0(iy)
   21ED FD 21r02s38        8652 	ld	iy,#_files_table_start
   21F1 FD 77 00           8653 	ld	0(iy),a
   21F4 FD 21 87 00        8654 	ld	iy,#135
   21F8 FD 39              8655 	add	iy,sp
   21FA FD 7E 01           8656 	ld	a,1(iy)
   21FD FD 21r02s38        8657 	ld	iy,#_files_table_start
   2201 FD 77 01           8658 	ld	1(iy),a
                           8659 ;	genLabel
   2204                    8660 00160$:
                           8661 ;main.c:1129: show_table();
                           8662 ;	genCall
                           8663 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2204 CDrA8s06           8664 	call	_show_table
                           8665 ;main.c:1130: show_sel();
                           8666 ;	genCall
                           8667 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2207 CDr2Es15           8668 	call	_show_sel
                           8669 ;	genGoto
   220A C3rCBs19           8670 	jp	00217$
                           8671 ;	genLabel
   220D                    8672 00192$:
                           8673 ;main.c:1132: else if ( key == 0x86 && files_size > 0 )
                           8674 ;	genCmpEq
                           8675 ;	AOP_STK for _main_key_2_2
                           8676 ; genCmpEq: left 1, right 1, result 0
   220D DD 7E AF           8677 	ld	a,-81(ix)
   2210 D6 86              8678 	sub	a,#0x86
   2212 28 03              8679 	jr	Z,00307$
   2214 C3r70s25           8680 	jp	00188$
   2217                    8681 00307$:
                           8682 ;	genCmpGt
   2217 3E 00              8683 	ld	a,#0x00
   2219 FD 21r00s38        8684 	ld	iy,#_files_size
   221D FD 96 00           8685 	sub	a,0(iy)
   2220 3E 00              8686 	ld	a,#0x00
   2222 FD 9E 01           8687 	sbc	a,1(iy)
   2225 F2r70s25           8688 	jp	P,00188$
                           8689 ;main.c:1137: hide_sel();
                           8690 ;	genCall
                           8691 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2228 CDr16s15           8692 	call	_hide_sel
                           8693 ;main.c:1139: if ( input_box( "New filename", name, new_name, 30 ) > 0 )
                           8694 ;	genAddrOf
   222B 21 17 00           8695 	ld	hl,#0x0017
   222E 39                 8696 	add	hl,sp
   222F 4D                 8697 	ld	c,l
   2230 44                 8698 	ld	b,h
                           8699 ;	genIpush
                           8700 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2231 21 1E 00           8701 	ld	hl,#0x001E
   2234 E5                 8702 	push	hl
                           8703 ;	genIpush
   2235 C5                 8704 	push	bc
                           8705 ;	genIpush
                           8706 ;	AOP_STK for _main_name_2_2
   2236 DD 6E AD           8707 	ld	l,-83(ix)
   2239 DD 66 AE           8708 	ld	h,-82(ix)
   223C E5                 8709 	push	hl
                           8710 ;	genIpush
   223D 21r39s26           8711 	ld	hl,#__str_37
   2240 E5                 8712 	push	hl
                           8713 ;	genCall
   2241 CDr84s10           8714 	call	_input_box
   2244 44                 8715 	ld	b,h
   2245 4D                 8716 	ld	c,l
   2246 F1                 8717 	pop	af
   2247 F1                 8718 	pop	af
   2248 F1                 8719 	pop	af
   2249 F1                 8720 	pop	af
                           8721 ;	genCmpGt
   224A 3E 00              8722 	ld	a,#0x00
   224C 91                 8723 	sub	a,c
   224D 3E 00              8724 	ld	a,#0x00
   224F 98                 8725 	sbc	a,b
   2250 F2r67s25           8726 	jp	P,00184$
                           8727 ;main.c:1141: if ( new_name[0] != 0 && strlen( path ) + strlen( name ) + 2 <= 0x40 && strlen( path ) + strlen( new_name ) + 2 <= 0x40 )
                           8728 ;	genPointerGet
                           8729 ;	AOP_EXSTK for _main_sloc0_1_0
   2253 FD 21 0A 00        8730 	ld	iy,#10
   2257 FD 39              8731 	add	iy,sp
   2259 FD 6E 00           8732 	ld	l,0(iy)
   225C FD 66 01           8733 	ld	h,1(iy)
   225F 7E                 8734 	ld	a,(hl)
                           8735 ;	genIfx
   2260 B7                 8736 	or	a,a
   2261 CAr67s25           8737 	jp	Z,00184$
                           8738 ;	genIpush
                           8739 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2264 21r22s38           8740 	ld	hl,#_path
   2267 E5                 8741 	push	hl
                           8742 ;	genCall
   2268 CDr00s00           8743 	call	_strlen
   226B 44                 8744 	ld	b,h
   226C 4D                 8745 	ld	c,l
   226D F1                 8746 	pop	af
                           8747 ;	genIpush
                           8748 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   226E C5                 8749 	push	bc
                           8750 ;	AOP_STK for _main_name_2_2
   226F DD 6E AD           8751 	ld	l,-83(ix)
   2272 DD 66 AE           8752 	ld	h,-82(ix)
   2275 E5                 8753 	push	hl
                           8754 ;	genCall
   2276 CDr00s00           8755 	call	_strlen
   2279 54                 8756 	ld	d,h
   227A 5D                 8757 	ld	e,l
   227B F1                 8758 	pop	af
   227C C1                 8759 	pop	bc
                           8760 ;	genPlus
   227D 79                 8761 	ld	a,c
   227E 83                 8762 	add	a,e
   227F 4F                 8763 	ld	c,a
   2280 78                 8764 	ld	a,b
   2281 8A                 8765 	adc	a,d
   2282 47                 8766 	ld	b,a
                           8767 ;	genPlus
                           8768 ;	genPlusIncr
   2283 03                 8769 	inc	bc
   2284 03                 8770 	inc	bc
                           8771 ;	genCmpGt
   2285 3E 40              8772 	ld	a,#0x40
   2287 91                 8773 	sub	a,c
   2288 3E 00              8774 	ld	a,#0x00
   228A 98                 8775 	sbc	a,b
   228B FAr67s25           8776 	jp	M,00184$
                           8777 ;	genIpush
                           8778 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   228E 21r22s38           8779 	ld	hl,#_path
   2291 E5                 8780 	push	hl
                           8781 ;	genCall
   2292 CDr00s00           8782 	call	_strlen
   2295 44                 8783 	ld	b,h
   2296 4D                 8784 	ld	c,l
   2297 F1                 8785 	pop	af
                           8786 ;	genIpush
                           8787 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   2298 C5                 8788 	push	bc
                           8789 ;	AOP_EXSTK for _main_sloc0_1_0
   2299 FD 21 0C 00        8790 	ld	iy,#12
   229D FD 39              8791 	add	iy,sp
   229F FD 6E 00           8792 	ld	l,0(iy)
   22A2 FD 66 01           8793 	ld	h,1(iy)
   22A5 E5                 8794 	push	hl
                           8795 ;	genCall
   22A6 CDr00s00           8796 	call	_strlen
   22A9 54                 8797 	ld	d,h
   22AA 5D                 8798 	ld	e,l
   22AB F1                 8799 	pop	af
   22AC C1                 8800 	pop	bc
                           8801 ;	genPlus
   22AD 79                 8802 	ld	a,c
   22AE 83                 8803 	add	a,e
   22AF 4F                 8804 	ld	c,a
   22B0 78                 8805 	ld	a,b
   22B1 8A                 8806 	adc	a,d
   22B2 47                 8807 	ld	b,a
                           8808 ;	genPlus
                           8809 ;	genPlusIncr
   22B3 03                 8810 	inc	bc
   22B4 03                 8811 	inc	bc
                           8812 ;	genCmpGt
   22B5 3E 40              8813 	ld	a,#0x40
   22B7 91                 8814 	sub	a,c
   22B8 3E 00              8815 	ld	a,#0x00
   22BA 98                 8816 	sbc	a,b
   22BB FAr67s25           8817 	jp	M,00184$
                           8818 ;main.c:1143: int old_sel = files_sel;
                           8819 ;	genAssign
                           8820 ;	AOP_EXSTK for _main_old_sel_5_25
   22BE 2Ar04s38           8821 	ld	hl,(_files_sel)
   22C1 FD 21 15 00        8822 	ld	iy,#21
   22C5 FD 39              8823 	add	iy,sp
   22C7 FD 75 00           8824 	ld	0(iy),l
   22CA FD 74 01           8825 	ld	1(iy),h
                           8826 ;main.c:1144: int old_files_table_start = files_table_start;
                           8827 ;	genAssign
                           8828 ;	AOP_EXSTK for _main_old_files_table_start_5_25
   22CD 2Ar02s38           8829 	ld	hl,(_files_table_start)
   22D0 FD 21 13 00        8830 	ld	iy,#19
   22D4 FD 39              8831 	add	iy,sp
   22D6 FD 75 00           8832 	ld	0(iy),l
   22D9 FD 74 01           8833 	ld	1(iy),h
                           8834 ;main.c:1148: hide_sel();
                           8835 ;	genCall
                           8836 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   22DC CDr16s15           8837 	call	_hide_sel
                           8838 ;main.c:1150: strcpy( ddata, path );
                           8839 ;	genAddrOf
   22DF 21 37 00           8840 	ld	hl,#0x0037
   22E2 39                 8841 	add	hl,sp
   22E3 5D                 8842 	ld	e,l
   22E4 54                 8843 	ld	d,h
                           8844 ;	genIpush
                           8845 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   22E5 21r22s38           8846 	ld	hl,#_path
   22E8 E5                 8847 	push	hl
                           8848 ;	genIpush
   22E9 D5                 8849 	push	de
                           8850 ;	genCall
   22EA CDr00s00           8851 	call	_strcpy
   22ED F1                 8852 	pop	af
   22EE F1                 8853 	pop	af
                           8854 ;main.c:1151: strcat( ddata, name );
                           8855 ;	genAddrOf
   22EF 21 37 00           8856 	ld	hl,#0x0037
   22F2 39                 8857 	add	hl,sp
   22F3 5D                 8858 	ld	e,l
   22F4 54                 8859 	ld	d,h
                           8860 ;	genIpush
                           8861 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           8862 ;	AOP_STK for _main_name_2_2
   22F5 DD 6E AD           8863 	ld	l,-83(ix)
   22F8 DD 66 AE           8864 	ld	h,-82(ix)
   22FB E5                 8865 	push	hl
                           8866 ;	genIpush
   22FC D5                 8867 	push	de
                           8868 ;	genCall
   22FD CDr00s00           8869 	call	_strcat
   2300 F1                 8870 	pop	af
   2301 F1                 8871 	pop	af
                           8872 ;main.c:1152: data_part2 = ddata + strlen( ddata ) + 1;
                           8873 ;	genAddrOf
   2302 21 37 00           8874 	ld	hl,#0x0037
   2305 39                 8875 	add	hl,sp
   2306 5D                 8876 	ld	e,l
   2307 54                 8877 	ld	d,h
                           8878 ;	genIpush
                           8879 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   2308 D5                 8880 	push	de
   2309 D5                 8881 	push	de
                           8882 ;	genCall
   230A CDr00s00           8883 	call	_strlen
   230D 44                 8884 	ld	b,h
   230E 4D                 8885 	ld	c,l
   230F F1                 8886 	pop	af
   2310 D1                 8887 	pop	de
                           8888 ;	genPlus
   2311 7B                 8889 	ld	a,e
   2312 81                 8890 	add	a,c
   2313 4F                 8891 	ld	c,a
   2314 7A                 8892 	ld	a,d
   2315 88                 8893 	adc	a,b
   2316 47                 8894 	ld	b,a
                           8895 ;	genPlus
                           8896 ;	AOP_EXSTK for _main_data_part2_5_25
                           8897 ;	genPlusIncr
                           8898 ;	Shift into pair idx 0
   2317 21 11 00           8899 	ld	hl,#17
   231A 39                 8900 	add	hl,sp
   231B 79                 8901 	ld	a,c
   231C C6 01              8902 	add	a,#0x01
   231E 77                 8903 	ld	(hl),a
   231F 78                 8904 	ld	a,b
   2320 CE 00              8905 	adc	a,#0x00
   2322 23                 8906 	inc	hl
   2323 77                 8907 	ld	(hl),a
                           8908 ;main.c:1153: strcpy( data_part2, "_" );
                           8909 ;	genIpush
                           8910 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2324 21r46s26           8911 	ld	hl,#__str_38
   2327 E5                 8912 	push	hl
                           8913 ;	genIpush
                           8914 ;	AOP_EXSTK for _main_data_part2_5_25
   2328 FD 21 13 00        8915 	ld	iy,#19
   232C FD 39              8916 	add	iy,sp
   232E FD 6E 00           8917 	ld	l,0(iy)
   2331 FD 66 01           8918 	ld	h,1(iy)
   2334 E5                 8919 	push	hl
                           8920 ;	genCall
   2335 CDr00s00           8921 	call	_strcpy
   2338 F1                 8922 	pop	af
   2339 F1                 8923 	pop	af
                           8924 ;main.c:1155: pport_send( PP_CMD_FCTL( PP_FCTL_RENAME ), 0x40, ddata );
                           8925 ;	genAddrOf
   233A 21 37 00           8926 	ld	hl,#0x0037
   233D 39                 8927 	add	hl,sp
   233E 5D                 8928 	ld	e,l
   233F 54                 8929 	ld	d,h
                           8930 ;	genIpush
                           8931 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2340 D5                 8932 	push	de
                           8933 ;	genIpush
   2341 21 40 00           8934 	ld	hl,#0x0040
   2344 E5                 8935 	push	hl
                           8936 ;	genIpush
   2345 21 08 78           8937 	ld	hl,#0x7808
   2348 E5                 8938 	push	hl
                           8939 ;	genCall
   2349 CDrB9s03           8940 	call	_pport_send
   234C F1                 8941 	pop	af
   234D F1                 8942 	pop	af
   234E F1                 8943 	pop	af
                           8944 ;main.c:1156: pport_receive( 0, 0 );
                           8945 ;	genIpush
                           8946 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   234F 21 00 00           8947 	ld	hl,#0x0000
   2352 E5                 8948 	push	hl
                           8949 ;	genIpush
   2353 21 00 00           8950 	ld	hl,#0x0000
   2356 E5                 8951 	push	hl
                           8952 ;	genCall
   2357 CDr4Fs04           8953 	call	_pport_receive
   235A F1                 8954 	pop	af
   235B F1                 8955 	pop	af
                           8956 ;main.c:1161: strcpy( ddata, "_" );
                           8957 ;	genAddrOf
   235C 21 37 00           8958 	ld	hl,#0x0037
   235F 39                 8959 	add	hl,sp
   2360 5D                 8960 	ld	e,l
   2361 54                 8961 	ld	d,h
                           8962 ;	genIpush
                           8963 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2362 21r46s26           8964 	ld	hl,#__str_38
   2365 E5                 8965 	push	hl
                           8966 ;	genIpush
   2366 D5                 8967 	push	de
                           8968 ;	genCall
   2367 CDr00s00           8969 	call	_strcpy
   236A F1                 8970 	pop	af
   236B F1                 8971 	pop	af
                           8972 ;main.c:1162: data_part2 = ddata + 2;
                           8973 ;	genAssign
                           8974 ;	AOP_EXSTK for _main_sloc1_1_0
                           8975 ;	AOP_EXSTK for _main_data_part2_5_25
   236C FD 21 08 00        8976 	ld	iy,#8
   2370 FD 39              8977 	add	iy,sp
   2372 FD 7E 00           8978 	ld	a,0(iy)
   2375 FD 21 11 00        8979 	ld	iy,#17
   2379 FD 39              8980 	add	iy,sp
   237B FD 77 00           8981 	ld	0(iy),a
   237E FD 21 08 00        8982 	ld	iy,#8
   2382 FD 39              8983 	add	iy,sp
   2384 FD 7E 01           8984 	ld	a,1(iy)
   2387 FD 21 11 00        8985 	ld	iy,#17
   238B FD 39              8986 	add	iy,sp
   238D FD 77 01           8987 	ld	1(iy),a
                           8988 ;main.c:1164: if( new_name[0] == '/' )
                           8989 ;	genPointerGet
                           8990 ;	AOP_EXSTK for _main_sloc0_1_0
   2390 FD 21 0A 00        8991 	ld	iy,#10
   2394 FD 39              8992 	add	iy,sp
   2396 FD 6E 00           8993 	ld	l,0(iy)
   2399 FD 66 01           8994 	ld	h,1(iy)
   239C 5E                 8995 	ld	e,(hl)
                           8996 ;	genCmpEq
                           8997 ; genCmpEq: left 1, right 1, result 0
   239D 7B                 8998 	ld	a,e
   239E D6 2F              8999 	sub	a,#0x2F
   23A0 28 02              9000 	jr	Z,00309$
   23A2 18 23              9001 	jr	00177$
   23A4                    9002 00309$:
                           9003 ;main.c:1166: strcpy( data_part2, new_name + 1 );
                           9004 ;	genPlus
                           9005 ;	AOP_EXSTK for _main_sloc0_1_0
                           9006 ;	genPlusIncr
   23A4 FD 21 0A 00        9007 	ld	iy,#10
   23A8 FD 39              9008 	add	iy,sp
   23AA FD 5E 00           9009 	ld	e,0(iy)
   23AD FD 56 01           9010 	ld	d,1(iy)
   23B0 13                 9011 	inc	de
                           9012 ;	genIpush
                           9013 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   23B1 D5                 9014 	push	de
                           9015 ;	genIpush
                           9016 ;	AOP_EXSTK for _main_data_part2_5_25
   23B2 FD 21 13 00        9017 	ld	iy,#19
   23B6 FD 39              9018 	add	iy,sp
   23B8 FD 6E 00           9019 	ld	l,0(iy)
   23BB FD 66 01           9020 	ld	h,1(iy)
   23BE E5                 9021 	push	hl
                           9022 ;	genCall
   23BF CDr00s00           9023 	call	_strcpy
   23C2 F1                 9024 	pop	af
   23C3 F1                 9025 	pop	af
                           9026 ;	genGoto
   23C4 C3rFCs24           9027 	jp	00178$
                           9028 ;	genLabel
   23C7                    9029 00177$:
                           9030 ;main.c:1170: byte path_size = strlen( path );
                           9031 ;	genIpush
                           9032 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   23C7 21r22s38           9033 	ld	hl,#_path
   23CA E5                 9034 	push	hl
                           9035 ;	genCall
   23CB CDr00s00           9036 	call	_strlen
   23CE 54                 9037 	ld	d,h
   23CF 5D                 9038 	ld	e,l
   23D0 F1                 9039 	pop	af
                           9040 ;	genCast
                           9041 ;	AOP_EXSTK for _main_path_size_6_27
   23D1 FD 21 10 00        9042 	ld	iy,#16
   23D5 FD 39              9043 	add	iy,sp
   23D7 FD 73 00           9044 	ld	0(iy),e
                           9045 ;main.c:1171: char *new_name_ptr = new_name;
                           9046 ;	genAssign
                           9047 ;	AOP_EXSTK for _main_sloc0_1_0
   23DA FD 21 0A 00        9048 	ld	iy,#10
   23DE FD 39              9049 	add	iy,sp
   23E0 FD 46 00           9050 	ld	b,0(iy)
   23E3 FD 4E 01           9051 	ld	c,1(iy)
                           9052 ;	genAssign
                           9053 ;	(registers are the same)
                           9054 ;main.c:1173: while( new_name_ptr[0] == '.' && new_name_ptr[1] == '/' ) new_name_ptr += 2;
                           9055 ;	genAssign
   23E6 50                 9056 	ld	d,b
                           9057 ;	genLabel
   23E7                    9058 00162$:
                           9059 ;	genPointerGet
   23E7 6A                 9060 	ld	l,d
   23E8 61                 9061 	ld	h,c
   23E9 46                 9062 	ld	b,(hl)
                           9063 ;	genCmpEq
                           9064 ; genCmpEq: left 1, right 1, result 0
   23EA 78                 9065 	ld	a,b
   23EB D6 2E              9066 	sub	a,#0x2E
   23ED 28 02              9067 	jr	Z,00311$
   23EF 18 1C              9068 	jr	00281$
   23F1                    9069 00311$:
                           9070 ;	genPlus
                           9071 ;	genPlusIncr
   23F1 7A                 9072 	ld	a,d
   23F2 C6 01              9073 	add	a,#0x01
   23F4 47                 9074 	ld	b,a
   23F5 79                 9075 	ld	a,c
   23F6 CE 00              9076 	adc	a,#0x00
   23F8 5F                 9077 	ld	e,a
                           9078 ;	genPointerGet
   23F9 68                 9079 	ld	l,b
   23FA 63                 9080 	ld	h,e
   23FB 46                 9081 	ld	b,(hl)
                           9082 ;	genCmpEq
                           9083 ; genCmpEq: left 1, right 1, result 0
   23FC 78                 9084 	ld	a,b
   23FD D6 2F              9085 	sub	a,#0x2F
   23FF 28 02              9086 	jr	Z,00313$
   2401 18 0A              9087 	jr	00281$
   2403                    9088 00313$:
                           9089 ;	genPlus
                           9090 ;	genPlusIncr
   2403 7A                 9091 	ld	a,d
   2404 C6 02              9092 	add	a,#0x02
   2406 57                 9093 	ld	d,a
   2407 79                 9094 	ld	a,c
   2408 CE 00              9095 	adc	a,#0x00
   240A 4F                 9096 	ld	c,a
                           9097 ;	genGoto
   240B 18 DA              9098 	jr	00162$
                           9099 ;main.c:1174: while( new_name_ptr[0] == '.' && new_name_ptr[1] == '.' && new_name_ptr[2] == '/' )
                           9100 ;	genLabel
   240D                    9101 00281$:
                           9102 ;	genAssign
                           9103 ;	AOP_EXSTK for _main_new_name_ptr_6_27
   240D FD 21 0E 00        9104 	ld	iy,#14
   2411 FD 39              9105 	add	iy,sp
   2413 FD 72 00           9106 	ld	0(iy),d
   2416 FD 71 01           9107 	ld	1(iy),c
                           9108 ;	genLabel
   2419                    9109 00173$:
                           9110 ;	genPointerGet
                           9111 ;	AOP_EXSTK for _main_new_name_ptr_6_27
   2419 FD 21 0E 00        9112 	ld	iy,#14
   241D FD 39              9113 	add	iy,sp
   241F FD 6E 00           9114 	ld	l,0(iy)
   2422 FD 66 01           9115 	ld	h,1(iy)
   2425 5E                 9116 	ld	e,(hl)
                           9117 ;	genCmpEq
                           9118 ; genCmpEq: left 1, right 1, result 0
   2426 7B                 9119 	ld	a,e
   2427 D6 2E              9120 	sub	a,#0x2E
   2429 28 03              9121 	jr	Z,00315$
   242B C3rB1s24           9122 	jp	00175$
   242E                    9123 00315$:
                           9124 ;	genPlus
                           9125 ;	AOP_EXSTK for _main_new_name_ptr_6_27
                           9126 ;	genPlusIncr
   242E FD 21 0E 00        9127 	ld	iy,#14
   2432 FD 39              9128 	add	iy,sp
   2434 FD 5E 00           9129 	ld	e,0(iy)
   2437 FD 56 01           9130 	ld	d,1(iy)
   243A 13                 9131 	inc	de
                           9132 ;	genPointerGet
   243B 1A                 9133 	ld	a,(de)
                           9134 ;	genCmpEq
                           9135 ; genCmpEq: left 1, right 1, result 0
   243C 5F                 9136 	ld	e,a
   243D D6 2E              9137 	sub	a,#0x2E
   243F 28 03              9138 	jr	Z,00317$
   2441 C3rB1s24           9139 	jp	00175$
   2444                    9140 00317$:
                           9141 ;	genPlus
                           9142 ;	AOP_EXSTK for _main_new_name_ptr_6_27
                           9143 ;	genPlusIncr
   2444 FD 21 0E 00        9144 	ld	iy,#14
   2448 FD 39              9145 	add	iy,sp
   244A FD 5E 00           9146 	ld	e,0(iy)
   244D FD 56 01           9147 	ld	d,1(iy)
   2450 13                 9148 	inc	de
   2451 13                 9149 	inc	de
                           9150 ;	genPointerGet
   2452 1A                 9151 	ld	a,(de)
                           9152 ;	genCmpEq
                           9153 ; genCmpEq: left 1, right 1, result 0
   2453 5F                 9154 	ld	e,a
   2454 D6 2F              9155 	sub	a,#0x2F
   2456 28 03              9156 	jr	Z,00319$
   2458 C3rB1s24           9157 	jp	00175$
   245B                    9158 00319$:
                           9159 ;main.c:1176: if( path_size != 0 )
                           9160 ;	genIfx
                           9161 ;	AOP_EXSTK for _main_path_size_6_27
   245B AF                 9162 	xor	a,a
   245C FD 21 10 00        9163 	ld	iy,#16
   2460 FD 39              9164 	add	iy,sp
   2462 FD B6 00           9165 	or	a,0(iy)
   2465 28 30              9166 	jr	Z,00170$
                           9167 ;main.c:1178: path_size--;
                           9168 ;	genMinus
                           9169 ;	AOP_EXSTK for _main_path_size_6_27
   2467 FD 35 00           9170 	dec	0(iy)
                           9171 ;main.c:1179: while ( path_size != 0 && path[ path_size - 1 ] != '/' ) path_size--;
                           9172 ;	genLabel
   246A                    9173 00166$:
                           9174 ;	genIfx
                           9175 ;	AOP_EXSTK for _main_path_size_6_27
   246A AF                 9176 	xor	a,a
   246B FD 21 10 00        9177 	ld	iy,#16
   246F FD 39              9178 	add	iy,sp
   2471 FD B6 00           9179 	or	a,0(iy)
   2474 28 21              9180 	jr	Z,00170$
                           9181 ;	genMinus
                           9182 ;	AOP_EXSTK for _main_path_size_6_27
   2476 FD 7E 00           9183 	ld	a,0(iy)
   2479 C6 FF              9184 	add	a,#0xFF
                           9185 ;	genPlus
   247B 5F                 9186 	ld	e, a
   247C C6r22              9187 	add	a,#<_path
   247E 57                 9188 	ld	d,a
   247F 3Es38              9189 	ld	a,#>_path
   2481 CE 00              9190 	adc	a,#0x00
   2483 4F                 9191 	ld	c,a
                           9192 ;	genPointerGet
   2484 6A                 9193 	ld	l,d
   2485 61                 9194 	ld	h,c
   2486 56                 9195 	ld	d,(hl)
                           9196 ;	genCmpEq
                           9197 ; genCmpEq: left 1, right 1, result 0
   2487 7A                 9198 	ld	a,d
   2488 D6 2F              9199 	sub	a,#0x2F
   248A 28 0B              9200 	jr	Z,00170$
                           9201 ;	genAssign
                           9202 ;	(registers are the same)
                           9203 ;	genAssign
                           9204 ;	AOP_EXSTK for _main_path_size_6_27
   248C FD 21 10 00        9205 	ld	iy,#16
   2490 FD 39              9206 	add	iy,sp
   2492 FD 73 00           9207 	ld	0(iy),e
                           9208 ;	genGoto
   2495 18 D3              9209 	jr	00166$
                           9210 ;	genLabel
   2497                    9211 00170$:
                           9212 ;main.c:1182: new_name_ptr += 3;
                           9213 ;	genPlus
                           9214 ;	AOP_EXSTK for _main_new_name_ptr_6_27
                           9215 ;	genPlusIncr
                           9216 ;	Shift into pair idx 0
   2497 21 0E 00           9217 	ld	hl,#14
   249A 39                 9218 	add	hl,sp
   249B 7E                 9219 	ld	a,(hl)
   249C C6 03              9220 	add	a,#0x03
   249E 23                 9221 	inc	hl
   249F 2B                 9222 	dec	hl
                           9223 ;	Addition result is in same register as operand of next addition.
   24A0 C5                 9224 	push	bc
   24A1 4F                 9225 	ld	c, a
   24A2 23                 9226 	inc	hl
   24A3 7E                 9227 	ld	a, (hl)
   24A4 47                 9228 	ld	b, a
   24A5 79                 9229 	ld	a, c
   24A6 2B                 9230 	dec	hl
   24A7 77                 9231 	ld	(hl), a
   24A8 78                 9232 	ld	a, b
   24A9 C1                 9233 	pop	bc
   24AA CE 00              9234 	adc	a,#0x00
   24AC 23                 9235 	inc	hl
   24AD 77                 9236 	ld	(hl),a
                           9237 ;	genGoto
   24AE C3r19s24           9238 	jp	00173$
                           9239 ;	genLabel
   24B1                    9240 00175$:
                           9241 ;main.c:1185: strncpy( data_part2, path, path_size );
                           9242 ;	genCast
                           9243 ;	AOP_EXSTK for _main_path_size_6_27
   24B1 FD 21 10 00        9244 	ld	iy,#16
   24B5 FD 39              9245 	add	iy,sp
   24B7 FD 4E 00           9246 	ld	c,0(iy)
   24BA 06 00              9247 	ld	b,#0x00
                           9248 ;	genIpush
                           9249 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   24BC C5                 9250 	push	bc
                           9251 ;	genIpush
   24BD 21r22s38           9252 	ld	hl,#_path
   24C0 E5                 9253 	push	hl
                           9254 ;	genIpush
                           9255 ;	AOP_EXSTK for _main_data_part2_5_25
   24C1 FD 21 15 00        9256 	ld	iy,#21
   24C5 FD 39              9257 	add	iy,sp
   24C7 FD 6E 00           9258 	ld	l,0(iy)
   24CA FD 66 01           9259 	ld	h,1(iy)
   24CD E5                 9260 	push	hl
                           9261 ;	genCall
   24CE CDr00s00           9262 	call	_strncpy
   24D1 F1                 9263 	pop	af
   24D2 F1                 9264 	pop	af
   24D3 F1                 9265 	pop	af
                           9266 ;main.c:1186: strcpy( data_part2 + path_size, new_name_ptr );
                           9267 ;	genPlus
                           9268 ;	AOP_EXSTK for _main_data_part2_5_25
                           9269 ;	AOP_EXSTK for _main_path_size_6_27
                           9270 ;	Shift into pair idx 0
   24D4 21 10 00           9271 	ld	hl,#16
   24D7 39                 9272 	add	hl,sp
   24D8 FD 21 11 00        9273 	ld	iy,#17
   24DC FD 39              9274 	add	iy,sp
   24DE FD 7E 00           9275 	ld	a,0(iy)
   24E1 86                 9276 	add	a,(hl)
   24E2 4F                 9277 	ld	c,a
   24E3 FD 7E 01           9278 	ld	a,1(iy)
   24E6 CE 00              9279 	adc	a,#0x00
   24E8 47                 9280 	ld	b,a
                           9281 ;	genIpush
                           9282 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           9283 ;	AOP_EXSTK for _main_new_name_ptr_6_27
   24E9 FD 21 0E 00        9284 	ld	iy,#14
   24ED FD 39              9285 	add	iy,sp
   24EF FD 6E 00           9286 	ld	l,0(iy)
   24F2 FD 66 01           9287 	ld	h,1(iy)
   24F5 E5                 9288 	push	hl
                           9289 ;	genIpush
   24F6 C5                 9290 	push	bc
                           9291 ;	genCall
   24F7 CDr00s00           9292 	call	_strcpy
   24FA F1                 9293 	pop	af
   24FB F1                 9294 	pop	af
                           9295 ;	genLabel
   24FC                    9296 00178$:
                           9297 ;main.c:1189: pport_send( PP_CMD_FCTL( PP_FCTL_RENAME ), 0x40, ddata );
                           9298 ;	genIpush
                           9299 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           9300 ;	AOP_EXSTK for _main_sloc2_1_0
   24FC FD 21 06 00        9301 	ld	iy,#6
   2500 FD 39              9302 	add	iy,sp
   2502 FD 6E 00           9303 	ld	l,0(iy)
   2505 FD 66 01           9304 	ld	h,1(iy)
   2508 E5                 9305 	push	hl
                           9306 ;	genIpush
   2509 21 40 00           9307 	ld	hl,#0x0040
   250C E5                 9308 	push	hl
                           9309 ;	genIpush
   250D 21 08 78           9310 	ld	hl,#0x7808
   2510 E5                 9311 	push	hl
                           9312 ;	genCall
   2511 CDrB9s03           9313 	call	_pport_send
   2514 F1                 9314 	pop	af
   2515 F1                 9315 	pop	af
   2516 F1                 9316 	pop	af
                           9317 ;main.c:1190: pport_receive( 0, 0 );
                           9318 ;	genIpush
                           9319 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2517 21 00 00           9320 	ld	hl,#0x0000
   251A E5                 9321 	push	hl
                           9322 ;	genIpush
   251B 21 00 00           9323 	ld	hl,#0x0000
   251E E5                 9324 	push	hl
                           9325 ;	genCall
   251F CDr4Fs04           9326 	call	_pport_receive
   2522 F1                 9327 	pop	af
   2523 F1                 9328 	pop	af
                           9329 ;main.c:1195: read_dir();
                           9330 ;	genCall
                           9331 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2524 CDrDEs0B           9332 	call	_read_dir
                           9333 ;main.c:1197: files_sel = old_sel;
                           9334 ;	genAssign
                           9335 ;	AOP_EXSTK for _main_old_sel_5_25
   2527 FD 21 15 00        9336 	ld	iy,#21
   252B FD 39              9337 	add	iy,sp
   252D FD 7E 00           9338 	ld	a,0(iy)
   2530 FD 21r04s38        9339 	ld	iy,#_files_sel
   2534 FD 77 00           9340 	ld	0(iy),a
   2537 FD 21 15 00        9341 	ld	iy,#21
   253B FD 39              9342 	add	iy,sp
   253D FD 7E 01           9343 	ld	a,1(iy)
   2540 FD 21r04s38        9344 	ld	iy,#_files_sel
   2544 FD 77 01           9345 	ld	1(iy),a
                           9346 ;main.c:1198: files_table_start = old_files_table_start;
                           9347 ;	genAssign
                           9348 ;	AOP_EXSTK for _main_old_files_table_start_5_25
   2547 FD 21 13 00        9349 	ld	iy,#19
   254B FD 39              9350 	add	iy,sp
   254D FD 7E 00           9351 	ld	a,0(iy)
   2550 FD 21r02s38        9352 	ld	iy,#_files_table_start
   2554 FD 77 00           9353 	ld	0(iy),a
   2557 FD 21 13 00        9354 	ld	iy,#19
   255B FD 39              9355 	add	iy,sp
   255D FD 7E 01           9356 	ld	a,1(iy)
   2560 FD 21r02s38        9357 	ld	iy,#_files_table_start
   2564 FD 77 01           9358 	ld	1(iy),a
                           9359 ;	genLabel
   2567                    9360 00184$:
                           9361 ;main.c:1202: show_table();
                           9362 ;	genCall
                           9363 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2567 CDrA8s06           9364 	call	_show_table
                           9365 ;main.c:1203: show_sel();
                           9366 ;	genCall
                           9367 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   256A CDr2Es15           9368 	call	_show_sel
                           9369 ;	genGoto
   256D C3rCBs19           9370 	jp	00217$
                           9371 ;	genLabel
   2570                    9372 00188$:
                           9373 ;main.c:1205: else if ( key == 0x87 )
                           9374 ;	genCmpEq
                           9375 ;	AOP_STK for _main_key_2_2
                           9376 ; genCmpEq: left 1, right 1, result 0
   2570 DD 7E AF           9377 	ld	a,-81(ix)
   2573 D6 87              9378 	sub	a,#0x87
   2575 28 03              9379 	jr	Z,00322$
   2577 C3rCBs19           9380 	jp	00217$
   257A                    9381 00322$:
                           9382 ;main.c:1207: word flags = get_flags();
                           9383 ;	genCall
                           9384 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   257A CDr97s16           9385 	call	_get_flags
   257D 44                 9386 	ld	b,h
   257E 4D                 9387 	ld	c,l
                           9388 ;main.c:1208: flags ^= CFG_FLG_STROM1;
                           9389 ;	genXor
                           9390 ;	AOP_EXSTK for _main_flags_3_30
   257F 79                 9391 	ld	a,c
   2580 EE 20              9392 	xor	a,#0x20
   2582 FD 21 0C 00        9393 	ld	iy,#12
   2586 FD 39              9394 	add	iy,sp
   2588 FD 77 00           9395 	ld	0(iy),a
   258B FD 70 01           9396 	ld	1(iy),b
                           9397 ;main.c:1209: pport_send( PP_CMD_FCTL( PP_FCTL_CFG_SFLAGS ), sizeof( flags ), &flags );
                           9398 ;	genAddrOf
   258E 21 0C 00           9399 	ld	hl,#0x000C
   2591 39                 9400 	add	hl,sp
   2592 4D                 9401 	ld	c,l
   2593 44                 9402 	ld	b,h
                           9403 ;	genIpush
                           9404 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   2594 C5                 9405 	push	bc
                           9406 ;	genIpush
   2595 21 02 00           9407 	ld	hl,#0x0002
   2598 E5                 9408 	push	hl
                           9409 ;	genIpush
   2599 21 22 78           9410 	ld	hl,#0x7822
   259C E5                 9411 	push	hl
                           9412 ;	genCall
   259D CDrB9s03           9413 	call	_pport_send
   25A0 F1                 9414 	pop	af
   25A1 F1                 9415 	pop	af
   25A2 F1                 9416 	pop	af
                           9417 ;main.c:1210: pport_receive( 0, 0 );
                           9418 ;	genIpush
                           9419 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   25A3 21 00 00           9420 	ld	hl,#0x0000
   25A6 E5                 9421 	push	hl
                           9422 ;	genIpush
   25A7 21 00 00           9423 	ld	hl,#0x0000
   25AA E5                 9424 	push	hl
                           9425 ;	genCall
   25AB CDr4Fs04           9426 	call	_pport_receive
   25AE F1                 9427 	pop	af
   25AF F1                 9428 	pop	af
                           9429 ;main.c:1213: init_screen();
                           9430 ;	genCall
                           9431 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   25B0 CDrDDs18           9432 	call	_init_screen
                           9433 ;main.c:1214: update_disks( 4 );
                           9434 ;	genIpush
                           9435 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   25B3 3E 04              9436 	ld	a,#0x04
   25B5 F5                 9437 	push	af
   25B6 33                 9438 	inc	sp
                           9439 ;	genCall
   25B7 CDrEAs16           9440 	call	_update_disks
   25BA 33                 9441 	inc	sp
                           9442 ;main.c:1215: show_table();
                           9443 ;	genCall
                           9444 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   25BB CDrA8s06           9445 	call	_show_table
                           9446 ;	genGoto
   25BE C3rCBs19           9447 	jp	00217$
                           9448 ;	genLabel
   25C1                    9449 00218$:
                           9450 ;main.c:1219: pport_send( PP_CMD_FCTL( PP_FCTL_OPEN ), 0x40, tap_path );
                           9451 ;	genIpush
                           9452 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           9453 ;	AOP_EXSTK for _main_sloc3_1_0
   25C1 FD 21 04 00        9454 	ld	iy,#4
   25C5 FD 39              9455 	add	iy,sp
   25C7 FD 6E 00           9456 	ld	l,0(iy)
   25CA FD 66 01           9457 	ld	h,1(iy)
   25CD E5                 9458 	push	hl
                           9459 ;	genIpush
   25CE 21 40 00           9460 	ld	hl,#0x0040
   25D1 E5                 9461 	push	hl
                           9462 ;	genIpush
   25D2 21 02 78           9463 	ld	hl,#0x7802
   25D5 E5                 9464 	push	hl
                           9465 ;	genCall
   25D6 CDrB9s03           9466 	call	_pport_send
   25D9 F1                 9467 	pop	af
   25DA F1                 9468 	pop	af
   25DB F1                 9469 	pop	af
                           9470 ;main.c:1220: pport_receive( 0, 0 );
                           9471 ;	genIpush
                           9472 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   25DC 21 00 00           9473 	ld	hl,#0x0000
   25DF E5                 9474 	push	hl
                           9475 ;	genIpush
   25E0 21 00 00           9476 	ld	hl,#0x0000
   25E3 E5                 9477 	push	hl
                           9478 ;	genCall
   25E4 CDr4Fs04           9479 	call	_pport_receive
   25E7 F1                 9480 	pop	af
   25E8 F1                 9481 	pop	af
                           9482 ;main.c:1221: pport_close();
                           9483 ;	genCall
                           9484 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   25E9 CDr44s05           9485 	call	_pport_close
                           9486 ;main.c:1223: halt();
                           9487 ;	genCall
                           9488 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   25EC CDrACs02           9489 	call	_halt
                           9490 ;	genLabel
                           9491 ;	genEndFunction
   25EF DD F9              9492 	ld	sp,ix
   25F1 DD E1              9493 	pop	ix
   25F3 C9                 9494 	ret
   25F4                    9495 _main_end::
   25F4                    9496 __str_23:
   25F4 62 6F 6F 74 2E 74  9497 	.ascii "boot.tap"
        61 70
   25FC 00                 9498 	.db 0x00
   25FD                    9499 __str_24:
   25FD 00                 9500 	.db 0x00
   25FE                    9501 __str_25:
   25FE 2E 2E              9502 	.ascii ".."
   2600 00                 9503 	.db 0x00
   2601                    9504 __str_26:
   2601 2F                 9505 	.ascii "/"
   2602 00                 9506 	.db 0x00
   2603                    9507 __str_27:
   2603 74 61 70           9508 	.ascii "tap"
   2606 00                 9509 	.db 0x00
   2607                    9510 __str_28:
   2607 74 7A 78           9511 	.ascii "tzx"
   260A 00                 9512 	.db 0x00
   260B                    9513 __str_29:
   260B 73 63 72           9514 	.ascii "scr"
   260E 00                 9515 	.db 0x00
   260F                    9516 __str_30:
   260F 73 6E 61           9517 	.ascii "sna"
   2612 00                 9518 	.db 0x00
   2613                    9519 __str_31:
   2613 74 72 64           9520 	.ascii "trd"
   2616 00                 9521 	.db 0x00
   2617                    9522 __str_32:
   2617 66 64 69           9523 	.ascii "fdi"
   261A 00                 9524 	.db 0x00
   261B                    9525 __str_33:
   261B 73 63 6C           9526 	.ascii "scl"
   261E 00                 9527 	.db 0x00
   261F                    9528 __str_34:
   261F 44 65 6C 65 74 65  9529 	.ascii "Delete "
        20
   2626 22                 9530 	.db 0x22
   2627 00                 9531 	.db 0x00
   2628                    9532 __str_35:
   2628 22                 9533 	.db 0x22
   2629 3F                 9534 	.ascii "?"
   262A 00                 9535 	.db 0x00
   262B                    9536 __str_36:
   262B 41 43 43 45 53 53  9537 	.ascii "ACCESS DENIED"
        20 44 45 4E 49 45
        44
   2638 00                 9538 	.db 0x00
   2639                    9539 __str_37:
   2639 4E 65 77 20 66 69  9540 	.ascii "New filename"
        6C 65 6E 61 6D 65
   2645 00                 9541 	.db 0x00
   2646                    9542 __str_38:
   2646 5F                 9543 	.ascii "_"
   2647 00                 9544 	.db 0x00
                           9545 	.area _CODE
                           9546 	.area _CABS
